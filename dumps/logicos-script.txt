#
# color script
#
wait 1
0333		# [frame 0000] 0:333
1444		# [frame 0000] 1:444
2999		# [frame 0000] 2:999
3fff		# [frame 0000] 3:fff
4000		# [frame 0000] 4:000
5666		# [frame 0000] 5:666
6aaa		# [frame 0000] 6:aaa
7ccc		# [frame 0000] 7:ccc
0333		# [frame 0000] 0:333
1444		# [frame 0000] 1:444
2999		# [frame 0000] 2:999
3fff		# [frame 0000] 3:fff
4000		# [frame 0000] 4:000
5333		# [frame 0000] 5:333
6aaa		# [frame 0000] 6:aaa
7ccc		# [frame 0000] 7:ccc
wait 960
6aaa		# [frame 0960] 6:aaa
wait 2
6999		# [frame 0962] 6:999
wait 3
6888		# [frame 0965] 6:888
wait 3
6777		# [frame 0968] 6:777
wait 3
6666		# [frame 0971] 6:666
wait 2
6555		# [frame 0973] 6:555
wait 3
6444		# [frame 0976] 6:444
wait 3
6333		# [frame 0979] 6:333
wait 3
6444		# [frame 0982] 6:444
wait 3
6555		# [frame 0985] 6:555
wait 3
6666		# [frame 0988] 6:666
wait 2
6777		# [frame 0990] 6:777
wait 3
6888		# [frame 0993] 6:888
wait 3
6999		# [frame 0996] 6:999
wait 3
6aaa		# [frame 0999] 6:aaa
wait 3
6999		# [frame 1002] 6:999
wait 3
6888		# [frame 1005] 6:888
wait 3
6777		# [frame 1008] 6:777
wait 3
6666		# [frame 1011] 6:666
wait 2
6555		# [frame 1013] 6:555
wait 3
6444		# [frame 1016] 6:444
wait 3
6333		# [frame 1019] 6:333
wait 3
6444		# [frame 1022] 6:444
wait 3
6555		# [frame 1025] 6:555
wait 3
6666		# [frame 1028] 6:666
wait 2
6777		# [frame 1030] 6:777
wait 3
6888		# [frame 1033] 6:888
wait 3
6999		# [frame 1036] 6:999
wait 3
6aaa		# [frame 1039] 6:aaa
wait 3
6999		# [frame 1042] 6:999
wait 3
6888		# [frame 1045] 6:888
wait 3
6777		# [frame 1048] 6:777
wait 3
6666		# [frame 1051] 6:666
wait 2
6555		# [frame 1053] 6:555
wait 3
6444		# [frame 1056] 6:444
wait 3
6333		# [frame 1059] 6:333
wait 3
6444		# [frame 1062] 6:444
wait 3
6555		# [frame 1065] 6:555
wait 3
6666		# [frame 1068] 6:666
wait 2
6777		# [frame 1070] 6:777
wait 3
6888		# [frame 1073] 6:888
wait 3
6999		# [frame 1076] 6:999
wait 3
6aaa		# [frame 1079] 6:aaa
wait 3
6999		# [frame 1082] 6:999
wait 3
6888		# [frame 1085] 6:888
wait 3
6777		# [frame 1088] 6:777
wait 3
6666		# [frame 1091] 6:666
wait 2
6555		# [frame 1093] 6:555
wait 3
6444		# [frame 1096] 6:444
wait 3
6333		# [frame 1099] 6:333
wait 3
6444		# [frame 1102] 6:444
wait 3
6555		# [frame 1105] 6:555
wait 3
6666		# [frame 1108] 6:666
wait 2
6777		# [frame 1110] 6:777
wait 3
6888		# [frame 1113] 6:888
wait 3
6999		# [frame 1116] 6:999
wait 3
6aaa		# [frame 1119] 6:aaa
wait 3
6999		# [frame 1122] 6:999
wait 3
6888		# [frame 1125] 6:888
wait 3
6777		# [frame 1128] 6:777
wait 3
6666		# [frame 1131] 6:666
wait 2
6555		# [frame 1133] 6:555
wait 3
6444		# [frame 1136] 6:444
wait 3
6333		# [frame 1139] 6:333
wait 3
6444		# [frame 1142] 6:444
wait 3
6555		# [frame 1145] 6:555
wait 3
6666		# [frame 1148] 6:666
wait 2
6777		# [frame 1150] 6:777
wait 3
6888		# [frame 1153] 6:888
wait 3
6999		# [frame 1156] 6:999
wait 3
6aaa		# [frame 1159] 6:aaa
wait 3
6999		# [frame 1162] 6:999
wait 3
6888		# [frame 1165] 6:888
wait 3
6777		# [frame 1168] 6:777
wait 3
6666		# [frame 1171] 6:666
wait 2
6555		# [frame 1173] 6:555
wait 3
6444		# [frame 1176] 6:444
wait 3
6333		# [frame 1179] 6:333
wait 3
6444		# [frame 1182] 6:444
wait 3
6555		# [frame 1185] 6:555
wait 3
6666		# [frame 1188] 6:666
wait 2
6777		# [frame 1190] 6:777
wait 3
6888		# [frame 1193] 6:888
wait 3
6999		# [frame 1196] 6:999
wait 3
6aaa		# [frame 1199] 6:aaa
wait 3
6999		# [frame 1202] 6:999
wait 3
6888		# [frame 1205] 6:888
wait 3
6777		# [frame 1208] 6:777
wait 3
6666		# [frame 1211] 6:666
wait 2
6555		# [frame 1213] 6:555
wait 3
6444		# [frame 1216] 6:444
wait 3
6333		# [frame 1219] 6:333
wait 3
6444		# [frame 1222] 6:444
wait 3
6555		# [frame 1225] 6:555
wait 3
6666		# [frame 1228] 6:666
wait 2
6777		# [frame 1230] 6:777
wait 3
6888		# [frame 1233] 6:888
wait 3
6999		# [frame 1236] 6:999
wait 3
6aaa		# [frame 1239] 6:aaa
wait 3
6999		# [frame 1242] 6:999
wait 3
6888		# [frame 1245] 6:888
wait 3
6777		# [frame 1248] 6:777
wait 3
6666		# [frame 1251] 6:666
wait 2
6555		# [frame 1253] 6:555
wait 3
6444		# [frame 1256] 6:444
wait 3
6333		# [frame 1259] 6:333
wait 3
6444		# [frame 1262] 6:444
wait 3
6555		# [frame 1265] 6:555
wait 3
6666		# [frame 1268] 6:666
wait 2
6777		# [frame 1270] 6:777
wait 3
6888		# [frame 1273] 6:888
wait 3
6999		# [frame 1276] 6:999
wait 3
6aaa		# [frame 1279] 6:aaa
wait 3
6999		# [frame 1282] 6:999
wait 3
6888		# [frame 1285] 6:888
wait 3
6777		# [frame 1288] 6:777
wait 3
6666		# [frame 1291] 6:666
wait 2
6555		# [frame 1293] 6:555
wait 3
6444		# [frame 1296] 6:444
wait 3
6333		# [frame 1299] 6:333
wait 3
6444		# [frame 1302] 6:444
wait 3
6555		# [frame 1305] 6:555
wait 3
6666		# [frame 1308] 6:666
wait 2
6777		# [frame 1310] 6:777
wait 3
6888		# [frame 1313] 6:888
wait 3
6999		# [frame 1316] 6:999
wait 3
6aaa		# [frame 1319] 6:aaa
wait 3
6999		# [frame 1322] 6:999
wait 3
6888		# [frame 1325] 6:888
wait 3
6777		# [frame 1328] 6:777
wait 3
6666		# [frame 1331] 6:666
wait 2
6555		# [frame 1333] 6:555
wait 3
6444		# [frame 1336] 6:444
wait 3
6333		# [frame 1339] 6:333
wait 3
6444		# [frame 1342] 6:444
wait 3
6555		# [frame 1345] 6:555
wait 3
6666		# [frame 1348] 6:666
wait 2
6777		# [frame 1350] 6:777
wait 3
6888		# [frame 1353] 6:888
wait 3
6999		# [frame 1356] 6:999
wait 3
6aaa		# [frame 1359] 6:aaa
wait 3
6999		# [frame 1362] 6:999
wait 3
6888		# [frame 1365] 6:888
wait 3
6777		# [frame 1368] 6:777
wait 3
6666		# [frame 1371] 6:666
wait 2
6555		# [frame 1373] 6:555
wait 3
6444		# [frame 1376] 6:444
wait 3
6333		# [frame 1379] 6:333
wait 3
6444		# [frame 1382] 6:444
wait 3
6555		# [frame 1385] 6:555
wait 3
6666		# [frame 1388] 6:666
wait 2
6777		# [frame 1390] 6:777
wait 3
6888		# [frame 1393] 6:888
wait 3
6999		# [frame 1396] 6:999
wait 3
6aaa		# [frame 1399] 6:aaa
wait 3
6999		# [frame 1402] 6:999
wait 3
6888		# [frame 1405] 6:888
wait 3
6777		# [frame 1408] 6:777
wait 3
6666		# [frame 1411] 6:666
wait 2
6555		# [frame 1413] 6:555
wait 3
6444		# [frame 1416] 6:444
wait 3
6333		# [frame 1419] 6:333
wait 3
6444		# [frame 1422] 6:444
wait 3
6555		# [frame 1425] 6:555
wait 3
6666		# [frame 1428] 6:666
wait 2
6777		# [frame 1430] 6:777
wait 3
6888		# [frame 1433] 6:888
wait 3
6999		# [frame 1436] 6:999
wait 3
6aaa		# [frame 1439] 6:aaa
wait 3
6999		# [frame 1442] 6:999
wait 3
6888		# [frame 1445] 6:888
wait 3
6777		# [frame 1448] 6:777
wait 3
6666		# [frame 1451] 6:666
wait 2
6555		# [frame 1453] 6:555
wait 3
6444		# [frame 1456] 6:444
wait 3
6333		# [frame 1459] 6:333
wait 3
6444		# [frame 1462] 6:444
wait 3
6555		# [frame 1465] 6:555
wait 3
6666		# [frame 1468] 6:666
wait 2
6777		# [frame 1470] 6:777
wait 3
6888		# [frame 1473] 6:888
wait 3
6999		# [frame 1476] 6:999
wait 3
6aaa		# [frame 1479] 6:aaa
wait 3
6999		# [frame 1482] 6:999
wait 3
6888		# [frame 1485] 6:888
wait 3
6777		# [frame 1488] 6:777
wait 3
6666		# [frame 1491] 6:666
wait 2
6555		# [frame 1493] 6:555
wait 3
6444		# [frame 1496] 6:444
wait 3
6333		# [frame 1499] 6:333
wait 3
6444		# [frame 1502] 6:444
wait 3
6555		# [frame 1505] 6:555
wait 3
6666		# [frame 1508] 6:666
wait 2
6777		# [frame 1510] 6:777
wait 3
6888		# [frame 1513] 6:888
wait 3
6999		# [frame 1516] 6:999
wait 3
6aaa		# [frame 1519] 6:aaa
wait 3
6999		# [frame 1522] 6:999
wait 3
6888		# [frame 1525] 6:888
wait 3
6777		# [frame 1528] 6:777
wait 3
6666		# [frame 1531] 6:666
wait 2
6555		# [frame 1533] 6:555
wait 3
6444		# [frame 1536] 6:444
wait 3
6333		# [frame 1539] 6:333
wait 3
6444		# [frame 1542] 6:444
wait 3
6555		# [frame 1545] 6:555
wait 3
6666		# [frame 1548] 6:666
wait 2
6777		# [frame 1550] 6:777
wait 3
6888		# [frame 1553] 6:888
wait 3
6999		# [frame 1556] 6:999
wait 3
6aaa		# [frame 1559] 6:aaa
wait 3
6999		# [frame 1562] 6:999
wait 3
6888		# [frame 1565] 6:888
wait 3
6777		# [frame 1568] 6:777
wait 3
6666		# [frame 1571] 6:666
wait 2
6555		# [frame 1573] 6:555
wait 3
6444		# [frame 1576] 6:444
wait 3
6333		# [frame 1579] 6:333
wait 3
6444		# [frame 1582] 6:444
wait 3
6555		# [frame 1585] 6:555
wait 3
6666		# [frame 1588] 6:666
wait 2
6777		# [frame 1590] 6:777
wait 3
6888		# [frame 1593] 6:888
wait 3
6999		# [frame 1596] 6:999
wait 3
6aaa		# [frame 1599] 6:aaa
wait 3
6999		# [frame 1602] 6:999
wait 3
6888		# [frame 1605] 6:888
wait 3
6777		# [frame 1608] 6:777
wait 3
6666		# [frame 1611] 6:666
wait 2
6555		# [frame 1613] 6:555
wait 3
6444		# [frame 1616] 6:444
wait 3
6333		# [frame 1619] 6:333
wait 3
6444		# [frame 1622] 6:444
wait 3
6555		# [frame 1625] 6:555
wait 3
6666		# [frame 1628] 6:666
wait 2
6777		# [frame 1630] 6:777
wait 3
6888		# [frame 1633] 6:888
wait 3
6999		# [frame 1636] 6:999
wait 3
6aaa		# [frame 1639] 6:aaa
wait 3
6999		# [frame 1642] 6:999
wait 3
6888		# [frame 1645] 6:888
wait 3
6777		# [frame 1648] 6:777
wait 3
6666		# [frame 1651] 6:666
wait 2
6555		# [frame 1653] 6:555
wait 3
6444		# [frame 1656] 6:444
wait 3
6333		# [frame 1659] 6:333
wait 3
6444		# [frame 1662] 6:444
wait 3
6555		# [frame 1665] 6:555
wait 3
6666		# [frame 1668] 6:666
wait 2
6777		# [frame 1670] 6:777
wait 3
6888		# [frame 1673] 6:888
wait 3
6999		# [frame 1676] 6:999
wait 3
6aaa		# [frame 1679] 6:aaa
wait 3
6999		# [frame 1682] 6:999
wait 3
6888		# [frame 1685] 6:888
wait 3
6777		# [frame 1688] 6:777
wait 3
6666		# [frame 1691] 6:666
wait 2
6555		# [frame 1693] 6:555
wait 3
6444		# [frame 1696] 6:444
wait 3
6333		# [frame 1699] 6:333
wait 3
6444		# [frame 1702] 6:444
wait 3
6555		# [frame 1705] 6:555
wait 3
6666		# [frame 1708] 6:666
wait 2
6777		# [frame 1710] 6:777
wait 3
6888		# [frame 1713] 6:888
wait 3
6999		# [frame 1716] 6:999
wait 3
6aaa		# [frame 1719] 6:aaa
wait 3
6999		# [frame 1722] 6:999
wait 3
6888		# [frame 1725] 6:888
wait 3
6777		# [frame 1728] 6:777
wait 3
6666		# [frame 1731] 6:666
wait 2
6555		# [frame 1733] 6:555
wait 3
6444		# [frame 1736] 6:444
wait 3
6333		# [frame 1739] 6:333
wait 3
6444		# [frame 1742] 6:444
wait 3
6555		# [frame 1745] 6:555
wait 3
6666		# [frame 1748] 6:666
wait 2
6777		# [frame 1750] 6:777
wait 3
6888		# [frame 1753] 6:888
wait 3
6999		# [frame 1756] 6:999
wait 3
6aaa		# [frame 1759] 6:aaa
wait 3
6999		# [frame 1762] 6:999
wait 3
6888		# [frame 1765] 6:888
wait 3
6777		# [frame 1768] 6:777
wait 3
6666		# [frame 1771] 6:666
wait 2
6555		# [frame 1773] 6:555
wait 3
6444		# [frame 1776] 6:444
wait 3
6333		# [frame 1779] 6:333
wait 3
6444		# [frame 1782] 6:444
wait 3
6555		# [frame 1785] 6:555
wait 3
6666		# [frame 1788] 6:666
wait 2
6777		# [frame 1790] 6:777
wait 3
6888		# [frame 1793] 6:888
wait 3
6999		# [frame 1796] 6:999
wait 3
6aaa		# [frame 1799] 6:aaa
wait 3
6999		# [frame 1802] 6:999
wait 3
6888		# [frame 1805] 6:888
wait 3
6777		# [frame 1808] 6:777
wait 3
6666		# [frame 1811] 6:666
wait 2
6555		# [frame 1813] 6:555
wait 3
6444		# [frame 1816] 6:444
wait 3
6333		# [frame 1819] 6:333
wait 21
5666		# [frame 1840] 5:666
6aaa		# [frame 1840] 6:aaa
wait 320
0333		# [frame 2160] 0:333
1777		# [frame 2160] 1:777
2999		# [frame 2160] 2:999
3fff		# [frame 2160] 3:fff
4000		# [frame 2160] 4:000
5666		# [frame 2160] 5:666
6aaa		# [frame 2160] 6:aaa
7ccc		# [frame 2160] 7:ccc
wait 165
148b		# [frame 2325] 1:48b
wait 1
1777		# [frame 2326] 1:777
wait 1
148b		# [frame 2327] 1:48b
wait 1
1777		# [frame 2328] 1:777
wait 1
148b		# [frame 2329] 1:48b
wait 1
1777		# [frame 2330] 1:777
wait 1
148b		# [frame 2331] 1:48b
wait 1
1777		# [frame 2332] 1:777
wait 1
148b		# [frame 2333] 1:48b
wait 1
1777		# [frame 2334] 1:777
wait 1
148b		# [frame 2335] 1:48b
wait 1
1777		# [frame 2336] 1:777
wait 1
148b		# [frame 2337] 1:48b
wait 1
1777		# [frame 2338] 1:777
wait 1
148b		# [frame 2339] 1:48b
wait 1
1777		# [frame 2340] 1:777
wait 1
148b		# [frame 2341] 1:48b
wait 1
1777		# [frame 2342] 1:777
wait 1
148b		# [frame 2343] 1:48b
wait 1
1777		# [frame 2344] 1:777
wait 31
0333		# [frame 2375] 0:333
1444		# [frame 2375] 1:444
2999		# [frame 2375] 2:999
3777		# [frame 2375] 3:777
4000		# [frame 2375] 4:000
5666		# [frame 2375] 5:666
6aaa		# [frame 2375] 6:aaa
7ccc		# [frame 2375] 7:ccc
wait 40
3fff		# [frame 2415] 3:fff
wait 1
3eee		# [frame 2416] 3:eee
wait 1
3ddd		# [frame 2417] 3:ddd
wait 2
3ccc		# [frame 2419] 3:ccc
wait 1
3bbb		# [frame 2420] 3:bbb
wait 1
3aaa		# [frame 2421] 3:aaa
wait 1
3999		# [frame 2422] 3:999
wait 2
3888		# [frame 2424] 3:888
wait 1
3777		# [frame 2425] 3:777
wait 70
3fff		# [frame 2495] 3:fff
wait 1
3eee		# [frame 2496] 3:eee
wait 1
3ddd		# [frame 2497] 3:ddd
wait 2
3ccc		# [frame 2499] 3:ccc
wait 1
3bbb		# [frame 2500] 3:bbb
wait 1
3aaa		# [frame 2501] 3:aaa
wait 1
3999		# [frame 2502] 3:999
wait 2
3888		# [frame 2504] 3:888
wait 1
3777		# [frame 2505] 3:777
wait 55
3fff		# [frame 2560] 3:fff
wait 55
0333		# [frame 2615] 0:333
1444		# [frame 2615] 1:444
2999		# [frame 2615] 2:999
3fff		# [frame 2615] 3:fff
4000		# [frame 2615] 4:000
5666		# [frame 2615] 5:666
6aaa		# [frame 2615] 6:aaa
7ccc		# [frame 2615] 7:ccc
wait 386
148b		# [frame 3001] 1:48b
wait 1
147a		# [frame 3002] 1:47a
wait 1
1479		# [frame 3003] 1:479
wait 1
1468		# [frame 3004] 1:468
wait 1
1456		# [frame 3005] 1:456
wait 1
1455		# [frame 3006] 1:455
wait 1
1444		# [frame 3007] 1:444
wait 6
148b		# [frame 3013] 1:48b
wait 1
147a		# [frame 3014] 1:47a
wait 1
1479		# [frame 3015] 1:479
wait 1
1468		# [frame 3016] 1:468
wait 1
1456		# [frame 3017] 1:456
wait 1
1455		# [frame 3018] 1:455
wait 1
1444		# [frame 3019] 1:444
wait 6
148b		# [frame 3025] 1:48b
wait 1
147a		# [frame 3026] 1:47a
wait 1
1479		# [frame 3027] 1:479
wait 1
1468		# [frame 3028] 1:468
wait 1
1456		# [frame 3029] 1:456
wait 1
1455		# [frame 3030] 1:455
wait 1
1444		# [frame 3031] 1:444
wait 6
148b		# [frame 3037] 1:48b
wait 1
147a		# [frame 3038] 1:47a
wait 1
1479		# [frame 3039] 1:479
wait 1
1468		# [frame 3040] 1:468
wait 1
1456		# [frame 3041] 1:456
wait 1
1455		# [frame 3042] 1:455
wait 1
1444		# [frame 3043] 1:444
wait 310
0333		# [frame 3353] 0:333
1777		# [frame 3353] 1:777
2999		# [frame 3353] 2:999
3fff		# [frame 3353] 3:fff
4000		# [frame 3353] 4:000
5666		# [frame 3353] 5:666
6aaa		# [frame 3353] 6:aaa
7ccc		# [frame 3353] 7:ccc
wait 105
148b		# [frame 3458] 1:48b
wait 1
1777		# [frame 3459] 1:777
wait 1
148b		# [frame 3460] 1:48b
wait 1
1777		# [frame 3461] 1:777
wait 1
148b		# [frame 3462] 1:48b
wait 1
1777		# [frame 3463] 1:777
wait 1
148b		# [frame 3464] 1:48b
wait 1
1777		# [frame 3465] 1:777
wait 1
148b		# [frame 3466] 1:48b
wait 1
1777		# [frame 3467] 1:777
wait 1
148b		# [frame 3468] 1:48b
wait 1
1777		# [frame 3469] 1:777
wait 1
148b		# [frame 3470] 1:48b
wait 1
1777		# [frame 3471] 1:777
wait 1
148b		# [frame 3472] 1:48b
wait 1
1777		# [frame 3473] 1:777
wait 1
148b		# [frame 3474] 1:48b
wait 1
1777		# [frame 3475] 1:777
wait 1
148b		# [frame 3476] 1:48b
wait 1
1777		# [frame 3477] 1:777
wait 36
0333		# [frame 3513] 0:333
1444		# [frame 3513] 1:444
2999		# [frame 3513] 2:999
3777		# [frame 3513] 3:777
4000		# [frame 3513] 4:000
5666		# [frame 3513] 5:666
6aaa		# [frame 3513] 6:aaa
7ccc		# [frame 3513] 7:ccc
wait 40
3fff		# [frame 3553] 3:fff
wait 1
3eee		# [frame 3554] 3:eee
wait 1
3ddd		# [frame 3555] 3:ddd
wait 2
3ccc		# [frame 3557] 3:ccc
wait 1
3bbb		# [frame 3558] 3:bbb
wait 1
3aaa		# [frame 3559] 3:aaa
wait 1
3999		# [frame 3560] 3:999
wait 2
3888		# [frame 3562] 3:888
wait 1
3777		# [frame 3563] 3:777
wait 70
3fff		# [frame 3633] 3:fff
wait 1
3eee		# [frame 3634] 3:eee
wait 1
3ddd		# [frame 3635] 3:ddd
wait 2
3ccc		# [frame 3637] 3:ccc
wait 1
3bbb		# [frame 3638] 3:bbb
wait 1
3aaa		# [frame 3639] 3:aaa
wait 1
3999		# [frame 3640] 3:999
wait 2
3888		# [frame 3642] 3:888
wait 1
3777		# [frame 3643] 3:777
wait 55
3fff		# [frame 3698] 3:fff
wait 55
0333		# [frame 3753] 0:333
1444		# [frame 3753] 1:444
2999		# [frame 3753] 2:999
3fff		# [frame 3753] 3:fff
4000		# [frame 3753] 4:000
5666		# [frame 3753] 5:666
6aaa		# [frame 3753] 6:aaa
7ccc		# [frame 3753] 7:ccc
wait 280
148b		# [frame 4033] 1:48b
wait 1
1777		# [frame 4034] 1:777
wait 1
148b		# [frame 4035] 1:48b
wait 1
1777		# [frame 4036] 1:777
wait 1
148b		# [frame 4037] 1:48b
wait 1
1777		# [frame 4038] 1:777
wait 1
148b		# [frame 4039] 1:48b
wait 1
1777		# [frame 4040] 1:777
wait 1
148b		# [frame 4041] 1:48b
wait 1
1777		# [frame 4042] 1:777
wait 1
148b		# [frame 4043] 1:48b
wait 1
1777		# [frame 4044] 1:777
wait 1
148b		# [frame 4045] 1:48b
wait 1
1777		# [frame 4046] 1:777
wait 1
148b		# [frame 4047] 1:48b
wait 1
1777		# [frame 4048] 1:777
wait 1
148b		# [frame 4049] 1:48b
wait 1
1777		# [frame 4050] 1:777
wait 1
148b		# [frame 4051] 1:48b
wait 1
1777		# [frame 4052] 1:777
wait 701
0333		# [frame 4753] 0:333
1777		# [frame 4753] 1:777
2999		# [frame 4753] 2:999
3fff		# [frame 4753] 3:fff
4000		# [frame 4753] 4:000
5666		# [frame 4753] 5:666
6aaa		# [frame 4753] 6:aaa
7ccc		# [frame 4753] 7:ccc
wait 160
148b		# [frame 4913] 1:48b
wait 1
1777		# [frame 4914] 1:777
wait 1
148b		# [frame 4915] 1:48b
wait 1
1777		# [frame 4916] 1:777
wait 1
148b		# [frame 4917] 1:48b
wait 1
1777		# [frame 4918] 1:777
wait 1
148b		# [frame 4919] 1:48b
wait 1
1777		# [frame 4920] 1:777
wait 1
148b		# [frame 4921] 1:48b
wait 1
1777		# [frame 4922] 1:777
wait 1
148b		# [frame 4923] 1:48b
wait 1
1777		# [frame 4924] 1:777
wait 1
148b		# [frame 4925] 1:48b
wait 1
1777		# [frame 4926] 1:777
wait 1
148b		# [frame 4927] 1:48b
wait 1
1777		# [frame 4928] 1:777
wait 1
148b		# [frame 4929] 1:48b
wait 1
1777		# [frame 4930] 1:777
wait 1
148b		# [frame 4931] 1:48b
wait 1
1777		# [frame 4932] 1:777
wait 61
0333		# [frame 4993] 0:333
1444		# [frame 4993] 1:444
2999		# [frame 4993] 2:999
3777		# [frame 4993] 3:777
4000		# [frame 4993] 4:000
5666		# [frame 4993] 5:666
6aaa		# [frame 4993] 6:aaa
7ccc		# [frame 4993] 7:ccc
wait 40
3fff		# [frame 5033] 3:fff
wait 1
3eee		# [frame 5034] 3:eee
wait 1
3ddd		# [frame 5035] 3:ddd
wait 2
3ccc		# [frame 5037] 3:ccc
wait 1
3bbb		# [frame 5038] 3:bbb
wait 1
3aaa		# [frame 5039] 3:aaa
wait 1
3999		# [frame 5040] 3:999
wait 2
3888		# [frame 5042] 3:888
wait 1
3777		# [frame 5043] 3:777
wait 70
3fff		# [frame 5113] 3:fff
wait 1
3eee		# [frame 5114] 3:eee
wait 1
3ddd		# [frame 5115] 3:ddd
wait 2
3ccc		# [frame 5117] 3:ccc
wait 1
3bbb		# [frame 5118] 3:bbb
wait 1
3aaa		# [frame 5119] 3:aaa
wait 1
3999		# [frame 5120] 3:999
wait 2
3888		# [frame 5122] 3:888
wait 1
3777		# [frame 5123] 3:777
wait 55
3fff		# [frame 5178] 3:fff
wait 55
1777		# [frame 5233] 1:777
wait 1360
13f2		# [frame 6593] 1:3f2
wait 1
14d3		# [frame 6594] 1:4d3
wait 1
15c4		# [frame 6595] 1:5c4
wait 1
15a5		# [frame 6596] 1:5a5
wait 1
1696		# [frame 6597] 1:696
wait 1
1777		# [frame 6598] 1:777
wait 5
13f2		# [frame 6603] 1:3f2
wait 1
14d3		# [frame 6604] 1:4d3
wait 1
15c4		# [frame 6605] 1:5c4
wait 1
15a5		# [frame 6606] 1:5a5
wait 1
1696		# [frame 6607] 1:696
wait 1
1777		# [frame 6608] 1:777
wait 5
13f2		# [frame 6613] 1:3f2
wait 1
14d3		# [frame 6614] 1:4d3
wait 1
15c4		# [frame 6615] 1:5c4
wait 1
15a5		# [frame 6616] 1:5a5
wait 1
1696		# [frame 6617] 1:696
wait 1
1777		# [frame 6618] 1:777
wait 5
13f2		# [frame 6623] 1:3f2
wait 1
14d3		# [frame 6624] 1:4d3
wait 1
15c4		# [frame 6625] 1:5c4
wait 1
15a5		# [frame 6626] 1:5a5
wait 1
1696		# [frame 6627] 1:696
wait 1
1777		# [frame 6628] 1:777
wait 5
13f2		# [frame 6633] 1:3f2
wait 1
14d3		# [frame 6634] 1:4d3
wait 1
15c4		# [frame 6635] 1:5c4
wait 1
15a5		# [frame 6636] 1:5a5
wait 1
1696		# [frame 6637] 1:696
wait 1
1777		# [frame 6638] 1:777
wait 115
0333		# [frame 6753] 0:333
1777		# [frame 6753] 1:777
2999		# [frame 6753] 2:999
3fff		# [frame 6753] 3:fff
4000		# [frame 6753] 4:000
5666		# [frame 6753] 5:666
6aaa		# [frame 6753] 6:aaa
7ccc		# [frame 6753] 7:ccc
wait 130
148b		# [frame 6883] 1:48b
wait 1
1777		# [frame 6884] 1:777
wait 1
148b		# [frame 6885] 1:48b
wait 1
1777		# [frame 6886] 1:777
wait 1
148b		# [frame 6887] 1:48b
wait 1
1777		# [frame 6888] 1:777
wait 1
148b		# [frame 6889] 1:48b
wait 1
1777		# [frame 6890] 1:777
wait 1
148b		# [frame 6891] 1:48b
wait 1
1777		# [frame 6892] 1:777
wait 1
148b		# [frame 6893] 1:48b
wait 1
1777		# [frame 6894] 1:777
wait 1
148b		# [frame 6895] 1:48b
wait 1
1777		# [frame 6896] 1:777
wait 1
148b		# [frame 6897] 1:48b
wait 1
1777		# [frame 6898] 1:777
wait 1
148b		# [frame 6899] 1:48b
wait 1
1777		# [frame 6900] 1:777
wait 1
148b		# [frame 6901] 1:48b
wait 1
1777		# [frame 6902] 1:777
wait 51
0333		# [frame 6953] 0:333
1444		# [frame 6953] 1:444
2999		# [frame 6953] 2:999
3777		# [frame 6953] 3:777
4000		# [frame 6953] 4:000
5666		# [frame 6953] 5:666
6aaa		# [frame 6953] 6:aaa
7ccc		# [frame 6953] 7:ccc
wait 40
3fff		# [frame 6993] 3:fff
wait 1
3eee		# [frame 6994] 3:eee
wait 1
3ddd		# [frame 6995] 3:ddd
wait 2
3ccc		# [frame 6997] 3:ccc
wait 1
3bbb		# [frame 6998] 3:bbb
wait 1
3aaa		# [frame 6999] 3:aaa
wait 1
3999		# [frame 7000] 3:999
wait 2
3888		# [frame 7002] 3:888
wait 1
3777		# [frame 7003] 3:777
wait 70
3fff		# [frame 7073] 3:fff
wait 1
3eee		# [frame 7074] 3:eee
wait 1
3ddd		# [frame 7075] 3:ddd
wait 2
3ccc		# [frame 7077] 3:ccc
wait 1
3bbb		# [frame 7078] 3:bbb
wait 1
3aaa		# [frame 7079] 3:aaa
wait 1
3999		# [frame 7080] 3:999
wait 2
3888		# [frame 7082] 3:888
wait 1
3777		# [frame 7083] 3:777
wait 55
3fff		# [frame 7138] 3:fff
wait 55
0333		# [frame 7193] 0:333
1444		# [frame 7193] 1:444
2999		# [frame 7193] 2:999
3fff		# [frame 7193] 3:fff
4000		# [frame 7193] 4:000
5666		# [frame 7193] 5:666
6aaa		# [frame 7193] 6:aaa
7ccc		# [frame 7193] 7:ccc
6777		# [frame 7193] 6:777
wait 270
148b		# [frame 7463] 1:48b
wait 1
1777		# [frame 7464] 1:777
wait 1
148b		# [frame 7465] 1:48b
wait 1
1777		# [frame 7466] 1:777
wait 1
148b		# [frame 7467] 1:48b
wait 1
1777		# [frame 7468] 1:777
wait 1
148b		# [frame 7469] 1:48b
wait 1
1777		# [frame 7470] 1:777
wait 1
148b		# [frame 7471] 1:48b
wait 1
1777		# [frame 7472] 1:777
wait 1
148b		# [frame 7473] 1:48b
wait 1
1777		# [frame 7474] 1:777
wait 1
148b		# [frame 7475] 1:48b
wait 1
1777		# [frame 7476] 1:777
wait 1
148b		# [frame 7477] 1:48b
wait 1
1777		# [frame 7478] 1:777
wait 1
148b		# [frame 7479] 1:48b
wait 1
1777		# [frame 7480] 1:777
wait 1
148b		# [frame 7481] 1:48b
wait 1
1777		# [frame 7482] 1:777
wait 1
0333		# [frame 7483] 0:333
1444		# [frame 7483] 1:444
2999		# [frame 7483] 2:999
3fff		# [frame 7483] 3:fff
4000		# [frame 7483] 4:000
5666		# [frame 7483] 5:666
6aaa		# [frame 7483] 6:aaa
7ccc		# [frame 7483] 7:ccc
6777		# [frame 7483] 6:777
wait 430
148b		# [frame 7913] 1:48b
wait 1
1777		# [frame 7914] 1:777
wait 1
148b		# [frame 7915] 1:48b
wait 1
1777		# [frame 7916] 1:777
wait 1
148b		# [frame 7917] 1:48b
wait 1
1777		# [frame 7918] 1:777
wait 1
148b		# [frame 7919] 1:48b
wait 1
1777		# [frame 7920] 1:777
wait 1
148b		# [frame 7921] 1:48b
wait 1
1777		# [frame 7922] 1:777
wait 1
148b		# [frame 7923] 1:48b
wait 1
1777		# [frame 7924] 1:777
wait 1
148b		# [frame 7925] 1:48b
wait 1
1777		# [frame 7926] 1:777
wait 1
148b		# [frame 7927] 1:48b
wait 1
1777		# [frame 7928] 1:777
wait 1
148b		# [frame 7929] 1:48b
wait 1
1777		# [frame 7930] 1:777
wait 1
148b		# [frame 7931] 1:48b
wait 1
1777		# [frame 7932] 1:777
wait 1
0333		# [frame 7933] 0:333
1444		# [frame 7933] 1:444
2999		# [frame 7933] 2:999
3fff		# [frame 7933] 3:fff
4000		# [frame 7933] 4:000
5666		# [frame 7933] 5:666
6aaa		# [frame 7933] 6:aaa
7ccc		# [frame 7933] 7:ccc
6777		# [frame 7933] 6:777
wait 380
63f2		# [frame 8313] 6:3f2
wait 1
64d3		# [frame 8314] 6:4d3
wait 1
65c4		# [frame 8315] 6:5c4
wait 1
65a5		# [frame 8316] 6:5a5
wait 1
6696		# [frame 8317] 6:696
wait 1
6777		# [frame 8318] 6:777
wait 5
63f2		# [frame 8323] 6:3f2
wait 1
64d3		# [frame 8324] 6:4d3
wait 1
65c4		# [frame 8325] 6:5c4
wait 1
65a5		# [frame 8326] 6:5a5
wait 1
6696		# [frame 8327] 6:696
wait 1
6777		# [frame 8328] 6:777
wait 5
63f2		# [frame 8333] 6:3f2
wait 1
64d3		# [frame 8334] 6:4d3
wait 1
65c4		# [frame 8335] 6:5c4
wait 1
65a5		# [frame 8336] 6:5a5
wait 1
6696		# [frame 8337] 6:696
wait 1
6777		# [frame 8338] 6:777
wait 5
63f2		# [frame 8343] 6:3f2
wait 1
64d3		# [frame 8344] 6:4d3
wait 1
65c4		# [frame 8345] 6:5c4
wait 1
65a5		# [frame 8346] 6:5a5
wait 1
6696		# [frame 8347] 6:696
wait 1
6777		# [frame 8348] 6:777
wait 5
63f2		# [frame 8353] 6:3f2
wait 1
64d3		# [frame 8354] 6:4d3
wait 1
65c4		# [frame 8355] 6:5c4
wait 1
65a5		# [frame 8356] 6:5a5
wait 1
6696		# [frame 8357] 6:696
wait 1
6777		# [frame 8358] 6:777
wait 115
0333		# [frame 8473] 0:333
1777		# [frame 8473] 1:777
2999		# [frame 8473] 2:999
3fff		# [frame 8473] 3:fff
4000		# [frame 8473] 4:000
5666		# [frame 8473] 5:666
6aaa		# [frame 8473] 6:aaa
7ccc		# [frame 8473] 7:ccc
wait 100
148b		# [frame 8573] 1:48b
wait 1
1777		# [frame 8574] 1:777
wait 1
148b		# [frame 8575] 1:48b
wait 1
1777		# [frame 8576] 1:777
wait 1
148b		# [frame 8577] 1:48b
wait 1
1777		# [frame 8578] 1:777
wait 1
148b		# [frame 8579] 1:48b
wait 1
1777		# [frame 8580] 1:777
wait 1
148b		# [frame 8581] 1:48b
wait 1
1777		# [frame 8582] 1:777
wait 1
148b		# [frame 8583] 1:48b
wait 1
1777		# [frame 8584] 1:777
wait 1
148b		# [frame 8585] 1:48b
wait 1
1777		# [frame 8586] 1:777
wait 1
148b		# [frame 8587] 1:48b
wait 1
1777		# [frame 8588] 1:777
wait 1
148b		# [frame 8589] 1:48b
wait 1
1777		# [frame 8590] 1:777
wait 1
148b		# [frame 8591] 1:48b
wait 1
1777		# [frame 8592] 1:777
wait 41
0333		# [frame 8633] 0:333
1444		# [frame 8633] 1:444
2999		# [frame 8633] 2:999
3777		# [frame 8633] 3:777
4000		# [frame 8633] 4:000
5666		# [frame 8633] 5:666
6aaa		# [frame 8633] 6:aaa
7ccc		# [frame 8633] 7:ccc
wait 40
3fff		# [frame 8673] 3:fff
wait 1
3eee		# [frame 8674] 3:eee
wait 1
3ddd		# [frame 8675] 3:ddd
wait 2
3ccc		# [frame 8677] 3:ccc
wait 1
3bbb		# [frame 8678] 3:bbb
wait 1
3aaa		# [frame 8679] 3:aaa
wait 1
3999		# [frame 8680] 3:999
wait 2
3888		# [frame 8682] 3:888
wait 1
3777		# [frame 8683] 3:777
wait 70
3fff		# [frame 8753] 3:fff
wait 1
3eee		# [frame 8754] 3:eee
wait 1
3ddd		# [frame 8755] 3:ddd
wait 2
3ccc		# [frame 8757] 3:ccc
wait 1
3bbb		# [frame 8758] 3:bbb
wait 1
3aaa		# [frame 8759] 3:aaa
wait 1
3999		# [frame 8760] 3:999
wait 2
3888		# [frame 8762] 3:888
wait 1
3777		# [frame 8763] 3:777
wait 70
3fff		# [frame 8833] 3:fff
wait 1
3eee		# [frame 8834] 3:eee
wait 1
3ddd		# [frame 8835] 3:ddd
wait 2
3ccc		# [frame 8837] 3:ccc
wait 1
3bbb		# [frame 8838] 3:bbb
wait 1
3aaa		# [frame 8839] 3:aaa
wait 1
3999		# [frame 8840] 3:999
wait 2
3888		# [frame 8842] 3:888
wait 1
3777		# [frame 8843] 3:777
wait 55
3fff		# [frame 8898] 3:fff
wait 55
6777		# [frame 8953] 6:777
wait 1480
63f2		# [frame 10433] 6:3f2
wait 1
64d3		# [frame 10434] 6:4d3
wait 1
65c4		# [frame 10435] 6:5c4
wait 1
65a5		# [frame 10436] 6:5a5
wait 1
6696		# [frame 10437] 6:696
wait 1
6777		# [frame 10438] 6:777
wait 5
63f2		# [frame 10443] 6:3f2
wait 1
64d3		# [frame 10444] 6:4d3
wait 1
65c4		# [frame 10445] 6:5c4
wait 1
65a5		# [frame 10446] 6:5a5
wait 1
6696		# [frame 10447] 6:696
wait 1
6777		# [frame 10448] 6:777
wait 5
63f2		# [frame 10453] 6:3f2
wait 1
64d3		# [frame 10454] 6:4d3
wait 1
65c4		# [frame 10455] 6:5c4
wait 1
65a5		# [frame 10456] 6:5a5
wait 1
6696		# [frame 10457] 6:696
wait 1
6777		# [frame 10458] 6:777
wait 5
63f2		# [frame 10463] 6:3f2
wait 1
64d3		# [frame 10464] 6:4d3
wait 1
65c4		# [frame 10465] 6:5c4
wait 1
65a5		# [frame 10466] 6:5a5
wait 1
6696		# [frame 10467] 6:696
wait 1
6777		# [frame 10468] 6:777
wait 5
63f2		# [frame 10473] 6:3f2
wait 1
64d3		# [frame 10474] 6:4d3
wait 1
65c4		# [frame 10475] 6:5c4
wait 1
65a5		# [frame 10476] 6:5a5
wait 1
6696		# [frame 10477] 6:696
wait 1
6777		# [frame 10478] 6:777
wait 115
0333		# [frame 10593] 0:333
1777		# [frame 10593] 1:777
2999		# [frame 10593] 2:999
3fff		# [frame 10593] 3:fff
4000		# [frame 10593] 4:000
5666		# [frame 10593] 5:666
6aaa		# [frame 10593] 6:aaa
7ccc		# [frame 10593] 7:ccc
wait 100
148b		# [frame 10693] 1:48b
wait 1
1777		# [frame 10694] 1:777
wait 1
148b		# [frame 10695] 1:48b
wait 1
1777		# [frame 10696] 1:777
wait 1
148b		# [frame 10697] 1:48b
wait 1
1777		# [frame 10698] 1:777
wait 1
148b		# [frame 10699] 1:48b
wait 1
1777		# [frame 10700] 1:777
wait 1
148b		# [frame 10701] 1:48b
wait 1
1777		# [frame 10702] 1:777
wait 1
148b		# [frame 10703] 1:48b
wait 1
1777		# [frame 10704] 1:777
wait 1
148b		# [frame 10705] 1:48b
wait 1
1777		# [frame 10706] 1:777
wait 1
148b		# [frame 10707] 1:48b
wait 1
1777		# [frame 10708] 1:777
wait 1
148b		# [frame 10709] 1:48b
wait 1
1777		# [frame 10710] 1:777
wait 1
148b		# [frame 10711] 1:48b
wait 1
1777		# [frame 10712] 1:777
wait 41
0333		# [frame 10753] 0:333
1444		# [frame 10753] 1:444
2999		# [frame 10753] 2:999
3777		# [frame 10753] 3:777
4000		# [frame 10753] 4:000
5666		# [frame 10753] 5:666
6aaa		# [frame 10753] 6:aaa
7ccc		# [frame 10753] 7:ccc
wait 40
3fff		# [frame 10793] 3:fff
wait 1
3eee		# [frame 10794] 3:eee
wait 1
3ddd		# [frame 10795] 3:ddd
wait 2
3ccc		# [frame 10797] 3:ccc
wait 1
3bbb		# [frame 10798] 3:bbb
wait 1
3aaa		# [frame 10799] 3:aaa
wait 1
3999		# [frame 10800] 3:999
wait 2
3888		# [frame 10802] 3:888
wait 1
3777		# [frame 10803] 3:777
wait 70
3fff		# [frame 10873] 3:fff
wait 1
3eee		# [frame 10874] 3:eee
wait 1
3ddd		# [frame 10875] 3:ddd
wait 2
3ccc		# [frame 10877] 3:ccc
wait 1
3bbb		# [frame 10878] 3:bbb
wait 1
3aaa		# [frame 10879] 3:aaa
wait 1
3999		# [frame 10880] 3:999
wait 2
3888		# [frame 10882] 3:888
wait 1
3777		# [frame 10883] 3:777
wait 55
3fff		# [frame 10938] 3:fff
wait 485
148b		# [frame 11423] 1:48b
wait 1
1777		# [frame 11424] 1:777
wait 1
148b		# [frame 11425] 1:48b
wait 1
1777		# [frame 11426] 1:777
wait 1
148b		# [frame 11427] 1:48b
wait 1
1777		# [frame 11428] 1:777
wait 1
148b		# [frame 11429] 1:48b
wait 1
1777		# [frame 11430] 1:777
wait 1
148b		# [frame 11431] 1:48b
wait 1
1777		# [frame 11432] 1:777
wait 1
148b		# [frame 11433] 1:48b
wait 1
1777		# [frame 11434] 1:777
wait 1
148b		# [frame 11435] 1:48b
wait 1
1777		# [frame 11436] 1:777
wait 1
148b		# [frame 11437] 1:48b
wait 1
1777		# [frame 11438] 1:777
wait 1
148b		# [frame 11439] 1:48b
wait 1
1777		# [frame 11440] 1:777
wait 1
148b		# [frame 11441] 1:48b
wait 1
1777		# [frame 11442] 1:777
wait 1
0333		# [frame 11443] 0:333
1444		# [frame 11443] 1:444
2999		# [frame 11443] 2:999
3fff		# [frame 11443] 3:fff
4000		# [frame 11443] 4:000
5666		# [frame 11443] 5:666
6aaa		# [frame 11443] 6:aaa
7ccc		# [frame 11443] 7:ccc
6777		# [frame 11443] 6:777
wait 390
151a		# [frame 11833] 1:51a
wait 5
1a1a		# [frame 11838] 1:a1a
wait 5
1845		# [frame 11843] 1:845
wait 5
121f		# [frame 11848] 1:21f
wait 5
1f6a		# [frame 11853] 1:f6a
wait 5
164a		# [frame 11858] 1:64a
wait 5
1426		# [frame 11863] 1:426
wait 5
151a		# [frame 11868] 1:51a
wait 5
1a1a		# [frame 11873] 1:a1a
wait 5
1845		# [frame 11878] 1:845
wait 5
121f		# [frame 11883] 1:21f
wait 5
1f6a		# [frame 11888] 1:f6a
wait 5
164a		# [frame 11893] 1:64a
wait 5
1426		# [frame 11898] 1:426
wait 5
1555		# [frame 11903] 1:555
wait 50
148b		# [frame 11953] 1:48b
wait 1
1777		# [frame 11954] 1:777
wait 1
148b		# [frame 11955] 1:48b
wait 1
1777		# [frame 11956] 1:777
wait 1
148b		# [frame 11957] 1:48b
wait 1
1777		# [frame 11958] 1:777
wait 1
148b		# [frame 11959] 1:48b
wait 1
1777		# [frame 11960] 1:777
wait 1
148b		# [frame 11961] 1:48b
wait 1
1777		# [frame 11962] 1:777
wait 1
148b		# [frame 11963] 1:48b
wait 1
1777		# [frame 11964] 1:777
wait 1
148b		# [frame 11965] 1:48b
wait 1
1777		# [frame 11966] 1:777
wait 1
148b		# [frame 11967] 1:48b
wait 1
1777		# [frame 11968] 1:777
wait 1
148b		# [frame 11969] 1:48b
wait 1
1777		# [frame 11970] 1:777
wait 1
148b		# [frame 11971] 1:48b
wait 1
1777		# [frame 11972] 1:777
wait 1
0333		# [frame 11973] 0:333
1444		# [frame 11973] 1:444
2999		# [frame 11973] 2:999
3fff		# [frame 11973] 3:fff
4000		# [frame 11973] 4:000
5666		# [frame 11973] 5:666
6aaa		# [frame 11973] 6:aaa
7ccc		# [frame 11973] 7:ccc
6777		# [frame 11973] 6:777
wait 340
151a		# [frame 12313] 1:51a
wait 5
1a1a		# [frame 12318] 1:a1a
wait 5
1845		# [frame 12323] 1:845
wait 5
121f		# [frame 12328] 1:21f
wait 5
1f6a		# [frame 12333] 1:f6a
wait 5
164a		# [frame 12338] 1:64a
wait 5
1426		# [frame 12343] 1:426
wait 5
151a		# [frame 12348] 1:51a
wait 5
1a1a		# [frame 12353] 1:a1a
wait 5
1845		# [frame 12358] 1:845
wait 5
121f		# [frame 12363] 1:21f
wait 5
1f6a		# [frame 12368] 1:f6a
wait 5
164a		# [frame 12373] 1:64a
wait 5
1426		# [frame 12378] 1:426
wait 5
1845		# [frame 12383] 1:845
wait 5
121f		# [frame 12388] 1:21f
wait 5
1555		# [frame 12393] 1:555
wait 541
0444		# [frame 12934] 0:444
4111		# [frame 12934] 4:111
wait 1
1666		# [frame 12935] 1:666
2aaa		# [frame 12935] 2:aaa
5777		# [frame 12935] 5:777
6888		# [frame 12935] 6:888
wait 1
0555		# [frame 12936] 0:555
4222		# [frame 12936] 4:222
wait 1
1777		# [frame 12937] 1:777
4333		# [frame 12937] 4:333
5888		# [frame 12937] 5:888
6999		# [frame 12937] 6:999
7ddd		# [frame 12937] 7:ddd
wait 1
0666		# [frame 12938] 0:666
1888		# [frame 12938] 1:888
2bbb		# [frame 12938] 2:bbb
4444		# [frame 12938] 4:444
wait 1
0777		# [frame 12939] 0:777
5999		# [frame 12939] 5:999
wait 1
4555		# [frame 12940] 4:555
6aaa		# [frame 12940] 6:aaa
wait 1
0888		# [frame 12941] 0:888
1999		# [frame 12941] 1:999
4666		# [frame 12941] 4:666
5aaa		# [frame 12941] 5:aaa
wait 1
2ccc		# [frame 12942] 2:ccc
4777		# [frame 12942] 4:777
6bbb		# [frame 12942] 6:bbb
wait 1
0999		# [frame 12943] 0:999
1aaa		# [frame 12943] 1:aaa
4888		# [frame 12943] 4:888
5bbb		# [frame 12943] 5:bbb
7eee		# [frame 12943] 7:eee
wait 1
0aaa		# [frame 12944] 0:aaa
wait 1
1bbb		# [frame 12945] 1:bbb
2ddd		# [frame 12945] 2:ddd
4999		# [frame 12945] 4:999
6ccc		# [frame 12945] 6:ccc
wait 1
0bbb		# [frame 12946] 0:bbb
4aaa		# [frame 12946] 4:aaa
5ccc		# [frame 12946] 5:ccc
wait 1
1ccc		# [frame 12947] 1:ccc
6ddd		# [frame 12947] 6:ddd
wait 1
0ccc		# [frame 12948] 0:ccc
1ddd		# [frame 12948] 1:ddd
2eee		# [frame 12948] 2:eee
4bbb		# [frame 12948] 4:bbb
5ddd		# [frame 12948] 5:ddd
wait 1
0ddd		# [frame 12949] 0:ddd
4ccc		# [frame 12949] 4:ccc
wait 1
4ddd		# [frame 12950] 4:ddd
5eee		# [frame 12950] 5:eee
6eee		# [frame 12950] 6:eee
7fff		# [frame 12950] 7:fff
wait 1
0eee		# [frame 12951] 0:eee
1eee		# [frame 12951] 1:eee
wait 1
2fff		# [frame 12952] 2:fff
4eee		# [frame 12952] 4:eee
5fff		# [frame 12952] 5:fff
6fff		# [frame 12952] 6:fff
wait 1
0fff		# [frame 12953] 0:fff
1fff		# [frame 12953] 1:fff
4fff		# [frame 12953] 4:fff
wait 1
0000		# [frame 12954] 0:000
1000		# [frame 12954] 1:000
2000		# [frame 12954] 2:000
3000		# [frame 12954] 3:000
4000		# [frame 12954] 4:000
5000		# [frame 12954] 5:000
6000		# [frame 12954] 6:000
7000		# [frame 12954] 7:000
wait 169
3111		# [frame 13123] 3:111
7111		# [frame 13123] 7:111
wait 4
6111		# [frame 13127] 6:111
wait 3
3222		# [frame 13130] 3:222
7222		# [frame 13130] 7:222
wait 2
5111		# [frame 13132] 5:111
wait 4
1111		# [frame 13136] 1:111
3333		# [frame 13136] 3:333
7333		# [frame 13136] 7:333
wait 5
6222		# [frame 13141] 6:222
wait 2
3444		# [frame 13143] 3:444
7444		# [frame 13143] 7:444
wait 1
2111		# [frame 13144] 2:111
wait 6
3555		# [frame 13150] 3:555
7555		# [frame 13150] 7:555
wait 5
6333		# [frame 13155] 6:333
wait 1
3666		# [frame 13156] 3:666
7666		# [frame 13156] 7:666
wait 1
5222		# [frame 13157] 5:222
wait 6
3777		# [frame 13163] 3:777
7777		# [frame 13163] 7:777
wait 6
1222		# [frame 13169] 1:222
3888		# [frame 13169] 3:888
6444		# [frame 13169] 6:444
7888		# [frame 13169] 7:888
wait 7
3999		# [frame 13176] 3:999
7999		# [frame 13176] 7:999
wait 6
5333		# [frame 13182] 5:333
wait 1
3aaa		# [frame 13183] 3:aaa
7aaa		# [frame 13183] 7:aaa
wait 1
6555		# [frame 13184] 6:555
wait 6
3bbb		# [frame 13190] 3:bbb
7bbb		# [frame 13190] 7:bbb
wait 4
2222		# [frame 13194] 2:222
wait 2
3ccc		# [frame 13196] 3:ccc
7ccc		# [frame 13196] 7:ccc
wait 2
6666		# [frame 13198] 6:666
wait 5
1333		# [frame 13203] 1:333
3ddd		# [frame 13203] 3:ddd
7ddd		# [frame 13203] 7:ddd
wait 4
5444		# [frame 13207] 5:444
wait 3
3eee		# [frame 13210] 3:eee
7eee		# [frame 13210] 7:eee
wait 2
6777		# [frame 13212] 6:777
wait 4
3fff		# [frame 13216] 3:fff
7fff		# [frame 13216] 7:fff
wait 367
3eee		# [frame 13583] 3:eee
7eee		# [frame 13583] 7:eee
wait 4
6666		# [frame 13587] 6:666
wait 3
3ddd		# [frame 13590] 3:ddd
7ddd		# [frame 13590] 7:ddd
wait 2
5333		# [frame 13592] 5:333
wait 4
1222		# [frame 13596] 1:222
3ccc		# [frame 13596] 3:ccc
7ccc		# [frame 13596] 7:ccc
wait 5
6555		# [frame 13601] 6:555
wait 2
3bbb		# [frame 13603] 3:bbb
7bbb		# [frame 13603] 7:bbb
wait 2
2111		# [frame 13605] 2:111
wait 5
3aaa		# [frame 13610] 3:aaa
7aaa		# [frame 13610] 7:aaa
wait 5
6444		# [frame 13615] 6:444
wait 1
3999		# [frame 13616] 3:999
7999		# [frame 13616] 7:999
wait 1
5222		# [frame 13617] 5:222
wait 6
3888		# [frame 13623] 3:888
7888		# [frame 13623] 7:888
wait 7
1111		# [frame 13630] 1:111
3777		# [frame 13630] 3:777
6333		# [frame 13630] 6:333
7777		# [frame 13630] 7:777
wait 6
3666		# [frame 13636] 3:666
7666		# [frame 13636] 7:666
wait 6
5111		# [frame 13642] 5:111
wait 1
3555		# [frame 13643] 3:555
7555		# [frame 13643] 7:555
wait 1
6222		# [frame 13644] 6:222
wait 6
3444		# [frame 13650] 3:444
7444		# [frame 13650] 7:444
wait 5
2000		# [frame 13655] 2:000
wait 1
3333		# [frame 13656] 3:333
7333		# [frame 13656] 7:333
wait 2
6111		# [frame 13658] 6:111
wait 5
1000		# [frame 13663] 1:000
3222		# [frame 13663] 3:222
7222		# [frame 13663] 7:222
wait 4
5000		# [frame 13667] 5:000
wait 3
3111		# [frame 13670] 3:111
7111		# [frame 13670] 7:111
wait 2
6000		# [frame 13672] 6:000
wait 4
3000		# [frame 13676] 3:000
7000		# [frame 13676] 7:000
8000		# [frame 13676] end

#
# bytecode
#

proc main 
	0
	set state.face				# set state.face 0
	5
	64
	*					# 64*5
	wait					# wait 64*5
	<proc_005>
	fork(0)					# <proc_005>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	<proc_031>
	fork(0)					# <proc_031>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	48
	*					# 48*5
	wait					# wait 48*5
	<proc_036>
	fork(0)					# <proc_036>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	<proc_038>
	fork(0)					# <proc_038>()
	5
	43
	*					# 43*5
	wait					# wait 43*5
	3
	<proc_046>
	fork(1)					# <proc_046>(3)
	5
	48
	*					# 48*5
	wait					# wait 48*5
	<proc_070>
	fork(0)					# <proc_070>()
	5
	42
	*					# 42*5
	wait					# wait 42*5
	<proc_075>
	fork(0)					# <proc_075>()
	6
	32
	*					# 32*6
	wait					# wait 32*6
	6
	56
	*					# 56*6
	wait					# wait 56*6
	<proc_039>
	fork(0)					# <proc_039>()
	5
	32
	*					# 32*5
	wait					# wait 32*5
	1
	<proc_046>
	fork(1)					# <proc_046>(1)
	5
	48
	*					# 48*5
	wait					# wait 48*5
	<proc_098>
	fork(0)					# <proc_098>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_040>
	fork(0)					# <proc_040>()
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	4
	<proc_046>
	fork(1)					# <proc_046>(4)
	5
	48
	*					# 48*5
	wait					# wait 48*5
	<proc_112>
	fork(0)					# <proc_112>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_044>
	fork(0)					# <proc_044>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_041>
	fork(0)					# <proc_041>()
	5
	40
	*					# 40*5
	wait					# wait 40*5
	6
	<proc_046>
	fork(1)					# <proc_046>(6)
	5
	48
	*					# 48*5
	wait					# wait 48*5
	<proc_169>
	fork(0)					# <proc_169>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	<proc_042>
	fork(0)					# <proc_042>()
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	<proc_047>
	fork(1)					# <proc_047>(5)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	<proc_093>
	fork(0)					# <proc_093>()
	5
	6
	*					# 6*5
	wait					# wait 6*5
	260
	set state.H				# set state.H 260
	80
	set state.G				# set state.G 80
	30
	<proc_087>
	fork(1)					# <proc_087>(30)
	5
	42
	*					# 42*5
	wait					# wait 42*5
	<proc_142>
	fork(0)					# <proc_142>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_043>
	fork(0)					# <proc_043>()
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	6
	<proc_046>
	fork(1)					# <proc_046>(6)
	5
	48
	*					# 48*5
	wait					# wait 48*5
	<proc_168>
	fork(0)					# <proc_168>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	8
	*					# 8*5
	wait					# wait 8*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	<proc_223>
	fork(0)					# <proc_223>()
	5
	wait					# wait 5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	<proc_222>
	set state.proc				# set state.proc <proc_222>
	tail
	end

proc proc_001 
	1
	set state.tint				# set state.tint 1
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	1
	wait					# wait 1
	3
	set state.tint				# set state.tint 3
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	1
	set state.tint				# set state.tint 1
	1
	wait					# wait 1
	plot
	end

proc proc_002 
	1
	set state.tint				# set state.tint 1
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	1
	wait					# wait 1
	3
	set state.tint				# set state.tint 3
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	1
	wait					# wait 1
	0
	set state.tint				# set state.tint 0
	plot
	5
	set state.tint				# set state.tint 5
	plot
	end

proc proc_003 
	1
	set state.tint				# set state.tint 1
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	1
	wait					# wait 1
	3
	set state.tint				# set state.tint 3
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	1
	wait					# wait 1
	0
	set state.tint				# set state.tint 0
	plot
	6
	set state.tint				# set state.tint 6
	plot
	end

proc proc_004 
	1
	set state.tint				# set state.tint 1
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	1
	wait					# wait 1
	3
	set state.tint				# set state.tint 3
	plot
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	plot
	end

proc proc_005 
	# <proc_005>()
	70
	65
	set state.x				# set state.x 65
	set state.y				# set state.y 70
	2
	move					# move 2
	3
	set state.tint				# set state.tint 3
	0
	set state.size				# set state.size 0
	0
	set state.B				# set state.B 0
	3
	set state.A				# set state.A 3
	<proc_022>
	fork(0)					# <proc_022>()
	20
	move					# move 20
	10
	wait					# wait 10
	<proc_025>
	fork(0)					# <proc_025>()
	20
	move					# move 20
	10
	wait					# wait 10
	<proc_026>
	fork(0)					# <proc_026>()
	20
	move					# move 20
	10
	wait					# wait 10
	<proc_027>
	fork(0)					# <proc_027>()
	20
	move					# move 20
	10
	wait					# wait 10
	<proc_028>
	fork(0)					# <proc_028>()
	20
	wait					# wait 20
	40
	move					# move 40
	<proc_020>
	fork(0)					# <proc_020>()
	20
	wait					# wait 20
	50
	move					# move 50
	<proc_016>
	fork(0)					# <proc_016>()
	7
	~
	move					# move (-7)
	2
	set state.size				# set state.size 2
	3
	set state.tint				# set state.tint 3
	plot
	1
	set state.size				# set state.size 1
	0
	set state.tint				# set state.tint 0
	plot
	20
	wait					# wait 20
	95
	57
	set state.x				# set state.x 57
	set state.y				# set state.y 95
	196
	50
	70
	<proc_001>
	<proc_198>
	fork(4)					# <proc_198>(196, 50, 70, <proc_001>)
	100
	117
	set state.x				# set state.x 117
	set state.y				# set state.y 100
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	3
	set state.tint				# set state.tint 3
	f860:2087
	107e:3c08
	f860:2087
	f041:0107
	f860:2087
	f041:0107
	14bc:3c49
	083f:3082
	f860:2087
	9a6e:19a6
	9a7f:2186
	<proc_208>
	fork(11)				# <proc_208>(f860:2087, 107e:3c08, f860:2087, f041:0107, f860:2087, f041:0107, 14bc:3c49, 083f:3082, f860:2087, 9a6e:19a6, 9a7f:2186)
	1
	move					# move 1
	2
	set state.tint				# set state.tint 2
	f860:2087
	107e:3c08
	f860:2087
	f041:0107
	f860:2087
	f041:0107
	14bc:3c49
	083f:3082
	f860:2087
	9a6e:19a6
	9a7f:2186
	<proc_208>
	fork(11)				# <proc_208>(f860:2087, 107e:3c08, f860:2087, f041:0107, f860:2087, f041:0107, 14bc:3c49, 083f:3082, f860:2087, 9a6e:19a6, 9a7f:2186)
	80
	wait					# wait 80
	7
	<proc_012>
	fork(1)					# <proc_012>(7)
	300
	wait					# wait 300
	0
	set state.face				# set state.face 0
	106
	57
	set state.x				# set state.x 57
	set state.y				# set state.y 106
	14
	<proc_009>
	fork(1)					# <proc_009>(14)
	15
	state.y
	-
	set state.y				# set state.y (state.y-15)
	1
	wait					# wait 1
	14
	<proc_009>
	fork(1)					# <proc_009>(14)
	15
	state.y
	-
	set state.y				# set state.y (state.y-15)
	1
	wait					# wait 1
	14
	<proc_009>
	fork(1)					# <proc_009>(14)
	15
	state.y
	-
	set state.y				# set state.y (state.y-15)
	1
	wait					# wait 1
	14
	<proc_009>
	fork(1)					# <proc_009>(14)
	15
	state.y
	-
	set state.y				# set state.y (state.y-15)
	1
	wait					# wait 1
	14
	<proc_009>
	fork(1)					# <proc_009>(14)
	end

proc proc_006 
	0
	set state.size				# set state.size 0
	plot
	end

proc proc_007 
	0
	set state.size				# set state.size 0
	7
	set state.tint				# set state.tint 7
	plot
	1
	wait					# wait 1
	5
	set state.tint				# set state.tint 5
	plot
	end

proc proc_008 
	1
	set state.size				# set state.size 1
	plot
	end

proc proc_009 
	# <proc_009>(14)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		1
		8
		13
		<proc_011>
		fork(3)				# <proc_011>(1, 8, 13)
		6
		wait				# wait 6
		15
		move				# move 15
		<proc_009>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_009>
		tail
	done
	end

proc proc_010 
	0
	local.a
	<cmp>
	when(>=)				# (local.a>=0)
		local.c
		local.a
		<cmp>
		when(<)				# (local.a<local.c)
			0
			local.b
			<cmp>
			when(>=)		# (local.b>=0)
				local.a
				set state.size	# set state.size local.a
				local.b
				set state.tint	# set state.tint local.b
				plot
			done
		done
	done
	end

proc proc_011 
	# <proc_011>(1, 8, 13)
	local.c
	local.a
	<cmp>
	when(<)					# (local.a<local.c)
		local.a
		1
		local.b
		<proc_010>
		fork(3)				# <proc_010>(local.a, 1, local.b)
		1
		local.a
		-
		2
		local.b
		<proc_010>
		fork(3)				# <proc_010>((local.a-1), 2, local.b)
		2
		local.a
		-
		3
		local.b
		<proc_010>
		fork(3)				# <proc_010>((local.a-2), 3, local.b)
		3
		local.a
		-
		2
		local.b
		<proc_010>
		fork(3)				# <proc_010>((local.a-3), 2, local.b)
		4
		local.a
		-
		1
		local.b
		<proc_010>
		fork(3)				# <proc_010>((local.a-4), 1, local.b)
		5
		local.a
		-
		0
		local.b
		<proc_010>
		fork(3)				# <proc_010>((local.a-5), 0, local.b)
		4
		wait				# wait 4
		<proc_011>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_011>
		tail
	done
	end

proc proc_012 
	# <proc_012>(7)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		140
		3
		set state.x			# set state.x 3
		set state.y			# set state.y 140
		3
		set state.size			# set state.size 3
		2
		set state.tint			# set state.tint 2
		46
		<proc_013>
		fork(1)				# <proc_013>(46)
		10
		wait				# wait 10
		1
		set state.tint			# set state.tint 1
		46
		<proc_013>
		fork(1)				# <proc_013>(46)
		10
		wait				# wait 10
		2
		set state.tint			# set state.tint 2
		46
		<proc_013>
		fork(1)				# <proc_013>(46)
		10
		wait				# wait 10
		3
		set state.tint			# set state.tint 3
		46
		<proc_013>
		fork(1)				# <proc_013>(46)
		10
		wait				# wait 10
		<proc_012>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_012>
		tail
	else
		0
		set state.tint			# set state.tint 0
		<proc_013>
		46
		set local.a			# set local.a 46
		set state.proc			# set state.proc <proc_013>
		tail
	done
	end

proc proc_013 
	# <proc_013>(46)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		7
		move				# move 7
		1
		wait				# wait 1
		<proc_013>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_013>
		tail
	done
	end

proc proc_014 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		1
		move				# move 1
		local.b
		wait				# wait local.b
		<proc_014>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_014>
		tail
	done
	end

proc proc_015 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		local.c
		move				# move local.c
		local.b
		wait				# wait local.b
		<proc_015>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_015>
		tail
	done
	end

proc proc_016 
	# <proc_016>()
	128
	set state.face				# set state.face 128
	16
	state.y
	-
	5
	state.x
	+
	set state.x				# set state.x (state.x+5)
	set state.y				# set state.y (state.y-16)
	<proc_017>
	fork(0)					# <proc_017>()
	32
	state.y
	+
	24
	state.x
	-
	set state.x				# set state.x (state.x-24)
	set state.y				# set state.y (state.y+32)
	0
	set state.face				# set state.face 0
	<proc_017>
	set state.proc				# set state.proc <proc_017>
	tail
	end

proc proc_017 
	# <proc_017>()
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	2
	move					# move 2
	plot
	1
	wait					# wait 1
	2
	~
	move					# move (-2)
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	3
	move					# move 3
	plot
	1
	move					# move 1
	plot
	3
	move					# move 3
	1
	wait					# wait 1
	4
	18
	-
	0.25
	<proc_014>
	fork(2)					# <proc_014>((18-4), 0.25)
	4
	17
	-
	move					# move (17-4)
	3
	wait					# wait 3
	6
	0.5
	<proc_019>
	fork(2)					# <proc_019>(6, 0.5)
	5
	move					# move 5
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	6
	move					# move 6
	3
	wait					# wait 3
	5
	0.5
	<proc_014>
	fork(2)					# <proc_014>(5, 0.5)
	5
	move					# move 5
	3
	wait					# wait 3
	6
	0.5
	<proc_019>
	fork(2)					# <proc_019>(6, 0.5)
	5
	move					# move 5
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	5
	move					# move 5
	2
	wait					# wait 2
	5
	0.5
	<proc_014>
	fork(2)					# <proc_014>(5, 0.5)
	end

proc proc_018 
	plot
	1
	wait					# wait 1
	3
	move					# move 3
	18
	0.25
	<proc_014>
	fork(2)					# <proc_014>(18, 0.25)
	3
	20
	-
	move					# move (20-3)
	5
	wait					# wait 5
	6
	0.5
	<proc_019>
	fork(2)					# <proc_019>(6, 0.5)
	5
	move					# move 5
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	6
	move					# move 6
	3
	wait					# wait 3
	13
	0.5
	<proc_014>
	fork(2)					# <proc_014>(13, 0.5)
	12
	move					# move 12
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	5
	wait					# wait 5
	10
	0.5
	<proc_014>
	fork(2)					# <proc_014>(10, 0.5)
	end

proc proc_019 
	# <proc_019>(6, 0.5)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		64
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-64))
		1
		move				# move 1
		64
		state.face
		+
		set state.face			# set state.face (state.face+64)
		1
		move				# move 1
		local.b
		wait				# wait local.b
		<proc_019>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_019>
		tail
	done
	end

proc proc_020 
	# <proc_020>()
	64
	set state.face				# set state.face 64
	<proc_021>
	fork(0)					# <proc_021>()
	90
	state.face
	+
	set state.face				# set state.face (state.face+90)
	<proc_021>
	fork(0)					# <proc_021>()
	90
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-90))
	90
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-90))
	<proc_021>
	fork(0)					# <proc_021>()
	128
	set state.face				# set state.face 128
	20
	set state.size				# set state.size 20
	5
	set state.tint				# set state.tint 5
	draw
	3
	set state.tint				# set state.tint 3
	draw
	19
	set state.size				# set state.size 19
	0
	set state.tint				# set state.tint 0
	draw
	4
	set state.tint				# set state.tint 4
	draw
	4
	set state.tint				# set state.tint 4
	3
	set state.size				# set state.size 3
	32
	18
	<proc_029>
	fork(2)					# <proc_029>(32, 18)
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	32
	18
	<proc_029>
	fork(2)					# <proc_029>(32, 18)
	end

proc proc_021 
	# <proc_021>()
	12
	move					# move 12
	2
	set state.size				# set state.size 2
	3
	set state.tint				# set state.tint 3
	draw
	1
	set state.size				# set state.size 1
	0
	set state.tint				# set state.tint 0
	draw
	end

proc proc_022 
	# <proc_022>()
	64
	set state.face				# set state.face 64
	5
	~
	move					# move (-5)
	10
	0
	<proc_014>
	fork(2)					# <proc_014>(10, 0)
	10
	move					# move 10
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	5
	0
	<proc_014>
	fork(2)					# <proc_014>(5, 0)
	end

proc proc_023 
	64
	set state.face				# set state.face 64
	5
	~
	move					# move (-5)
	10
	0
	<proc_014>
	fork(2)					# <proc_014>(10, 0)
	0
	set state.size				# set state.size 0
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	end

proc proc_024 
	64
	set state.face				# set state.face 64
	5
	move					# move 5
	plot
	1
	state.y
	-
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.y
	-
	set state.y				# set state.y (state.y-1)
	plot
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	plot
	1
	state.y
	+
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	plot
	1
	state.y
	+
	set state.y				# set state.y (state.y+1)
	plot
	end

proc proc_025 
	# <proc_025>()
	5
	set state.size				# set state.size 5
	draw
	4
	set state.size				# set state.size 4
	state.B
	set state.tint				# set state.tint state.B
	draw
	96
	set state.face				# set state.face 96
	6
	move					# move 6
	plot
	end

proc proc_026 
	# <proc_026>()
	5
	set state.size				# set state.size 5
	draw
	4
	set state.size				# set state.size 4
	state.B
	set state.tint				# set state.tint state.B
	draw
	0
	set state.face				# set state.face 0
	state.B
	set state.tint				# set state.tint state.B
	5
	move					# move 5
	plot
	3
	~
	move					# move (-3)
	64
	set state.face				# set state.face 64
	0
	set state.size				# set state.size 0
	state.A
	set state.tint				# set state.tint state.A
	5
	move					# move 5
	0
	set state.face				# set state.face 0
	3
	0
	<proc_014>
	fork(2)					# <proc_014>(3, 0)
	3
	move					# move 3
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	4
	0
	<proc_014>
	fork(2)					# <proc_014>(4, 0)
	end

proc proc_027 
	# <proc_027>()
	64
	set state.face				# set state.face 64
	5
	~
	move					# move (-5)
	10
	0
	<proc_014>
	fork(2)					# <proc_014>(10, 0)
	end

proc proc_028 
	# <proc_028>()
	5
	set state.size				# set state.size 5
	draw
	4
	set state.size				# set state.size 4
	state.B
	set state.tint				# set state.tint state.B
	draw
	26
	set state.face				# set state.face 26
	state.B
	set state.tint				# set state.tint state.B
	6
	move					# move 6
	plot
	end

proc proc_029 
	# <proc_029>(32, 18)
	local.a
	when(!=)				# local.a !=
		local.b
		<proc_030>
		fork(1)				# <proc_030>(local.b)
		0.5
		wait				# wait 0.5
		4
		state.face
		+
		set state.face			# set state.face (state.face+4)
		<proc_029>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_029>
		tail
	done
	end

proc proc_030 
	# <proc_030>(local.b)
	local.a
	move					# move local.a
	draw
	end

proc proc_031 
	# <proc_031>()
	80
	110
	set state.x				# set state.x 110
	set state.y				# set state.y 80
	101
	11
	30
	<proc_001>
	<proc_198>
	fork(4)					# <proc_198>(101, 11, 30, <proc_001>)
	10
	wait					# wait 10
	18
	state.y
	-
	2
	state.x
	+
	set state.x				# set state.x (state.x+2)
	set state.y				# set state.y (state.y-18)
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	3
	set state.tint				# set state.tint 3
	081f:1f82
	9a6e:19a6
	9a7f:2186
	107f:2c49
	107e:3c08
	14bc:3c49
	40bf:3f08
	9a7f:2186
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(081f:1f82, 9a6e:19a6, 9a7f:2186, 107f:2c49, 107e:3c08, 14bc:3c49, 40bf:3f08, 9a7f:2186, 0, 0, 0)
	30
	wait					# wait 30
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	3
	set state.tint				# set state.tint 3
	3
	set state.size				# set state.size 3
	823f:3f20
	50
	<proc_034>
	fork(2)					# <proc_034>(823f:3f20, 50)
	50
	wait					# wait 50
	7
	move					# move 7
	185e:1e86
	30
	<proc_034>
	fork(2)					# <proc_034>(185e:1e86, 30)
	30
	wait					# wait 30
	7
	move					# move 7
	927f:0104
	30
	<proc_034>
	fork(2)					# <proc_034>(927f:0104, 30)
	30
	wait					# wait 30
	7
	move					# move 7
	927f:0104
	10
	<proc_034>
	fork(2)					# <proc_034>(927f:0104, 10)
	10
	wait					# wait 10
	7
	move					# move 7
	40bf:3f08
	20
	<proc_034>
	fork(2)					# <proc_034>(40bf:3f08, 20)
	20
	wait					# wait 20
	7
	move					# move 7
	14bc:3c49
	20
	<proc_034>
	fork(2)					# <proc_034>(14bc:3c49, 20)
	20
	wait					# wait 20
	7
	move					# move 7
	107e:3c08
	20
	<proc_034>
	fork(2)					# <proc_034>(107e:3c08, 20)
	20
	wait					# wait 20
	7
	move					# move 7
	0
	70
	<proc_034>
	fork(2)					# <proc_034>(0, 70)
	70
	wait					# wait 70
	7
	move					# move 7
	3
	state.y
	+
	3
	state.x
	+
	set state.x				# set state.x (state.x+3)
	set state.y				# set state.y (state.y+3)
	8
	7
	~
	*					# (-7)*8
	move					# move (-7)*8
	14
	<proc_035>
	fork(1)					# <proc_035>(14)
	13
	state.y
	-
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y-13)
	0
	set state.tint				# set state.tint 0
	081f:1f82
	9a6e:19a6
	9a7f:2186
	107f:2c49
	107e:3c08
	14bc:3c49
	40bf:3f08
	9a7f:2186
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(081f:1f82, 9a6e:19a6, 9a7f:2186, 107f:2c49, 107e:3c08, 14bc:3c49, 40bf:3f08, 9a7f:2186, 0, 0, 0)
	20
	wait					# wait 20
	3
	set state.tint				# set state.tint 3
	147f:1c49
	14bc:3c49
	9a6e:19a6
	9a6e:19a6
	881f:1f81
	185e:1e86
	107f:2c49
	187f:3c8a
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(147f:1c49, 14bc:3c49, 9a6e:19a6, 9a6e:19a6, 881f:1f81, 185e:1e86, 107f:2c49, 187f:3c8a, 0, 0, 0)
	13
	state.y
	+
	3
	state.x
	+
	set state.x				# set state.x (state.x+3)
	set state.y				# set state.y (state.y+13)
	3
	set state.size				# set state.size 3
	6
	set state.tint				# set state.tint 6
	plot
	40
	wait					# wait 40
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	10
	wait					# wait 10
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	15
	wait					# wait 15
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	15
	wait					# wait 15
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	20
	wait					# wait 20
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	30
	wait					# wait 30
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	40
	wait					# wait 40
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	50
	wait					# wait 50
	<proc_032>
	fork(0)					# <proc_032>()
	7
	~
	move					# move (-7)
	plot
	5
	wait					# wait 5
	<proc_032>
	fork(0)					# <proc_032>()
	7
	~
	move					# move (-7)
	plot
	5
	wait					# wait 5
	<proc_032>
	fork(0)					# <proc_032>()
	7
	~
	move					# move (-7)
	plot
	5
	wait					# wait 5
	<proc_032>
	fork(0)					# <proc_032>()
	7
	~
	move					# move (-7)
	plot
	5
	wait					# wait 5
	<proc_032>
	fork(0)					# <proc_032>()
	7
	~
	move					# move (-7)
	plot
	5
	wait					# wait 5
	<proc_032>
	fork(0)					# <proc_032>()
	7
	~
	move					# move (-7)
	plot
	5
	wait					# wait 5
	<proc_032>
	fork(0)					# <proc_032>()
	7
	~
	move					# move (-7)
	plot
	30
	wait					# wait 30
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	15
	wait					# wait 15
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	15
	wait					# wait 15
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	30
	wait					# wait 30
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	30
	wait					# wait 30
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	5
	wait					# wait 5
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	5
	wait					# wait 5
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	5
	wait					# wait 5
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	15
	wait					# wait 15
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	25
	wait					# wait 25
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	15
	wait					# wait 15
	<proc_033>
	fork(0)					# <proc_033>()
	7
	move					# move 7
	plot
	30
	wait					# wait 30
	4
	set state.tint				# set state.tint 4
	plot
	11
	7
	~
	*					# (-7)*11
	move					# move (-7)*11
	14
	<proc_035>
	fork(1)					# <proc_035>(14)
	13
	state.y
	-
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y-13)
	0
	set state.tint				# set state.tint 0
	147f:1c49
	14bc:3c49
	9a6e:19a6
	9a6e:19a6
	881f:1f81
	185e:1e86
	107f:2c49
	187f:3c8a
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(147f:1c49, 14bc:3c49, 9a6e:19a6, 9a6e:19a6, 881f:1f81, 185e:1e86, 107f:2c49, 187f:3c8a, 0, 0, 0)
	18
	state.y
	+
	2
	state.x
	-
	set state.x				# set state.x (state.x-2)
	set state.y				# set state.y (state.y+18)
	101
	11
	30
	<proc_200>
	<proc_198>
	fork(4)					# <proc_198>(101, 11, 30, <proc_200>)
	end

proc proc_032 
	# <proc_032>()
	3
	set state.size				# set state.size 3
	4
	set state.tint				# set state.tint 4
	plot
	0
	set state.tint				# set state.tint 0
	plot
	7
	~
	move					# move (-7)
	end

proc proc_033 
	# <proc_033>()
	3
	set state.size				# set state.size 3
	4
	set state.tint				# set state.tint 4
	plot
	2
	set state.size				# set state.size 2
	3
	set state.tint				# set state.tint 3
	draw
	end

proc proc_034 
	# <proc_034>(823f:3f20, 50)
	# <proc_034>(185e:1e86, 30)
	# <proc_034>(927f:0104, 30)
	# <proc_034>(927f:0104, 10)
	# <proc_034>(40bf:3f08, 20)
	# <proc_034>(14bc:3c49, 20)
	# <proc_034>(107e:3c08, 20)
	# <proc_034>(0, 70)
	6
	set state.tint				# set state.tint 6
	3
	set state.size				# set state.size 3
	3
	state.y
	+
	3
	state.x
	+
	set state.x				# set state.x (state.x+3)
	set state.y				# set state.y (state.y+3)
	plot
	local.b
	wait					# wait local.b
	4
	set state.tint				# set state.tint 4
	plot
	3
	set state.tint				# set state.tint 3
	2
	state.y
	-
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y-2)
	<proc_207>
	set state.proc				# set state.proc <proc_207>
	pop
	tail
	end

proc proc_035 
	# <proc_035>(14)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		3
		set state.tint			# set state.tint 3
		3
		set state.size			# set state.size 3
		plot
		1
		wait				# wait 1
		0
		set state.tint			# set state.tint 0
		plot
		7
		move				# move 7
		<proc_035>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_035>
		tail
	done
	end

proc proc_036 
	# <proc_036>()
	157
	0
	set state.x				# set state.x 0
	set state.y				# set state.y 157
	<proc_209>
	fork(0)					# <proc_209>()
	<proc_037>
	fork(0)					# <proc_037>()
	30
	wait					# wait 30
	3
	set state.tint				# set state.tint 3
	<proc_062>
	fork(0)					# <proc_062>()
	7
	set state.tint				# set state.tint 7
	0
	set state.size				# set state.size 0
	0
	set state.face				# set state.face 0
	320
	0000:1999
	<proc_014>
	fork(2)					# <proc_014>(320, 0000:1999)
	11
	state.y
	+
	12
	state.x
	+
	set state.x				# set state.x (state.x+12)
	set state.y				# set state.y (state.y+11)
	1
	state.y
	+
	set state.y				# set state.y (state.y+1)
	50
	wait					# wait 50
	0
	set state.face				# set state.face 0
	22
	move					# move 22
	0
	7
	<proc_066>
	fork(2)					# <proc_066>(0, 7)
	5
	40
	*					# 40*5
	wait					# wait 40*5
	0
	set state.tint				# set state.tint 0
	<proc_062>
	set state.proc				# set state.proc <proc_062>
	tail
	end

proc proc_037 
	# <proc_037>()
	11
	state.y
	+
	12
	state.x
	+
	set state.x				# set state.x (state.x+12)
	set state.y				# set state.y (state.y+11)
	7
	set state.tint				# set state.tint 7
	7
	set state.size				# set state.size 7
	draw
	4
	set state.tint				# set state.tint 4
	6
	set state.size				# set state.size 6
	draw
	7
	set state.tint				# set state.tint 7
	0
	set state.size				# set state.size 0
	4
	state.y
	+
	set state.y				# set state.y (state.y+4)
	plot
	7
	state.y
	-
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y-7)
	plot
	6
	state.x
	+
	set state.x				# set state.x (state.x+6)
	plot
	end

proc proc_038 
	# <proc_038>()
	0
	<proc_055>
	fork(1)					# <proc_055>(0)
	5
	6
	*					# 6*5
	wait					# wait 6*5
	0
	<proc_054>
	fork(1)					# <proc_054>(0)
	1
	<proc_055>
	fork(1)					# <proc_055>(1)
	5
	6
	*					# 6*5
	wait					# wait 6*5
	1
	<proc_054>
	fork(1)					# <proc_054>(1)
	2
	<proc_055>
	fork(1)					# <proc_055>(2)
	5
	6
	*					# 6*5
	wait					# wait 6*5
	2
	<proc_054>
	fork(1)					# <proc_054>(2)
	3
	<proc_055>
	fork(1)					# <proc_055>(3)
	5
	19
	*					# 19*5
	wait					# wait 19*5
	3
	<proc_054>
	fork(1)					# <proc_054>(3)
	end

proc proc_039 
	# <proc_039>()
	3
	<proc_055>
	fork(1)					# <proc_055>(3)
	30
	wait					# wait 30
	3
	<proc_054>
	fork(1)					# <proc_054>(3)
	2
	<proc_055>
	fork(1)					# <proc_055>(2)
	30
	wait					# wait 30
	2
	<proc_054>
	fork(1)					# <proc_054>(2)
	1
	<proc_055>
	fork(1)					# <proc_055>(1)
	65
	wait					# wait 65
	1
	<proc_054>
	fork(1)					# <proc_054>(1)
	end

proc proc_040 
	# <proc_040>()
	1
	<proc_055>
	fork(1)					# <proc_055>(1)
	30
	wait					# wait 30
	1
	<proc_054>
	fork(1)					# <proc_054>(1)
	2
	<proc_055>
	fork(1)					# <proc_055>(2)
	30
	wait					# wait 30
	2
	<proc_054>
	fork(1)					# <proc_054>(2)
	3
	<proc_055>
	fork(1)					# <proc_055>(3)
	30
	wait					# wait 30
	3
	<proc_054>
	fork(1)					# <proc_054>(3)
	4
	<proc_055>
	fork(1)					# <proc_055>(4)
	85
	wait					# wait 85
	4
	<proc_054>
	fork(1)					# <proc_054>(4)
	end

proc proc_041 
	# <proc_041>()
	4
	<proc_055>
	fork(1)					# <proc_055>(4)
	5
	6
	*					# 6*5
	wait					# wait 6*5
	4
	<proc_054>
	fork(1)					# <proc_054>(4)
	5
	<proc_055>
	fork(1)					# <proc_055>(5)
	5
	6
	*					# 6*5
	wait					# wait 6*5
	5
	<proc_054>
	fork(1)					# <proc_054>(5)
	6
	<proc_055>
	fork(1)					# <proc_055>(6)
	5
	18
	*					# 18*5
	wait					# wait 18*5
	6
	<proc_054>
	fork(1)					# <proc_054>(6)
	end

proc proc_042 
	# <proc_042>()
	6
	<proc_055>
	fork(1)					# <proc_055>(6)
	5
	6
	*					# 6*5
	wait					# wait 6*5
	6
	<proc_054>
	fork(1)					# <proc_054>(6)
	5
	<proc_055>
	fork(1)					# <proc_055>(5)
	5
	17
	*					# 17*5
	wait					# wait 17*5
	5
	<proc_054>
	fork(1)					# <proc_054>(5)
	end

proc proc_043 
	# <proc_043>()
	5
	<proc_055>
	fork(1)					# <proc_055>(5)
	5
	6
	*					# 6*5
	wait					# wait 6*5
	5
	<proc_054>
	fork(1)					# <proc_054>(5)
	6
	<proc_055>
	fork(1)					# <proc_055>(6)
	5
	17
	*					# 17*5
	wait					# wait 17*5
	6
	<proc_054>
	fork(1)					# <proc_054>(6)
	end

proc proc_044 
	# <proc_044>()
	6
	0
	set state.x				# set state.x 0
	set state.y				# set state.y 6
	10
	set state.size				# set state.size 10
	0
	set state.face				# set state.face 0
	8
	<proc_045>
	fork(1)					# <proc_045>(8)
	end

proc proc_045 
	# <proc_045>(8)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		0
		set state.tint			# set state.tint 0
		17
		1
		20
		<proc_015>
		fork(3)				# <proc_015>(17, 1, 20)
		4
		set state.tint			# set state.tint 4
		17
		1
		20
		<proc_015>
		fork(3)				# <proc_015>(17, 1, 20)
		20
		state.y
		+
		set state.y			# set state.y (state.y+20)
		<proc_045>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_045>
		tail
	done
	end

proc proc_046 
	# <proc_046>(3)
	# <proc_046>(1)
	# <proc_046>(4)
	# <proc_046>(6)
	local.a
	1
	<proc_048>
	fork(2)					# <proc_048>(local.a, 1)
	5
	37
	*					# 37*5
	wait					# wait 37*5
	<proc_052>
	set state.proc				# set state.proc <proc_052>
	tail
	end

proc proc_047 
	# <proc_047>(5)
	local.a
	0
	<proc_048>
	fork(2)					# <proc_048>(local.a, 0)
	5
	53
	*					# 53*5
	wait					# wait 53*5
	<proc_052>
	set state.proc				# set state.proc <proc_052>
	tail
	end

proc proc_048 
	# <proc_048>(local.a, 1)
	# <proc_048>(local.a, 0)
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	3
	set state.tint				# set state.tint 3
	60
	110
	set state.x				# set state.x 110
	set state.y				# set state.y 60
	083f:3082
	185e:1e86
	14bc:3c49
	187f:3c8a
	f860:2087
	107e:3c08
	98bc:3ba6
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(083f:3082, 185e:1e86, 14bc:3c49, 187f:3c8a, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	local.a
	<proc_061>
	fork(1)					# <proc_061>(local.a)
	3
	state.y
	-
	80
	state.x
	+
	set state.x				# set state.x (state.x+80)
	set state.y				# set state.y (state.y-3)
	20
	wait					# wait 20
	1
	set state.size				# set state.size 1
	1
	local.b
	<cmp>
	when(==)				# (local.b==1)
		290
		<proc_049>
		fork(1)				# <proc_049>(290)
	else
		400
		<proc_049>
		fork(1)				# <proc_049>(400)
	done
	1
	local.b
	<cmp>
	when(==)				# (local.b==1)
		5
		26
		*				# 26*5
		wait				# wait 26*5
	else
		200
		wait				# wait 200
	done
	0
	set state.tint				# set state.tint 0
	60
	110
	set state.x				# set state.x 110
	set state.y				# set state.y 60
	083f:3082
	185e:1e86
	14bc:3c49
	187f:3c8a
	f860:2087
	107e:3c08
	98bc:3ba6
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(083f:3082, 185e:1e86, 14bc:3c49, 187f:3c8a, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	<proc_061>
	set state.proc				# set state.proc <proc_061>
	pop
	tail
	end

proc proc_049 
	# <proc_049>(290)
	# <proc_049>(400)
	3
	set state.size				# set state.size 3
	2
	set state.tint				# set state.tint 2
	local.a
	<proc_050>
	fork(1)					# <proc_050>(local.a)
	3
	wait					# wait 3
	2
	set state.size				# set state.size 2
	1
	set state.tint				# set state.tint 1
	local.a
	<proc_050>
	fork(1)					# <proc_050>(local.a)
	3
	set state.size				# set state.size 3
	9
	wait					# wait 9
	0
	set state.tint				# set state.tint 0
	<proc_050>
	set state.proc				# set state.proc <proc_050>
	tail
	end

proc proc_050 
	# <proc_050>(local.a)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		8
		<proc_030>
		fork(1)				# <proc_030>(8)
		4
		state.face
		+
		set state.face			# set state.face (state.face+4)
		0.5
		wait				# wait 0.5
		<proc_050>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_050>
		tail
	done
	end

proc proc_051 
	7
	17
	~
	set state.x				# set state.x (-17)
	set state.y				# set state.y 7
	64
	set state.face				# set state.face 64
	8
	<proc_060>
	fork(1)					# <proc_060>(8)
	2
	wait					# wait 2
	9
	<proc_059>
	fork(1)					# <proc_059>(9)
	end

proc proc_052 
	7
	17
	~
	set state.x				# set state.x (-17)
	set state.y				# set state.y 7
	64
	set state.face				# set state.face 64
	local.a
	<proc_059>
	fork(1)					# <proc_059>(local.a)
	15
	1
	set state.x				# set state.x 1
	set state.y				# set state.y 15
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		6
		<proc_053>
		fork(1)				# <proc_053>(6)
	done
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		9
		<proc_053>
		fork(1)				# <proc_053>(9)
	done
	2
	local.a
	<cmp>
	when(==)				# (local.a==2)
		5
		<proc_053>
		fork(1)				# <proc_053>(5)
	done
	3
	local.a
	<cmp>
	when(==)				# (local.a==3)
		7
		<proc_053>
		fork(1)				# <proc_053>(7)
	done
	4
	local.a
	<cmp>
	when(==)				# (local.a==4)
		7
		<proc_053>
		fork(1)				# <proc_053>(7)
	done
	5
	local.a
	<cmp>
	when(==)				# (local.a==5)
		7
		<proc_053>
		fork(1)				# <proc_053>(7)
	done
	6
	local.a
	<cmp>
	when(==)				# (local.a==6)
		8
		<proc_053>
		fork(1)				# <proc_053>(8)
	done
	7
	local.a
	<cmp>
	when(==)				# (local.a==7)
		<proc_053>
		5
		set local.a			# set local.a 5
		set state.proc			# set state.proc <proc_053>
		tail
	done
	end

proc proc_053 
	# <proc_053>(6)
	# <proc_053>(9)
	# <proc_053>(5)
	# <proc_053>(7)
	# <proc_053>(8)
	1
	local.a
	12
	*					# 12*local.a
	+
	15
	28
	<proc_002>
	<proc_198>
	fork(4)					# <proc_198>((12*local.a+1), 15, 28, <proc_002>)
	end

proc proc_054 
	# <proc_054>(0)
	# <proc_054>(1)
	# <proc_054>(2)
	# <proc_054>(3)
	# <proc_054>(4)
	# <proc_054>(5)
	# <proc_054>(6)
	168
	33
	set state.x				# set state.x 33
	set state.y				# set state.y 168
	0
	set state.face				# set state.face 0
	0
	set state.tint				# set state.tint 0
	22
	local.a
	*					# local.a*22
	move					# move local.a*22
	0
	9
	<proc_058>
	fork(2)					# <proc_058>(0, 9)
	<proc_060>
	set state.proc				# set state.proc <proc_060>
	tail
	end

proc proc_055 
	# <proc_055>(0)
	# <proc_055>(1)
	# <proc_055>(2)
	# <proc_055>(3)
	# <proc_055>(4)
	# <proc_055>(5)
	# <proc_055>(6)
	168
	33
	set state.x				# set state.x 33
	set state.y				# set state.y 168
	0
	set state.face				# set state.face 0
	1
	set state.tint				# set state.tint 1
	22
	local.a
	*					# local.a*22
	move					# move local.a*22
	0
	9
	<proc_058>
	fork(2)					# <proc_058>(0, 9)
	<proc_059>
	set state.proc				# set state.proc <proc_059>
	tail
	end

proc proc_056 
	168
	33
	set state.x				# set state.x 33
	set state.y				# set state.y 168
	0
	set state.face				# set state.face 0
	1
	set state.tint				# set state.tint 1
	22
	local.a
	*					# local.a*22
	move					# move local.a*22
	0
	9
	<proc_058>
	fork(2)					# <proc_058>(0, 9)
	local.a
	<proc_059>
	fork(1)					# <proc_059>(local.a)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	32
	move					# move 32
	7
	set state.tint				# set state.tint 7
	11
	set state.size				# set state.size 11
	9
	<proc_057>
	fork(1)					# <proc_057>(9)
	2
	wait					# wait 2
	6
	set state.tint				# set state.tint 6
	9
	<proc_057>
	fork(1)					# <proc_057>(9)
	2
	wait					# wait 2
	5
	set state.tint				# set state.tint 5
	9
	<proc_057>
	fork(1)					# <proc_057>(9)
	2
	wait					# wait 2
	4
	set state.tint				# set state.tint 4
	<proc_057>
	9
	set local.a				# set local.a 9
	set state.proc				# set state.proc <proc_057>
	tail
	end

proc proc_057 
	# <proc_057>(9)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		11
		move				# move 11
		1
		wait				# wait 1
		<proc_057>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_057>
		tail
	done
	end

proc proc_058 
	# <proc_058>(0, 9)
	local.b
	local.a
	<cmp>
	when(<=)				# (local.a<=local.b)
		local.a
		set state.size			# set state.size local.a
		plot
		1
		wait				# wait 1
		<proc_058>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_058>
		tail
	done
	end

proc proc_059 
	# <proc_059>(9)
	# <proc_059>(local.a)
	2
	set state.F				# set state.F 2
	12
	set state.E				# set state.E 12
	<proc_006>
	set state.D				# set state.D <proc_006>
	4
	~
	move					# move (-4)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	20
	move					# move 20
	3
	set state.tint				# set state.tint 3
	local.a
	<proc_061>
	fork(1)					# <proc_061>(local.a)
	1
	move					# move 1
	1
	wait					# wait 1
	2
	set state.tint				# set state.tint 2
	<proc_061>
	set state.proc				# set state.proc <proc_061>
	tail
	end

proc proc_060 
	# <proc_060>(8)
	2
	set state.F				# set state.F 2
	12
	set state.E				# set state.E 12
	<proc_008>
	set state.D				# set state.D <proc_008>
	4
	~
	move					# move (-4)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	20
	move					# move 20
	0
	set state.tint				# set state.tint 0
	<proc_061>
	set state.proc				# set state.proc <proc_061>
	tail
	end

proc proc_061 
	# <proc_061>(local.a)
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		9a6e:19a6
		9a7f:2186
		14bc:3c49
		107f:2c49
		189c:2186
		823f:3f20
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, 9a7f:2186, 14bc:3c49, 107f:2c49, 189c:2186, 823f:3f20, 0, 0, 0, 0, 0)
	done
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		40bf:3f08
		9a7f:2186
		9a6e:19a6
		9a6e:19a6
		14bc:3c49
		98bc:3ba6
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(40bf:3f08, 9a7f:2186, 9a6e:19a6, 9a6e:19a6, 14bc:3c49, 98bc:3ba6, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0)
	done
	2
	local.a
	<cmp>
	when(==)				# (local.a==2)
		187f:3c8a
		9a7f:2186
		40bf:3f08
		185e:1e86
		9a6e:19a6
		0
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(187f:3c8a, 9a7f:2186, 40bf:3f08, 185e:1e86, 9a6e:19a6, 0, 0, 0, 0, 0, 0)
	done
	3
	local.a
	<cmp>
	when(==)				# (local.a==3)
		f041:0107
		107f:2c49
		14bc:3c49
		189c:2186
		823f:2350
		9a7f:2186
		107f:2c49
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(f041:0107, 107f:2c49, 14bc:3c49, 189c:2186, 823f:2350, 9a7f:2186, 107f:2c49, 0, 0, 0, 0)
	done
	4
	local.a
	<cmp>
	when(==)				# (local.a==4)
		9a6e:19a6
		189c:2186
		14bc:3c49
		107e:3c08
		107e:3c08
		9a7f:2186
		107f:2c49
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, 189c:2186, 14bc:3c49, 107e:3c08, 107e:3c08, 9a7f:2186, 107f:2c49, 0, 0, 0, 0)
	done
	5
	local.a
	<cmp>
	when(==)				# (local.a==5)
		189c:2186
		107f:2c49
		14bc:3c49
		189c:2186
		823f:2350
		9a7f:2186
		107f:2c49
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(189c:2186, 107f:2c49, 14bc:3c49, 189c:2186, 823f:2350, 9a7f:2186, 107f:2c49, 0, 0, 0, 0)
	done
	6
	local.a
	<cmp>
	when(==)				# (local.a==6)
		107f:2c49
		9a7f:2186
		189c:2186
		9a7f:2186
		f860:2087
		040f:0f42
		9a7f:2186
		107f:2c49
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(107f:2c49, 9a7f:2186, 189c:2186, 9a7f:2186, f860:2087, 040f:0f42, 9a7f:2186, 107f:2c49, 0, 0, 0)
	done
	7
	local.a
	<cmp>
	when(==)				# (local.a==7)
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		6
		rand
		<ror>
		0
		<proc_208>
		fork(11)			# <proc_208>((rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), 0)
	done
	8
	local.a
	<cmp>
	when(==)				# (local.a==8)
		107f:2c49
		0
		0
		0
		0
		0
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(107f:2c49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	done
	9
	local.a
	<cmp>
	when(==)				# (local.a==9)
		187f:3c8a
		0
		0
		0
		0
		0
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(187f:3c8a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	done
	end

proc proc_062 
	# <proc_062>()
	<proc_063>
	set state.proc				# set state.proc <proc_063>
	tail
	end

proc proc_063 
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	60
	140
	set state.x				# set state.x 140
	set state.y				# set state.y 60
	083f:3082
	185e:1e86
	14bc:3c49
	187f:3c8a
	f860:2087
	107e:3c08
	98bc:3ba6
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(083f:3082, 185e:1e86, 14bc:3c49, 187f:3c8a, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
	10
	state.y
	+
	11
	state.x
	+
	set state.x				# set state.x (state.x+11)
	set state.y				# set state.y (state.y+10)
	081f:1f82
	9a6e:19a6
	9a7f:2186
	107f:2c49
	0
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(081f:1f82, 9a6e:19a6, 9a7f:2186, 107f:2c49, 0, 0, 0, 0, 0, 0, 0)
	10
	state.y
	+
	11
	state.x
	-
	set state.x				# set state.x (state.x-11)
	set state.y				# set state.y (state.y+10)
	147f:1c49
	107f:2c49
	185e:1e86
	927f:0104
	f860:2087
	083f:3082
	9a7f:2186
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(147f:1c49, 107f:2c49, 185e:1e86, 927f:0104, f860:2087, 083f:3082, 9a7f:2186, 0, 0, 0, 0)
	end

proc proc_064 
	4
	move					# move 4
	plot
	end

proc proc_065 
	10
	state.y
	-
	10
	state.x
	-
	set state.x				# set state.x (state.x-10)
	set state.y				# set state.y (state.y-10)
	0
	set state.face				# set state.face 0
	19
	1
	<proc_014>
	fork(2)					# <proc_014>(19, 1)
	19
	move					# move 19
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	19
	1
	<proc_014>
	fork(2)					# <proc_014>(19, 1)
	19
	move					# move 19
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	19
	1
	<proc_014>
	fork(2)					# <proc_014>(19, 1)
	19
	move					# move 19
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	19
	1
	<proc_014>
	fork(2)					# <proc_014>(19, 1)
	end

proc proc_066 
	# <proc_066>(0, 7)
	local.b
	local.a
	<cmp>
	when(<)					# (local.a<local.b)
		<proc_065>
		fork(0)				# <proc_065>()
		local.a
		<proc_069>
		fork(1)				# <proc_069>(local.a)
		25
		wait				# wait 25
		22
		move				# move 22
		<proc_066>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_066>
		tail
	done
	end

proc proc_067 
	7
	set state.tint				# set state.tint 7
	8
	state.y
	-
	8
	state.x
	-
	set state.x				# set state.x (state.x-8)
	set state.y				# set state.y (state.y-8)
	0
	set state.size				# set state.size 0
	local.a
	32
	<proc_068>
	fork(2)					# <proc_068>(local.a, 32)
	1
	wait					# wait 1
	2
	state.y
	+
	set state.y				# set state.y (state.y+2)
	local.b
	32
	<proc_068>
	fork(2)					# <proc_068>(local.b, 32)
	1
	wait					# wait 1
	2
	state.y
	+
	set state.y				# set state.y (state.y+2)
	local.c
	32
	<proc_068>
	fork(2)					# <proc_068>(local.c, 32)
	1
	wait					# wait 1
	2
	state.y
	+
	set state.y				# set state.y (state.y+2)
	local.d
	32
	<proc_068>
	fork(2)					# <proc_068>(local.d, 32)
	1
	wait					# wait 1
	2
	state.y
	+
	set state.y				# set state.y (state.y+2)
	local.e
	32
	<proc_068>
	fork(2)					# <proc_068>(local.e, 32)
	1
	wait					# wait 1
	2
	state.y
	+
	set state.y				# set state.y (state.y+2)
	local.f
	32
	<proc_068>
	fork(2)					# <proc_068>(local.f, 32)
	1
	wait					# wait 1
	2
	state.y
	+
	set state.y				# set state.y (state.y+2)
	local.g
	32
	<proc_068>
	fork(2)					# <proc_068>(local.g, 32)
	1
	wait					# wait 1
	2
	state.y
	+
	set state.y				# set state.y (state.y+2)
	<proc_068>
	local.h
	32
	set local.b				# set local.b 32
	set local.a				# set local.a local.h
	set state.proc				# set state.proc <proc_068>
	pop
	pop
	pop
	pop
	pop
	pop
	tail
	end

proc proc_068 
	# <proc_068>(local.a, 32)
	# <proc_068>(local.b, 32)
	# <proc_068>(local.c, 32)
	# <proc_068>(local.d, 32)
	# <proc_068>(local.e, 32)
	# <proc_068>(local.f, 32)
	# <proc_068>(local.g, 32)
	16
	local.b
	<cmp>
	when(==)				# (local.b==16)
		1
		state.y
		+
		16
		state.x
		-
		set state.x			# set state.x (state.x-16)
		set state.y			# set state.y (state.y+1)
	done
	0
	local.b
	<cmp>
	when(>)					# (local.b>0)
		1
		local.a
		&
		when(!=)			# (local.a&1) !=
			plot
		done
		1
		move				# move 1
		0.25
		wait				# wait 0.25
		<proc_068>
		1
		local.a
		<ror>
		1
		local.b
		-
		set local.b			# set local.b (local.b-1)
		set local.a			# set local.a (local.a<ror>1)
		set state.proc			# set state.proc <proc_068>
		tail
	done
	end

proc proc_069 
	# <proc_069>(local.a)
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		1f00:2080
		4040:8320
		8320:b020
		b820:bc20
		5c40:2080
		1f30:0038
		001c:000e
		0007:0002
		<proc_067>
		fork(8)				# <proc_067>(1f00:2080, 4040:8320, 8320:b020, b820:bc20, 5c40:2080, 1f30:0038, 001c:000e, 0007:0002)
	done
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		0
		0000:7ffe
		3ffc:5ffa
		6ff6:77ee
		6816:5ffa
		3ffc:7ffe
		0
		0
		<proc_067>
		fork(8)				# <proc_067>(0, 0000:7ffe, 3ffc:5ffa, 6ff6:77ee, 6816:5ffa, 3ffc:7ffe, 0, 0)
	done
	2
	local.a
	<cmp>
	when(==)				# (local.a==2)
		5456
		3ff8:a00a
		2fe8:a82a
		2828:a82a
		2828:a00a
		3ff8:8002
		3ff8:1550
		5456
		<proc_067>
		fork(8)				# <proc_067>(5456, 3ff8:a00a, 2fe8:a82a, 2828:a82a, 2828:a00a, 3ff8:8002, 3ff8:1550, 5456)
	done
	3
	local.a
	<cmp>
	when(==)				# (local.a==3)
		0
		6223:6223
		6223:6223
		6223:6223
		7777:7777
		7777:7777
		0000:7777
		0
		<proc_067>
		fork(8)				# <proc_067>(0, 6223:6223, 6223:6223, 6223:6223, 7777:7777, 7777:7777, 0000:7777, 0)
	done
	4
	local.a
	<cmp>
	when(==)				# (local.a==4)
		0000:1c18
		2318:40a0
		4040:40a0
		2170:22f0
		15f8:2bf8
		34e8:3b10
		3ce0:0e00
		77f0:7bf8
		<proc_067>
		fork(8)				# <proc_067>(0000:1c18, 2318:40a0, 4040:40a0, 2170:22f0, 15f8:2bf8, 34e8:3b10, 3ce0:0e00, 77f0:7bf8)
	done
	5
	local.a
	<cmp>
	when(==)				# (local.a==5)
		0000:01e0
		03f0:07f8
		04c8:04c8
		07b8:01e0
		0210:01e0
		0000:00c0
		03c0:00c0
		03c0:03c0
		<proc_067>
		fork(8)				# <proc_067>(0000:01e0, 03f0:07f8, 04c8:04c8, 07b8:01e0, 0210:01e0, 0000:00c0, 03c0:00c0, 03c0:03c0)
	done
	6
	local.a
	<cmp>
	when(==)				# (local.a==6)
		0000:0ff8
		4088
		01c0:01c0
		01c0:01c0
		01c0:0ff8
		07f0:03e0
		01c0:0080
		0
		<proc_067>
		fork(8)				# <proc_067>(0000:0ff8, 4088, 01c0:01c0, 01c0:01c0, 01c0:0ff8, 07f0:03e0, 01c0:0080, 0)
	done
	7
	local.a
	<cmp>
	when(==)				# (local.a==7)
		0410:0a28
		1144:2082
		1004:280a
		1414:0808
		1004:2082
		1144:2aaa
		1554:0a28
		1040
		<proc_067>
		fork(8)				# <proc_067>(0410:0a28, 1144:2082, 1004:280a, 1414:0808, 1004:2082, 1144:2aaa, 1554:0a28, 1040)
	done
	end

proc proc_070 
	# <proc_070>()
	7
	set state.G				# set state.G 7
	<proc_076>
	fork(0)					# <proc_076>()
	5
	12
	*					# 12*5
	wait					# wait 12*5
	<proc_078>
	fork(0)					# <proc_078>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	40
	4
	set state.x				# set state.x 4
	set state.y				# set state.y 40
	<proc_084>
	fork(0)					# <proc_084>()
	3
	state.y
	+
	set state.y				# set state.y (state.y+3)
	end

proc proc_071 
	43
	3
	set state.x				# set state.x 3
	set state.y				# set state.y 43
	0
	72
	0081:0281
	<proc_072>
	fork(3)					# <proc_072>(0, 72, 0081:0281)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	0
	72
	c444:4444
	<proc_072>
	fork(3)					# <proc_072>(0, 72, c444:4444)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	0
	72
	1010:9010
	<proc_072>
	fork(3)					# <proc_072>(0, 72, 1010:9010)
	end

proc proc_072 
	# <proc_072>(0, 72, 0081:0281)
	# <proc_072>(0, 72, c444:4444)
	# <proc_072>(0, 72, 1010:9010)
	0
	local.b
	<cmp>
	when(>)					# (local.b>0)
		1
		local.c
		&
		when(!=)			# (local.c&1) !=
			14
			local.a
			<cmp>
			when(==)		# (local.a==14)
				7
				<proc_073>
				fork(1)		# <proc_073>(7)
			else
				8
				<proc_073>
				fork(1)		# <proc_073>(8)
			done
		done
		1
		local.a
		&
		when(!=)			# (local.a&1) !=
			4
			wait			# wait 4
		else
			8
			wait			# wait 8
		done
		31
		local.a
		<cmp>
		when(<)				# (local.a<31)
			<proc_072>
			1
			local.a
			+
			1
			local.b
			-
			1
			local.c
			<ror>
			set local.c		# set local.c (local.c<ror>1)
			set local.b		# set local.b (local.b-1)
			set local.a		# set local.a (local.a+1)
			set state.proc		# set state.proc <proc_072>
			tail
		else
			<proc_072>
			0
			1
			local.b
			-
			1
			local.c
			<ror>
			set local.c		# set local.c (local.c<ror>1)
			set local.b		# set local.b (local.b-1)
			set local.a		# set local.a 0
			set state.proc		# set state.proc <proc_072>
			tail
		done
	done
	end

proc proc_073 
	# <proc_073>(7)
	# <proc_073>(8)
	0
	set state.face				# set state.face 0
	3
	set state.size				# set state.size 3
	2
	set state.tint				# set state.tint 2
	plot
	7
	move					# move 7
	plot
	7
	move					# move 7
	plot
	7
	move					# move 7
	plot
	7
	move					# move 7
	plot
	7
	move					# move 7
	plot
	7
	move					# move 7
	plot
	7
	move					# move 7
	plot
	1
	wait					# wait 1
	0
	set state.tint				# set state.tint 0
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	local.a
	7
	<proc_074>
	fork(2)					# <proc_074>(local.a, 7)
	end

proc proc_074 
	# <proc_074>(local.a, 7)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		local.b
		move				# move local.b
		1
		wait				# wait 1
		<proc_074>
		1
		local.a
		-
		1
		local.b
		*				# local.b*1
		set local.b			# set local.b local.b*1
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_074>
		tail
	done
	end

proc proc_075 
	# <proc_075>()
	<proc_071>
	fork(0)					# <proc_071>()
	43
	30
	set state.x				# set state.x 30
	set state.y				# set state.y 43
	0
	72
	<proc_082>
	fork(2)					# <proc_082>(0, 72)
	6
	22
	*					# 22*6
	wait					# wait 22*6
	8
	wait					# wait 8
	<proc_094>
	fork(0)					# <proc_094>()
	4
	wait					# wait 4
	6
	56
	*					# 56*6
	wait					# wait 56*6
	<proc_044>
	set state.proc				# set state.proc <proc_044>
	tail
	end

proc proc_076 
	# <proc_076>()
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	20
	19
	set state.x				# set state.x 19
	set state.y				# set state.y 20
	7
	set state.tint				# set state.tint 7
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	1
	wait					# wait 1
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	1
	wait					# wait 1
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	1
	wait					# wait 1
	083f:3082
	<proc_079>
	fork(1)					# <proc_079>(083f:3082)
	6
	move					# move 6
	1
	wait					# wait 1
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	1
	wait					# wait 1
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	1
	wait					# wait 1
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	1
	wait					# wait 1
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	1
	wait					# wait 1
	040f:0f42
	<proc_079>
	fork(1)					# <proc_079>(040f:0f42)
	6
	move					# move 6
	1
	wait					# wait 1
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	1
	wait					# wait 1
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	1
	wait					# wait 1
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	1
	wait					# wait 1
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	1
	wait					# wait 1
	107e:3c08
	<proc_079>
	fork(1)					# <proc_079>(107e:3c08)
	6
	move					# move 6
	1
	wait					# wait 1
	9a72:26a6
	<proc_079>
	fork(1)					# <proc_079>(9a72:26a6)
	6
	move					# move 6
	1
	wait					# wait 1
	9a72:26a6
	<proc_079>
	fork(1)					# <proc_079>(9a72:26a6)
	6
	move					# move 6
	1
	wait					# wait 1
	0
	<proc_079>
	fork(1)					# <proc_079>(0)
	6
	move					# move 6
	1
	wait					# wait 1
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	1
	wait					# wait 1
	9861:1bb6
	<proc_079>
	fork(1)					# <proc_079>(9861:1bb6)
	6
	move					# move 6
	1
	wait					# wait 1
	29
	19
	set state.x				# set state.x 19
	set state.y				# set state.y 29
	6
	move					# move 6
	1
	wait					# wait 1
	6
	move					# move 6
	1
	wait					# wait 1
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	1
	wait					# wait 1
	147f:1c49
	<proc_079>
	fork(1)					# <proc_079>(147f:1c49)
	6
	move					# move 6
	1
	wait					# wait 1
	40bf:3f08
	<proc_079>
	fork(1)					# <proc_079>(40bf:3f08)
	6
	move					# move 6
	1
	wait					# wait 1
	<proc_081>
	fork(0)					# <proc_081>()
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	1
	wait					# wait 1
	f880:0083
	<proc_079>
	fork(1)					# <proc_079>(f880:0083)
	6
	move					# move 6
	1
	wait					# wait 1
	9a72:26a6
	<proc_079>
	fork(1)					# <proc_079>(9a72:26a6)
	6
	move					# move 6
	1
	wait					# wait 1
	9a6f:11a6
	<proc_079>
	fork(1)					# <proc_079>(9a6f:11a6)
	end

proc proc_077 
	26
	263
	set state.x				# set state.x 263
	set state.y				# set state.y 26
	8
	set state.size				# set state.size 8
	7
	set state.tint				# set state.tint 7
	plot
	2
	set state.tint				# set state.tint 2
	plot
	4
	set state.tint				# set state.tint 4
	7
	set state.size				# set state.size 7
	plot
	4
	set state.size				# set state.size 4
	7
	set state.tint				# set state.tint 7
	plot
	8
	set state.size				# set state.size 8
	20
	move					# move 20
	0
	set state.tint				# set state.tint 0
	plot
	end

proc proc_078 
	# <proc_078>()
	26
	263
	set state.x				# set state.x 263
	set state.y				# set state.y 26
	8
	set state.size				# set state.size 8
	7
	set state.tint				# set state.tint 7
	plot
	2
	set state.tint				# set state.tint 2
	plot
	4
	set state.tint				# set state.tint 4
	7
	set state.size				# set state.size 7
	plot
	4
	set state.size				# set state.size 4
	7
	set state.tint				# set state.tint 7
	plot
	10
	wait					# wait 10
	20
	move					# move 20
	8
	set state.size				# set state.size 8
	7
	set state.tint				# set state.tint 7
	plot
	4
	set state.tint				# set state.tint 4
	7
	set state.size				# set state.size 7
	plot
	<proc_080>
	fork(0)					# <proc_080>()
	10
	wait					# wait 10
	20
	move					# move 20
	8
	set state.size				# set state.size 8
	7
	set state.tint				# set state.tint 7
	plot
	4
	set state.tint				# set state.tint 4
	7
	set state.size				# set state.size 7
	plot
	4
	set state.size				# set state.size 4
	7
	set state.tint				# set state.tint 7
	draw
	5
	26
	*					# 26*5
	wait					# wait 26*5
	20
	~
	move					# move (-20)
	20
	~
	move					# move (-20)
	7
	set state.size				# set state.size 7
	0
	set state.tint				# set state.tint 0
	plot
	20
	move					# move 20
	2
	set state.tint				# set state.tint 2
	plot
	end

proc proc_079 
	# <proc_079>(f041:0107)
	# <proc_079>(f860:2087)
	# <proc_079>(083f:3082)
	# <proc_079>(9a7f:2186)
	# <proc_079>(107f:2c49)
	# <proc_079>(040f:0f42)
	# <proc_079>(9a6e:19a6)
	# <proc_079>(185e:1e86)
	# <proc_079>(107e:3c08)
	# <proc_079>(9a72:26a6)
	2
	state.y
	+
	3
	state.x
	+
	set state.x				# set state.x (state.x+3)
	set state.y				# set state.y (state.y+2)
	7
	set state.tint				# set state.tint 7
	3
	set state.size				# set state.size 3
	plot
	1
	wait					# wait 1
	4
	set state.tint				# set state.tint 4
	plot
	0
	wait					# wait 0
	2
	state.y
	-
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y-2)
	state.G
	set state.tint				# set state.tint state.G
	0
	set state.size				# set state.size 0
	<proc_207>
	set state.proc				# set state.proc <proc_207>
	tail
	end

proc proc_080 
	# <proc_080>()
	0
	set state.size				# set state.size 0
	7
	set state.tint				# set state.tint 7
	4
	state.y
	-
	4
	state.x
	-
	set state.x				# set state.x (state.x-4)
	set state.y				# set state.y (state.y-4)
	plot
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	9
	0
	<proc_014>
	fork(2)					# <proc_014>(9, 0)
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	9
	0
	<proc_014>
	fork(2)					# <proc_014>(9, 0)
	2
	state.x
	+
	set state.x				# set state.x (state.x+2)
	9
	0
	<proc_014>
	fork(2)					# <proc_014>(9, 0)
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	9
	0
	<proc_014>
	fork(2)					# <proc_014>(9, 0)
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	7
	0
	<proc_014>
	fork(2)					# <proc_014>(7, 0)
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	5
	0
	<proc_014>
	fork(2)					# <proc_014>(5, 0)
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	3
	0
	<proc_014>
	fork(2)					# <proc_014>(3, 0)
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	1
	0
	<proc_014>
	fork(2)					# <proc_014>(1, 0)
	end

proc proc_081 
	# <proc_081>()
	state.G
	set state.tint				# set state.tint state.G
	0
	set state.size				# set state.size 0
	2
	move					# move 2
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	2
	move					# move 2
	plot
	2
	move					# move 2
	plot
	end

proc proc_082 
	# <proc_082>(0, 72)
	0
	local.b
	<cmp>
	when(>)					# (local.b>0)
		2
		set state.tint			# set state.tint 2
		local.a
		<proc_083>
		fork(1)				# <proc_083>(local.a)
		1
		local.a
		&
		when(!=)			# (local.a&1) !=
			4
			wait			# wait 4
		else
			8
			wait			# wait 8
		done
		0
		set state.tint			# set state.tint 0
		local.a
		<proc_083>
		fork(1)				# <proc_083>(local.a)
		8
		move				# move 8
		31
		local.a
		<cmp>
		when(<)				# (local.a<31)
			<proc_082>
			1
			local.a
			+
			1
			local.b
			-
			set local.b		# set local.b (local.b-1)
			set local.a		# set local.a (local.a+1)
			set state.proc		# set state.proc <proc_082>
			tail
		else
			<proc_082>
			0
			1
			local.b
			-
			set local.b		# set local.b (local.b-1)
			set local.a		# set local.a 0
			set state.proc		# set state.proc <proc_082>
			tail
		done
	else
		<proc_077>
		set state.proc			# set state.proc <proc_077>
		pop
		pop
		tail
	done
	end

proc proc_083 
	# <proc_083>(local.a)
	8
	local.a
	*					# local.a*8
	59
	+
	set state.x				# set state.x (59+local.a*8)
	3
	set state.size				# set state.size 3
	plot
	64
	set state.face				# set state.face 64
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	end

proc proc_084 
	# <proc_084>()
	0
	set state.face				# set state.face 0
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	7
	set state.tint				# set state.tint 7
	823f:2350
	f860:2087
	189c:2186
	823f:2350
	0
	0
	0
	0081:0281
	<proc_085>
	fork(8)					# <proc_085>(823f:2350, f860:2087, 189c:2186, 823f:2350, 0, 0, 0, 0081:0281)
	1
	wait					# wait 1
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	823f:3f20
	14bc:3c49
	f041:0107
	0
	0
	0
	0
	c444:4444
	<proc_085>
	fork(8)					# <proc_085>(823f:3f20, 14bc:3c49, f041:0107, 0, 0, 0, 0, c444:4444)
	1
	wait					# wait 1
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	9a6e:19a6
	107e:3c08
	14bc:3c49
	107f:2c49
	9a7f:2186
	0
	0
	1010:9010
	<proc_085>
	fork(8)					# <proc_085>(9a6e:19a6, 107e:3c08, 14bc:3c49, 107f:2c49, 9a7f:2186, 0, 0, 1010:9010)
	1
	wait					# wait 1
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	189c:2186
	185e:1e86
	881f:1f81
	987f:14aa
	9a7f:2186
	083f:3082
	083f:3082
	0
	<proc_085>
	fork(8)					# <proc_085>(189c:2186, 185e:1e86, 881f:1f81, 987f:14aa, 9a7f:2186, 083f:3082, 083f:3082, 0)
	1
	wait					# wait 1
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	987f:14aa
	14bc:3c49
	9a6e:19a6
	9a6e:19a6
	0
	0
	0
	0
	<proc_085>
	fork(8)					# <proc_085>(987f:14aa, 14bc:3c49, 9a6e:19a6, 9a6e:19a6, 0, 0, 0, 0)
	end

proc proc_085 
	# <proc_085>(823f:2350, f860:2087, 189c:2186, 823f:2350, 0, 0, 0, 0081:0281)
	# <proc_085>(823f:3f20, 14bc:3c49, f041:0107, 0, 0, 0, 0, c444:4444)
	# <proc_085>(9a6e:19a6, 107e:3c08, 14bc:3c49, 107f:2c49, 9a7f:2186, 0, 0, 1010:9010)
	# <proc_085>(189c:2186, 185e:1e86, 881f:1f81, 987f:14aa, 9a7f:2186, 083f:3082, 083f:3082, 0)
	# <proc_085>(987f:14aa, 14bc:3c49, 9a6e:19a6, 9a6e:19a6, 0, 0, 0, 0)
	local.a
	local.b
	local.c
	local.d
	local.e
	local.f
	local.g
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(local.a, local.b, local.c, local.d, local.e, local.f, local.g, 0, 0, 0, 0)
	5
	7
	*					# 7*5
	wait					# wait 7*5
	3
	state.y
	+
	55
	state.x
	+
	set state.x				# set state.x (state.x+55)
	set state.y				# set state.y (state.y+3)
	<proc_086>
	32
	local.h
	set local.b				# set local.b local.h
	set local.a				# set local.a 32
	set state.proc				# set state.proc <proc_086>
	pop
	pop
	pop
	pop
	pop
	pop
	tail
	end

proc proc_086 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		7
		set state.tint			# set state.tint 7
		4
		set state.size			# set state.size 4
		plot
		4
		set state.tint			# set state.tint 4
		3
		set state.size			# set state.size 3
		plot
		1
		local.b
		&
		when(!=)			# (local.b&1) !=
			2
			set state.size		# set state.size 2
			7
			set state.tint		# set state.tint 7
			draw
		done
		8
		move				# move 8
		1
		wait				# wait 1
		<proc_086>
		1
		local.a
		-
		1
		local.b
		<ror>
		set local.b			# set local.b (local.b<ror>1)
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_086>
		tail
	done
	end

proc proc_087 
	# <proc_087>(30)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		40
		rand
		*				# rand*40
		state.G
		+
		40
		rand
		*				# rand*40
		state.H
		+
		set state.x			# set state.x (state.H+rand*40)
		set state.y			# set state.y (state.G+rand*40)
		10
		rand
		*				# rand*10
		3
		+
		set state.size			# set state.size (3+rand*10)
		3
		rand
		*				# rand*3
		1
		+
		set state.tint			# set state.tint (1+rand*3)
		plot
		2
		wait				# wait 2
		0
		set state.tint			# set state.tint 0
		plot
		<proc_087>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_087>
		tail
	done
	end

proc proc_088 
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	0
	set state.size				# set state.size 0
	135
	250
	set state.x				# set state.x 250
	set state.y				# set state.y 135
	250
	seed					# 250
	6
	set state.tint				# set state.tint 6
	<proc_095>
	fork(0)					# <proc_095>()
	17
	state.y
	+
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y+17)
	66
	20
	20
	<proc_001>
	<proc_198>
	fork(4)					# <proc_198>(66, 20, 20, <proc_001>)
	5
	set state.tint				# set state.tint 5
	200
	<proc_089>
	fork(1)					# <proc_089>(200)
	192
	set state.face				# set state.face 192
	3
	set state.tint				# set state.tint 3
	1
	<proc_090>
	fork(1)					# <proc_090>(1)
	5
	2
	*					# 2*5
	wait					# wait 2*5
	4
	set state.tint				# set state.tint 4
	200
	<proc_089>
	fork(1)					# <proc_089>(200)
	0
	set state.tint				# set state.tint 0
	0
	<proc_090>
	fork(1)					# <proc_090>(0)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	0
	set state.tint				# set state.tint 0
	66
	20
	20
	<proc_006>
	<proc_198>
	fork(4)					# <proc_198>(66, 20, 20, <proc_006>)
	135
	250
	set state.x				# set state.x 250
	set state.y				# set state.y 135
	4
	set state.tint				# set state.tint 4
	0
	set state.face				# set state.face 0
	250
	seed					# 250
	<proc_095>
	fork(0)					# <proc_095>()
	10
	wait					# wait 10
	10
	wait					# wait 10
	169
	188
	set state.x				# set state.x 188
	set state.y				# set state.y 169
	7
	set state.tint				# set state.tint 7
	<proc_065>
	fork(0)					# <proc_065>()
	7
	<proc_069>
	fork(1)					# <proc_069>(7)
	end

proc proc_089 
	# <proc_089>(200)
	0
	set state.size				# set state.size 0
	192
	set state.face				# set state.face 192
	30
	state.x
	+
	set state.x				# set state.x (state.x+30)
	local.a
	0
	<proc_092>
	fork(2)					# <proc_092>(local.a, 0)
	10
	rand
	*					# rand*10
	state.y
	-
	10
	rand
	*					# rand*10
	state.x
	+
	set state.x				# set state.x (state.x+rand*10)
	set state.y				# set state.y (state.y-rand*10)
	rand
	seed					# rand
	local.a
	0
	<proc_092>
	fork(2)					# <proc_092>(local.a, 0)
	10
	rand
	*					# rand*10
	state.y
	-
	10
	rand
	*					# rand*10
	state.x
	+
	set state.x				# set state.x (state.x+rand*10)
	set state.y				# set state.y (state.y-rand*10)
	rand
	seed					# rand
	local.a
	0
	<proc_092>
	fork(2)					# <proc_092>(local.a, 0)
	10
	rand
	*					# rand*10
	state.y
	-
	10
	rand
	*					# rand*10
	state.x
	+
	set state.x				# set state.x (state.x+rand*10)
	set state.y				# set state.y (state.y-rand*10)
	rand
	seed					# rand
	local.a
	0
	<proc_092>
	fork(2)					# <proc_092>(local.a, 0)
	end

proc proc_090 
	# <proc_090>(1)
	# <proc_090>(0)
	30
	state.x
	+
	set state.x				# set state.x (state.x+30)
	180
	local.a
	<proc_091>
	fork(2)					# <proc_091>(180, local.a)
	end

proc proc_091 
	# <proc_091>(180, local.a)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		1
		local.b
		<cmp>
		when(==)			# (local.b==1)
			3
			rand
			*			# rand*3
			1
			+
			set state.tint		# set state.tint (1+rand*3)
			3
			rand
			*			# rand*3
			set state.size		# set state.size rand*3
		else
			0
			set state.tint		# set state.tint 0
			4
			set state.size		# set state.size 4
		done
		plot
		0000:e666
		move				# move 0000:e666
		0000:cccc
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-0000:cccc))
		0000:9999
		wait				# wait 0000:9999
		<proc_091>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_091>
		tail
	done
	end

proc proc_092 
	# <proc_092>(local.a, 0)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		1
		move				# move 1
		0000:4ccc
		wait				# wait 0000:4ccc
		10
		local.b
		<cmp>
		when(<)				# (local.b<10)
			<proc_092>
			1
			local.a
			-
			1
			local.b
			+
			set local.b		# set local.b (local.b+1)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_092>
			tail
		else
			128
			rand
			*			# rand*128
			set state.face		# set state.face rand*128
			<proc_092>
			1
			local.a
			-
			0
			set local.b		# set local.b 0
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_092>
			tail
		done
	done
	end

proc proc_093 
	# <proc_093>()
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	0
	set state.size				# set state.size 0
	135
	250
	set state.x				# set state.x 250
	set state.y				# set state.y 135
	6
	set state.tint				# set state.tint 6
	<proc_096>
	fork(0)					# <proc_096>()
	17
	state.y
	+
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y+17)
	66
	20
	20
	<proc_001>
	<proc_198>
	fork(4)					# <proc_198>(66, 20, 20, <proc_001>)
	5
	32
	*					# 32*5
	wait					# wait 32*5
	0
	set state.tint				# set state.tint 0
	66
	20
	20
	<proc_006>
	<proc_198>
	fork(4)					# <proc_198>(66, 20, 20, <proc_006>)
	135
	250
	set state.x				# set state.x 250
	set state.y				# set state.y 135
	4
	set state.tint				# set state.tint 4
	<proc_096>
	set state.proc				# set state.proc <proc_096>
	tail
	end

proc proc_094 
	# <proc_094>()
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	0
	set state.size				# set state.size 0
	135
	250
	set state.x				# set state.x 250
	set state.y				# set state.y 135
	6
	set state.tint				# set state.tint 6
	<proc_097>
	fork(0)					# <proc_097>()
	17
	state.y
	+
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y+17)
	66
	20
	20
	<proc_001>
	<proc_198>
	fork(4)					# <proc_198>(66, 20, 20, <proc_001>)
	5
	32
	*					# 32*5
	wait					# wait 32*5
	0
	set state.tint				# set state.tint 0
	66
	20
	20
	<proc_006>
	<proc_198>
	fork(4)					# <proc_198>(66, 20, 20, <proc_006>)
	135
	250
	set state.x				# set state.x 250
	set state.y				# set state.y 135
	4
	set state.tint				# set state.tint 4
	<proc_097>
	set state.proc				# set state.proc <proc_097>
	tail
	end

proc proc_095 
	# <proc_095>()
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	0
	0
	<proc_208>
	fork(11)				# <proc_208>((rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	0
	0
	<proc_208>
	fork(11)				# <proc_208>((rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), 0, 0)
	end

proc proc_096 
	# <proc_096>()
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	0
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	0
	0
	<proc_208>
	fork(11)				# <proc_208>((rand<ror>6), (rand<ror>6), (rand<ror>6), 0, (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	0
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	6
	rand
	<ror>
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(0, (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), (rand<ror>6), 0, 0, 0)
	end

proc proc_097 
	# <proc_097>()
	107e:3c08
	9a7f:2186
	881f:1f81
	0
	040f:0f42
	185e:1e86
	f860:2087
	189c:2186
	9a7f:2186
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(107e:3c08, 9a7f:2186, 881f:1f81, 0, 040f:0f42, 185e:1e86, f860:2087, 189c:2186, 9a7f:2186, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	0
	40bf:3f08
	9a7f:2186
	9a6e:19a6
	9a6e:19a6
	14bc:3c49
	98bc:3ba6
	9a7f:2186
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(0, 40bf:3f08, 9a7f:2186, 9a6e:19a6, 9a6e:19a6, 14bc:3c49, 98bc:3ba6, 9a7f:2186, 0, 0, 0)
	end

proc proc_098 
	# <proc_098>()
	1.5
	set state.C				# set state.C 1.5
	<proc_109>
	fork(0)					# <proc_109>()
	41
	1
	~
	set state.x				# set state.x (-1)
	set state.y				# set state.y 41
	5
	set state.tint				# set state.tint 5
	64
	set state.face				# set state.face 64
	5
	<proc_108>
	fork(1)					# <proc_108>(5)
	5
	48
	*					# 48*5
	wait					# wait 48*5
	0
	set state.face				# set state.face 0
	<proc_107>
	fork(0)					# <proc_107>()
	5
	16
	*					# 16*5
	wait					# wait 16*5
	93
	135
	set state.x				# set state.x 135
	set state.y				# set state.y 93
	176
	45
	42
	<proc_006>
	<proc_198>
	fork(4)					# <proc_198>(176, 45, 42, <proc_006>)
	0
	set state.size				# set state.size 0
	1
	set state.tint				# set state.tint 1
	2
	state.y
	-
	2
	state.x
	+
	set state.x				# set state.x (state.x+2)
	set state.y				# set state.y (state.y-2)
	1
	set state.tint				# set state.tint 1
	88
	<proc_105>
	fork(1)					# <proc_105>(88)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	1
	<proc_104>
	fork(1)					# <proc_104>(1)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	93
	135
	set state.x				# set state.x 135
	set state.y				# set state.y 93
	1
	state.y
	-
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y-1)
	21
	state.y
	-
	set state.y				# set state.y (state.y-21)
	0
	set state.face				# set state.face 0
	<proc_099>
	fork(0)					# <proc_099>()
	<proc_110>
	fork(0)					# <proc_110>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	<proc_044>
	set state.proc				# set state.proc <proc_044>
	tail
	end

proc proc_099 
	# <proc_099>()
	88
	0
	3740:7665
	0139:1000
	dbcc:5ccd
	0000:3860
	0011:bac3
	cf47:67c4
	1112:0260
	3001:9227
	069a:d700
	6060.25
	3006:7b22
	0
	<proc_100>
	fork(14)				# <proc_100>(88, 0, 3740:7665, 0139:1000, dbcc:5ccd, 0000:3860, 0011:bac3, cf47:67c4, 1112:0260, 3001:9227, 069a:d700, 6060.25, 3006:7b22, 0)
	0002:1999
	88
	*					# 88*0002:1999
	wait					# wait 88*0002:1999
	88
	state.x
	+
	set state.x				# set state.x (state.x+88)
	88
	0
	3397:7993
	b211:2236
	6642:8523
	5017:38dc
	0147:5600
	4322:0002
	0
	abb4:0005
	0024:5717
	d301:a257
	5
	0
	<proc_100>
	fork(14)				# <proc_100>(88, 0, 3397:7993, b211:2236, 6642:8523, 5017:38dc, 0147:5600, 4322:0002, 0, abb4:0005, 0024:5717, d301:a257, 5, 0)
	0002:1999
	88
	*					# 88*0002:1999
	wait					# wait 88*0002:1999
	0
	<proc_104>
	fork(1)					# <proc_104>(0)
	end

proc proc_100 
	# <proc_100>(88, 0, 3740:7665, 0139:1000, dbcc:5ccd, 0000:3860, 0011:bac3, cf47:67c4, 1112:0260, 3001:9227, 069a:d700, 6060.25, 3006:7b22, 0)
	# <proc_100>(88, 0, 3397:7993, b211:2236, 6642:8523, 5017:38dc, 0147:5600, 4322:0002, 0, abb4:0005, 0024:5717, d301:a257, 5, 0)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		0
		set state.size			# set state.size 0
		2
		set state.tint			# set state.tint 2
		plot
		1.5
		15
		local.c
		&
		*				# (local.c&15)*1.5
		local.o
		<proc_101>
		fork(1)				# <proc_101>(local.o)
		0002:1999
		wait				# wait 0002:1999
		1
		move				# move 1
		7
		local.b
		<cmp>
		when(<)				# (local.b<7)
			<proc_100>
			1
			local.a
			-
			1
			local.b
			+
			4
			local.c
			<ror>
			0
			set local.n		# set local.n 0
			set local.c		# set local.c (local.c<ror>4)
			set local.b		# set local.b (local.b+1)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_100>
			pop
			tail
		else
			<proc_100>
			1
			local.a
			-
			0
			local.d
			local.e
			local.f
			local.g
			local.h
			local.i
			local.j
			local.k
			local.l
			local.m
			0
			0
			set local.n		# set local.n 0
			set local.m		# set local.m 0
			set local.l		# set local.l local.m
			set local.k		# set local.k local.l
			set local.j		# set local.j local.k
			set local.i		# set local.i local.j
			set local.h		# set local.h local.i
			set local.g		# set local.g local.h
			set local.f		# set local.f local.g
			set local.e		# set local.e local.f
			set local.d		# set local.d local.e
			set local.c		# set local.c local.d
			set local.b		# set local.b 0
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_100>
			pop
			tail
		done
	done
	end

proc proc_101 
	# <proc_101>(local.o)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	3
	set state.tint				# set state.tint 3
	local.a
	<proc_102>
	fork(1)					# <proc_102>(local.a)
	3
	wait					# wait 3
	2
	set state.tint				# set state.tint 2
	local.a
	<proc_102>
	fork(1)					# <proc_102>(local.a)
	1
	set state.tint				# set state.tint 1
	<proc_102>
	0.5
	local.a
	*					# local.a*0.5
	set local.a				# set local.a local.a*0.5
	set state.proc				# set state.proc <proc_102>
	tail
	end

proc proc_102 
	# <proc_102>(local.a)
	local.a
	0
	<proc_014>
	fork(2)					# <proc_014>(local.a, 0)
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	local.a
	0
	<proc_014>
	fork(2)					# <proc_014>(local.a, 0)
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	end

proc proc_103 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		0
		set state.size			# set state.size 0
		2
		set state.tint			# set state.tint 2
		plot
		64
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-64))
		20
		5
		local.a
		>>
		sine				# sin((local.a>>5))
		*				# sin((local.a>>5))*20
		0
		local.b
		<cmp>
		when(<)				# (local.b<0)
			local.b
			~
			0
			<proc_014>
			fork(2)			# <proc_014>((-local.b), 0)
			128
			state.face
			+
			set state.face		# set state.face (state.face+128)
			local.b
			~
			0
			<proc_014>
			fork(2)			# <proc_014>((-local.b), 0)
			128
			state.face
			+
			set state.face		# set state.face (state.face+128)
		else
			local.b
			0
			<proc_014>
			fork(2)			# <proc_014>(local.b, 0)
			128
			state.face
			+
			set state.face		# set state.face (state.face+128)
			local.b
			0
			<proc_014>
			fork(2)			# <proc_014>(local.b, 0)
			128
			state.face
			+
			set state.face		# set state.face (state.face+128)
		done
		64
		state.face
		+
		set state.face			# set state.face (state.face+64)
		2
		wait				# wait 2
		1
		move				# move 1
		<proc_103>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_103>
		pop
		tail
	done
	end

proc proc_104 
	# <proc_104>(1)
	# <proc_104>(0)
	32
	143
	set state.x				# set state.x 143
	set state.y				# set state.y 32
	8
	set state.size				# set state.size 8
	5
	set state.tint				# set state.tint 5
	plot
	1
	set state.tint				# set state.tint 1
	plot
	4
	set state.tint				# set state.tint 4
	7
	set state.size				# set state.size 7
	plot
	4
	set state.size				# set state.size 4
	7
	set state.tint				# set state.tint 7
	plot
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		10
		wait				# wait 10
	done
	20
	move					# move 20
	8
	set state.size				# set state.size 8
	5
	set state.tint				# set state.tint 5
	plot
	4
	set state.tint				# set state.tint 4
	7
	set state.size				# set state.size 7
	plot
	0
	set state.tint				# set state.tint 0
	plot
	<proc_080>
	fork(0)					# <proc_080>()
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		10
		wait				# wait 10
		10
		wait				# wait 10
		10
		wait				# wait 10
		20
		~
		move				# move (-20)
		8
		set state.size			# set state.size 8
		0
		set state.tint			# set state.tint 0
		plot
		20
		move				# move 20
		1
		set state.tint			# set state.tint 1
		plot
		10
		wait				# wait 10
		10
		wait				# wait 10
		2
		set state.tint			# set state.tint 2
		plot
		5
		wait				# wait 5
		1
		set state.tint			# set state.tint 1
		plot
	done
	end

proc proc_105 
	# <proc_105>(88)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		192
		set state.face			# set state.face 192
		21
		<proc_106>
		fork(1)				# <proc_106>(21)
		0
		set state.face			# set state.face 0
		2
		move				# move 2
		0.5
		wait				# wait 0.5
		<proc_105>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_105>
		tail
	done
	end

proc proc_106 
	# <proc_106>(21)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		2
		move				# move 2
		<proc_106>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_106>
		tail
	done
	end

proc proc_107 
	# <proc_107>()
	32
	10
	~
	set state.x				# set state.x (-10)
	set state.y				# set state.y 32
	1
	set state.tint				# set state.tint 1
	8
	set state.size				# set state.size 8
	9
	1
	16
	<proc_015>
	fork(3)					# <proc_015>(9, 1, 16)
	end

proc proc_108 
	# <proc_108>(5)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		128
		19
		20
		<proc_006>
		<proc_198>
		fork(4)				# <proc_198>(128, 19, 20, <proc_006>)
		5
		10
		*				# 10*5
		wait				# wait 10*5
		26
		move				# move 26
		<proc_108>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_108>
		tail
	done
	end

proc proc_109 
	# <proc_109>()
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	25
	3
	set state.x				# set state.x 3
	set state.y				# set state.y 25
	7
	set state.G				# set state.G 7
	927f:0104
	<proc_079>
	fork(1)					# <proc_079>(927f:0104)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	40bf:3f08
	<proc_079>
	fork(1)					# <proc_079>(40bf:3f08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	927f:0104
	<proc_079>
	fork(1)					# <proc_079>(927f:0104)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+9)
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	1871:0f46
	<proc_079>
	fork(1)					# <proc_079>(1871:0f46)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	98bc:3ba6
	<proc_079>
	fork(1)					# <proc_079>(98bc:3ba6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107e:3c08
	<proc_079>
	fork(1)					# <proc_079>(107e:3c08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	14bc:3c49
	<proc_079>
	fork(1)					# <proc_079>(14bc:3c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	083f:3082
	<proc_079>
	fork(1)					# <proc_079>(083f:3082)
	5
	set state.G				# set state.G 5
	17
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+17)
	927f:0104
	<proc_079>
	fork(1)					# <proc_079>(927f:0104)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	40bf:3f08
	<proc_079>
	fork(1)					# <proc_079>(40bf:3f08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	083f:3082
	<proc_079>
	fork(1)					# <proc_079>(083f:3082)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	8207:1fa2
	<proc_079>
	fork(1)					# <proc_079>(8207:1fa2)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+9)
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	1871:0f46
	<proc_079>
	fork(1)					# <proc_079>(1871:0f46)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0
	<proc_079>
	fork(1)					# <proc_079>(0)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	98bc:3ba6
	<proc_079>
	fork(1)					# <proc_079>(98bc:3ba6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0020:2002
	<proc_079>
	fork(1)					# <proc_079>(0020:2002)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	17
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+17)
	927f:0104
	<proc_079>
	fork(1)					# <proc_079>(927f:0104)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	40bf:3f08
	<proc_079>
	fork(1)					# <proc_079>(40bf:3f08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	881f:1f81
	<proc_079>
	fork(1)					# <proc_079>(881f:1f81)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	083f:3082
	<proc_079>
	fork(1)					# <proc_079>(083f:3082)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	9
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+9)
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	1871:0f46
	<proc_079>
	fork(1)					# <proc_079>(1871:0f46)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	820f:08f0
	<proc_079>
	fork(1)					# <proc_079>(820f:08f0)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a72:26a6
	<proc_079>
	fork(1)					# <proc_079>(9a72:26a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0
	<proc_079>
	fork(1)					# <proc_079>(0)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	17
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+17)
	927f:0104
	<proc_079>
	fork(1)					# <proc_079>(927f:0104)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	40bf:3f08
	<proc_079>
	fork(1)					# <proc_079>(40bf:3f08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0
	<proc_079>
	fork(1)					# <proc_079>(0)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107e:3c08
	<proc_079>
	fork(1)					# <proc_079>(107e:3c08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	881f:1f81
	<proc_079>
	fork(1)					# <proc_079>(881f:1f81)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	9
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+9)
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	1871:0f46
	<proc_079>
	fork(1)					# <proc_079>(1871:0f46)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0
	<proc_079>
	fork(1)					# <proc_079>(0)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	927f:0104
	<proc_079>
	fork(1)					# <proc_079>(927f:0104)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107e:3c08
	<proc_079>
	fork(1)					# <proc_079>(107e:3c08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	187f:3c8a
	<proc_079>
	fork(1)					# <proc_079>(187f:3c8a)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0
	<proc_079>
	fork(1)					# <proc_079>(0)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0020:2002
	<proc_079>
	fork(1)					# <proc_079>(0020:2002)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	17
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+17)
	927f:0104
	<proc_079>
	fork(1)					# <proc_079>(927f:0104)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	40bf:3f08
	<proc_079>
	fork(1)					# <proc_079>(40bf:3f08)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	040f:0f42
	<proc_079>
	fork(1)					# <proc_079>(040f:0f42)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107e:3c08
	<proc_079>
	fork(1)					# <proc_079>(107e:3c08)
	9
	state.y
	+
	3
	set state.x				# set state.x 3
	set state.y				# set state.y (state.y+9)
	9a6e:19a6
	<proc_079>
	fork(1)					# <proc_079>(9a6e:19a6)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	987f:14aa
	<proc_079>
	fork(1)					# <proc_079>(987f:14aa)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	1871:0f46
	<proc_079>
	fork(1)					# <proc_079>(1871:0f46)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	<proc_081>
	fork(0)					# <proc_081>()
	6
	move					# move 6
	state.C
	wait					# wait state.C
	8207:1fa2
	<proc_079>
	fork(1)					# <proc_079>(8207:1fa2)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	185e:1e86
	<proc_079>
	fork(1)					# <proc_079>(185e:1e86)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	081f:1f82
	<proc_079>
	fork(1)					# <proc_079>(081f:1f82)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	107f:2c49
	<proc_079>
	fork(1)					# <proc_079>(107f:2c49)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0
	<proc_079>
	fork(1)					# <proc_079>(0)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f860:2087
	<proc_079>
	fork(1)					# <proc_079>(f860:2087)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	189c:2186
	<proc_079>
	fork(1)					# <proc_079>(189c:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	823f:2350
	<proc_079>
	fork(1)					# <proc_079>(823f:2350)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	9a7f:2186
	<proc_079>
	fork(1)					# <proc_079>(9a7f:2186)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	f041:0107
	<proc_079>
	fork(1)					# <proc_079>(f041:0107)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	0020:2002
	<proc_079>
	fork(1)					# <proc_079>(0020:2002)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	end

proc proc_110 
	# <proc_110>()
	100
	100
	set state.x				# set state.x 100
	set state.y				# set state.y 100
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	5
	state.x
	+
	set state.x				# set state.x (state.x+5)
	3
	state.x
	+
	set state.x				# set state.x (state.x+3)
	3
	state.y
	-
	set state.y				# set state.y (state.y-3)
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	2
	set state.tint				# set state.tint 2
	state.x
	10
	wait					# wait 10
	10
	wait					# wait 10
	823f:3f20
	9a7f:2186
	8207:1fa2
	0
	40bf:3f08
	14bc:3c49
	107e:3c08
	1
	0
	0
	0
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(823f:3f20, 9a7f:2186, 8207:1fa2, 0, 40bf:3f08, 14bc:3c49, 107e:3c08, 1, 0, 0, 0, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	081f:1f82
	823f:3f20
	823f:3f20
	0020:2002
	1
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(081f:1f82, 823f:3f20, 823f:3f20, 0020:2002, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	f860:2087
	0
	927f:0104
	185e:1e86
	081f:1f82
	107e:3c08
	187f:3c8a
	0
	14bc:3c49
	107e:3c08
	185e:1e86
	f041:0107
	823f:3f20
	9a7f:2186
	107f:2c49
	<proc_111>
	fork(15)				# <proc_111>(f860:2087, 0, 927f:0104, 185e:1e86, 081f:1f82, 107e:3c08, 187f:3c8a, 0, 14bc:3c49, 107e:3c08, 185e:1e86, f041:0107, 823f:3f20, 9a7f:2186, 107f:2c49)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.y
	+
	local.a
	set state.x				# set state.x local.a
	set state.y				# set state.y (state.y+10)
	f860:2087
	107e:3c08
	f041:0107
	9a7f:2186
	107f:2c49
	9a7f:2186
	9a6e:19a6
	f041:0107
	f860:2087
	107e:3c08
	98bc:3ba6
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(f860:2087, 107e:3c08, f041:0107, 9a7f:2186, 107f:2c49, 9a7f:2186, 9a6e:19a6, f041:0107, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	9a6e:19a6
	f860:2087
	98bc:3ba6
	107e:3c08
	14bc:3c49
	083f:3082
	0020:2002
	0
	987f:14aa
	081f:1f82
	f041:0107
	0020:2002
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(9a6e:19a6, f860:2087, 98bc:3ba6, 107e:3c08, 14bc:3c49, 083f:3082, 0020:2002, 0, 987f:14aa, 081f:1f82, f041:0107, 0020:2002, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.y
	+
	local.a
	set state.x				# set state.x local.a
	set state.y				# set state.y (state.y+10)
	f860:2087
	f041:0107
	0
	f041:0107
	185e:1e86
	f041:0107
	14bc:3c49
	083f:3082
	083f:3082
	8207:1fa2
	0
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(f860:2087, f041:0107, 0, f041:0107, 185e:1e86, f041:0107, 14bc:3c49, 083f:3082, 083f:3082, 8207:1fa2, 0, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	189c:2186
	107f:2c49
	14bc:3c49
	9a6e:19a6
	823f:3f20
	9a7f:2186
	187f:3c8a
	0
	40bf:3f08
	8207:1fa2
	0
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(189c:2186, 107f:2c49, 14bc:3c49, 9a6e:19a6, 823f:3f20, 9a7f:2186, 187f:3c8a, 0, 40bf:3f08, 8207:1fa2, 0, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.y
	+
	local.a
	set state.x				# set state.x local.a
	set state.y				# set state.y (state.y+10)
	40bf:3f08
	14bc:3c49
	189c:2186
	823f:3f20
	f860:2087
	107e:3c08
	9a7f:2186
	0
	f860:2087
	0
	823f:3f20
	14bc:3c49
	040f:0f42
	9a7f:2186
	0
	<proc_111>
	fork(15)				# <proc_111>(40bf:3f08, 14bc:3c49, 189c:2186, 823f:3f20, f860:2087, 107e:3c08, 9a7f:2186, 0, f860:2087, 0, 823f:3f20, 14bc:3c49, 040f:0f42, 9a7f:2186, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	107e:3c08
	185e:1e86
	0
	f860:2087
	187f:3c8a
	9a7f:2186
	14bc:3c49
	0
	881f:1f81
	823f:3f20
	14bc:3c49
	f041:0107
	9a6e:19a6
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(107e:3c08, 185e:1e86, 0, f860:2087, 187f:3c8a, 9a7f:2186, 14bc:3c49, 0, 881f:1f81, 823f:3f20, 14bc:3c49, f041:0107, 9a6e:19a6, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.y
	+
	local.a
	set state.x				# set state.x local.a
	set state.y				# set state.y (state.y+10)
	98bc:3ba6
	185e:1e86
	f860:2087
	107e:3c08
	98bc:3ba6
	0
	185e:1e86
	107e:3c08
	0020:2002
	0
	0
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(98bc:3ba6, 185e:1e86, f860:2087, 107e:3c08, 98bc:3ba6, 0, 185e:1e86, 107e:3c08, 0020:2002, 0, 0, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	081f:1f82
	823f:3f20
	823f:3f20
	0020:2002
	0
	189c:2186
	14bc:3c49
	107e:3c08
	0
	8207:1fa2
	185e:1e86
	081f:1f82
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(081f:1f82, 823f:3f20, 823f:3f20, 0020:2002, 0, 189c:2186, 14bc:3c49, 107e:3c08, 0, 8207:1fa2, 185e:1e86, 081f:1f82, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	9a6e:19a6
	9a7f:2186
	9a7f:2186
	1
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(9a6e:19a6, 9a7f:2186, 9a7f:2186, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	state.y
	+
	local.a
	set state.x				# set state.x local.a
	set state.y				# set state.y (state.y+10)
	f860:2087
	927f:0104
	0
	8207:1fa2
	185e:1e86
	081f:1f82
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(f860:2087, 927f:0104, 0, 8207:1fa2, 185e:1e86, 081f:1f82, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	189c:2186
	14bc:3c49
	107e:3c08
	0
	927f:0104
	f860:2087
	107e:3c08
	187f:3c8a
	0
	f860:2087
	f041:0107
	0020:2002
	0
	0
	0
	<proc_111>
	fork(15)				# <proc_111>(189c:2186, 14bc:3c49, 107e:3c08, 0, 927f:0104, f860:2087, 107e:3c08, 187f:3c8a, 0, f860:2087, f041:0107, 0020:2002, 0, 0, 0)
	end

proc proc_111 
	# <proc_111>(823f:3f20, 9a7f:2186, 8207:1fa2, 0, 40bf:3f08, 14bc:3c49, 107e:3c08, 1, 0, 0, 0, 0, 0, 0, 0)
	# <proc_111>(081f:1f82, 823f:3f20, 823f:3f20, 0020:2002, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	# <proc_111>(f860:2087, 0, 927f:0104, 185e:1e86, 081f:1f82, 107e:3c08, 187f:3c8a, 0, 14bc:3c49, 107e:3c08, 185e:1e86, f041:0107, 823f:3f20, 9a7f:2186, 107f:2c49)
	# <proc_111>(f860:2087, 107e:3c08, f041:0107, 9a7f:2186, 107f:2c49, 9a7f:2186, 9a6e:19a6, f041:0107, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
	# <proc_111>(9a6e:19a6, f860:2087, 98bc:3ba6, 107e:3c08, 14bc:3c49, 083f:3082, 0020:2002, 0, 987f:14aa, 081f:1f82, f041:0107, 0020:2002, 0, 0, 0)
	# <proc_111>(f860:2087, f041:0107, 0, f041:0107, 185e:1e86, f041:0107, 14bc:3c49, 083f:3082, 083f:3082, 8207:1fa2, 0, 0, 0, 0, 0)
	# <proc_111>(189c:2186, 107f:2c49, 14bc:3c49, 9a6e:19a6, 823f:3f20, 9a7f:2186, 187f:3c8a, 0, 40bf:3f08, 8207:1fa2, 0, 0, 0, 0, 0)
	# <proc_111>(40bf:3f08, 14bc:3c49, 189c:2186, 823f:3f20, f860:2087, 107e:3c08, 9a7f:2186, 0, f860:2087, 0, 823f:3f20, 14bc:3c49, 040f:0f42, 9a7f:2186, 0)
	# <proc_111>(107e:3c08, 185e:1e86, 0, f860:2087, 187f:3c8a, 9a7f:2186, 14bc:3c49, 0, 881f:1f81, 823f:3f20, 14bc:3c49, f041:0107, 9a6e:19a6, 0, 0)
	# <proc_111>(98bc:3ba6, 185e:1e86, f860:2087, 107e:3c08, 98bc:3ba6, 0, 185e:1e86, 107e:3c08, 0020:2002, 0, 0, 0, 0, 0, 0)
	1
	local.a
	<cmp>
	when(!=)				# (local.a!=1)
		local.a
		<proc_207>
		fork(1)				# <proc_207>(local.a)
		6
		move				# move 6
		2
		wait				# wait 2
		<proc_111>
		local.b
		local.c
		local.d
		local.e
		local.f
		local.g
		local.h
		local.i
		local.j
		local.k
		local.l
		local.m
		local.n
		local.o
		1
		set local.o			# set local.o 1
		set local.n			# set local.n local.o
		set local.m			# set local.m local.n
		set local.l			# set local.l local.m
		set local.k			# set local.k local.l
		set local.j			# set local.j local.k
		set local.i			# set local.i local.j
		set local.h			# set local.h local.i
		set local.g			# set local.g local.h
		set local.f			# set local.f local.g
		set local.e			# set local.e local.f
		set local.d			# set local.d local.e
		set local.c			# set local.c local.d
		set local.b			# set local.b local.c
		set local.a			# set local.a local.b
		set state.proc			# set state.proc <proc_111>
		tail
	done
	end

proc proc_112 
	# <proc_112>()
	5
	set state.D				# set state.D 5
	7
	set state.B				# set state.B 7
	72
	set state.A				# set state.A 72
	160
	set state.H				# set state.H 160
	80
	set state.G				# set state.G 80
	60
	set state.C				# set state.C 60
	<proc_124>
	fork(0)					# <proc_124>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	1
	<proc_119>
	fork(1)					# <proc_119>(1)
	<proc_133>
	fork(0)					# <proc_133>()
	0
	<proc_116>
	fork(1)					# <proc_116>(0)
	5
	8
	*					# 8*5
	wait					# wait 8*5
	3
	set state.tint				# set state.tint 3
	0
	0.25
	<proc_121>
	fork(2)					# <proc_121>(0, 0.25)
	0
	<proc_118>
	fork(1)					# <proc_118>(0)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	9
	*					# 9*5
	wait					# wait 9*5
	4
	<proc_113>
	fork(1)					# <proc_113>(4)
	20
	wait					# wait 20
	20
	wait					# wait 20
	4
	<proc_114>
	fork(1)					# <proc_114>(4)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	0
	0.25
	0000:00d1
	0000:005b
	~
	0000:0075
	0000:012d
	0000:00c4
	0000:00c4
	0
	0
	0
	0
	<proc_117>
	fork(13)				# <proc_117>(16*5, 0, 0.25, 0000:00d1, (-0000:005b), 0000:0075, 0000:012d, 0000:00c4, 0000:00c4, 0, 0, 0, 0)
	end

proc proc_113 
	# <proc_113>(4)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		<proc_135>
		fork(0)				# <proc_135>()
		2
		<proc_116>
		fork(1)				# <proc_116>(2)
		5
		16
		*				# 16*5
		wait				# wait 16*5
		5
		16
		*				# 16*5
		wait				# wait 16*5
		1
		local.a
		<cmp>
		when(!=)			# (local.a!=1)
			1
			<proc_116>
			fork(1)			# <proc_116>(1)
		else
			3
			<proc_116>
			fork(1)			# <proc_116>(3)
		done
		5
		16
		*				# 16*5
		wait				# wait 16*5
		5
		16
		*				# 16*5
		wait				# wait 16*5
		<proc_113>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_113>
		tail
	done
	end

proc proc_114 
	# <proc_114>(4)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		1
		local.a
		<cmp>
		when(==)			# (local.a==1)
			1
			set state.D		# set state.D 1
		done
		4
		1
		local.a
		-
		/				# (local.a-1)/4
		<proc_134>
		fork(1)				# <proc_134>((local.a-1)/4)
		5
		16
		*				# 16*5
		wait				# wait 16*5
		5
		16
		*				# 16*5
		wait				# wait 16*5
		5
		16
		*				# 16*5
		wait				# wait 16*5
		5
		16
		*				# 16*5
		wait				# wait 16*5
		<proc_114>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_114>
		tail
	done
	end

proc proc_115 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		4
		set state.size			# set state.size 4
		0
		set state.tint			# set state.tint 0
		plot
		9
		move				# move 9
		<proc_115>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_115>
		tail
	done
	end

proc proc_116 
	# <proc_116>(0)
	# <proc_116>(2)
	# <proc_116>(1)
	# <proc_116>(3)
	60
	state.A
	+
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y (state.A+60)
	1
	state.y
	+
	set state.y				# set state.y (state.y+1)
	7
	<proc_115>
	fork(1)					# <proc_115>(7)
	1
	state.y
	-
	set state.y				# set state.y (state.y-1)
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	1
	set state.tint				# set state.tint 1
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		f860:2087
		107e:3c08
		f860:2087
		f041:0107
		0
		0
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(f860:2087, 107e:3c08, f860:2087, f041:0107, 0, 0, 0, 0, 0, 0, 0)
	done
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		f041:0107
		081f:1f82
		107e:3c08
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(f041:0107, 081f:1f82, 107e:3c08, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0, 0)
	done
	2
	local.a
	<cmp>
	when(==)				# (local.a==2)
		9a6e:19a6
		189c:2186
		14bc:3c49
		107e:3c08
		107e:3c08
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, 189c:2186, 14bc:3c49, 107e:3c08, 107e:3c08, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0)
	done
	3
	local.a
	<cmp>
	when(==)				# (local.a==3)
		9a6e:19a6
		f860:2087
		98bc:3ba6
		107e:3c08
		14bc:3c49
		083f:3082
		0
		083f:3082
		185e:1e86
		189c:2186
		823f:2350
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, f860:2087, 98bc:3ba6, 107e:3c08, 14bc:3c49, 083f:3082, 0, 083f:3082, 185e:1e86, 189c:2186, 823f:2350)
	done
	end

proc proc_117 
	# <proc_117>(16*5, 0, 0.25, 0000:00d1, (-0000:005b), 0000:0075, 0000:012d, 0000:00c4, 0000:00c4, 0, 0, 0, 0)
	0
	local.e
	local.d
	+
	<cmp>
	when(!=)				# ((local.d+local.e)!=0)
		0
		local.a
		<cmp>
		when(>)				# (local.a>0)
			3
			local.a
			&
			when(!=)		# (local.a&3) !=
			else
				local.b
				local.c
				<proc_121>
				fork(2)		# <proc_121>(local.b, local.c)
			done
			18
			local.b
			local.c
			<proc_161>
			fork(3)			# <proc_161>(18, local.b, local.c)
			1
			wait			# wait 1
			<proc_117>
			1
			local.a
			-
			0000:ffff
			local.d
			local.b
			+
			&
			0000:ffff
			local.e
			local.c
			+
			&
			set local.c		# set local.c ((local.c+local.e)&0000:ffff)
			set local.b		# set local.b ((local.b+local.d)&0000:ffff)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_117>
			tail
		else
			local.b
			local.c
			<proc_121>
			fork(2)			# <proc_121>(local.b, local.c)
			5
			16
			*			# 16*5
			wait			# wait 16*5
			5
			16
			*			# 16*5
			wait			# wait 16*5
			5
			16
			*			# 16*5
			wait			# wait 16*5
			<proc_117>
			5
			16
			*			# 16*5
			0000:ffff
			local.f
			local.b
			+
			&
			0000:ffff
			local.g
			local.c
			+
			&
			local.f
			local.g
			local.h
			local.i
			local.j
			local.k
			local.l
			local.m
			0
			0
			set local.m		# set local.m 0
			set local.l		# set local.l 0
			set local.k		# set local.k local.m
			set local.j		# set local.j local.l
			set local.i		# set local.i local.k
			set local.h		# set local.h local.j
			set local.g		# set local.g local.i
			set local.f		# set local.f local.h
			set local.e		# set local.e local.g
			set local.d		# set local.d local.f
			set local.c		# set local.c ((local.c+local.g)&0000:ffff)
			set local.b		# set local.b ((local.b+local.f)&0000:ffff)
			set local.a		# set local.a 16*5
			set state.proc		# set state.proc <proc_117>
			tail
		done
	done
	end

proc proc_118 
	# <proc_118>(0)
	18
	local.a
	<cmp>
	when(<=)				# (local.a<=18)
		local.a
		0
		0.25
		<proc_161>
		fork(3)				# <proc_161>(local.a, 0, 0.25)
		1
		wait				# wait 1
		<proc_118>
		0.25
		local.a
		+
		set local.a			# set local.a (local.a+0.25)
		set state.proc			# set state.proc <proc_118>
		tail
	done
	end

proc proc_119 
	# <proc_119>(1)
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	state.A
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y state.A
	7
	set state.tint				# set state.tint 7
	1
	set state.F				# set state.F 1
	8523:2350
	<proc_123>
	fork(1)					# <proc_123>(8523:2350)
	<proc_122>
	fork(0)					# <proc_122>()
	11
	state.y
	+
	set state.y				# set state.y (state.y+11)
	8207:1fa2
	<proc_123>
	fork(1)					# <proc_123>(8207:1fa2)
	<proc_122>
	fork(0)					# <proc_122>()
	<proc_120>
	fork(0)					# <proc_120>()
	10
	state.A
	-
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y (state.A-10)
	927f:0104
	107f:2c49
	9a7f:2186
	989c:2f46
	081f:1f82
	9a7f:2186
	107e:3c08
	189c:2186
	8207:1fa2
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(927f:0104, 107f:2c49, 9a7f:2186, 989c:2f46, 081f:1f82, 9a7f:2186, 107e:3c08, 189c:2186, 8207:1fa2, 0, 0)
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		50
		state.A
		+
		state.B
		set state.x			# set state.x state.B
		set state.y			# set state.y (state.A+50)
		9a6e:19a6
		f041:0107
		14bc:3c49
		f041:0107
		081f:1f82
		9a6e:19a6
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, f041:0107, 14bc:3c49, f041:0107, 081f:1f82, 9a6e:19a6, 0, 0, 0, 0, 0)
	done
	end

proc proc_120 
	# <proc_120>()
	2
	state.A
	+
	10
	state.B
	+
	set state.x				# set state.x (state.B+10)
	set state.y				# set state.y (state.A+2)
	0
	set state.tint				# set state.tint 0
	4
	set state.size				# set state.size 4
	plot
	9
	move					# move 9
	plot
	9
	move					# move 9
	plot
	9
	move					# move 9
	plot
	12
	state.y
	+
	25
	set state.x				# set state.x 25
	set state.y				# set state.y (state.y+12)
	4
	set state.size				# set state.size 4
	plot
	9
	move					# move 9
	plot
	9
	move					# move 9
	plot
	9
	move					# move 9
	plot
	end

proc proc_121 
	# <proc_121>(0, 0.25)
	# <proc_121>(local.b, local.c)
	<proc_120>
	fork(0)					# <proc_120>()
	1
	state.A
	-
	37
	local.a
	*					# local.a*37
	11
	state.B
	+
	+
	set state.x				# set state.x ((state.B+11)+local.a*37)
	set state.y				# set state.y (state.A-1)
	64
	set state.face				# set state.face 64
	0
	set state.size				# set state.size 0
	2
	set state.tint				# set state.tint 2
	8
	0
	<proc_014>
	fork(2)					# <proc_014>(8, 0)
	11
	state.y
	+
	37
	local.b
	*					# local.b*37
	11
	state.B
	+
	+
	set state.x				# set state.x ((state.B+11)+local.b*37)
	set state.y				# set state.y (state.y+11)
	<proc_014>
	8
	0
	set local.b				# set local.b 0
	set local.a				# set local.a 8
	set state.proc				# set state.proc <proc_014>
	tail
	end

proc proc_122 
	# <proc_122>()
	7
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+7)
	5
	set state.tint				# set state.tint 5
	37
	10
	10
	<proc_007>
	<proc_198>
	fork(4)					# <proc_198>(37, 10, 10, <proc_007>)
	end

proc proc_123 
	# <proc_123>(8523:2350)
	# <proc_123>(8207:1fa2)
	local.a
	<proc_006>
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.a, <proc_006>, 1, 1)
	end

proc proc_124 
	# <proc_124>()
	state.G
	state.H
	set state.x				# set state.x state.H
	set state.y				# set state.y state.G
	3
	set state.face				# set state.face 3
	5
	set state.tint				# set state.tint 5
	2
	set state.size				# set state.size 2
	state.C
	set state.size				# set state.size state.C
	5
	set state.tint				# set state.tint 5
	draw
	1
	state.C
	-
	set state.size				# set state.size (state.C-1)
	4
	set state.tint				# set state.tint 4
	draw
	1
	wait					# wait 1
	0
	set state.size				# set state.size 0
	6
	set state.tint				# set state.tint 6
	0
	set state.face				# set state.face 0
	32
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-32))
	10
	~
	128
	50
	1
	1
	<proc_130>
	fork(5)					# <proc_130>((-10), 128, 50, 1, 1)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	10
	~
	128
	50
	1
	~
	1
	<proc_130>
	fork(5)					# <proc_130>((-10), 128, 50, (-1), 1)
	16
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-16))
	10
	50
	10
	1
	1
	~
	<proc_130>
	fork(5)					# <proc_130>(10, 50, 10, 1, (-1))
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	10
	50
	10
	1
	~
	1
	~
	<proc_130>
	fork(5)					# <proc_130>(10, 50, 10, (-1), (-1))
	0
	set state.face				# set state.face 0
	7
	set state.tint				# set state.tint 7
	<proc_125>
	fork(0)					# <proc_125>()
	5
	set state.tint				# set state.tint 5
	15
	~
	50
	0
	1
	1
	<proc_130>
	fork(5)					# <proc_130>((-15), 50, 0, 1, 1)
	5
	~
	50
	0
	1
	~
	1
	<proc_130>
	fork(5)					# <proc_130>((-5), 50, 0, (-1), 1)
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	5
	~
	50
	0
	1
	1
	<proc_130>
	fork(5)					# <proc_130>((-5), 50, 0, 1, 1)
	15
	~
	50
	0
	1
	~
	1
	<proc_130>
	fork(5)					# <proc_130>((-15), 50, 0, (-1), 1)
	0
	set state.size				# set state.size 0
	0
	set state.face				# set state.face 0
	32
	state.face
	+
	set state.face				# set state.face (state.face+32)
	0
	state.face
	+
	set state.face				# set state.face (state.face+0)
	20
	<proc_129>
	fork(1)					# <proc_129>(20)
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	20
	<proc_129>
	fork(1)					# <proc_129>(20)
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	8
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-8))
	16
	<proc_129>
	fork(1)					# <proc_129>(16)
	<proc_127>
	fork(0)					# <proc_127>()
	0
	set state.face				# set state.face 0
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	10
	state.C
	+
	<proc_126>
	fork(1)					# <proc_126>((state.C+10))
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	10
	state.C
	+
	<proc_126>
	fork(1)					# <proc_126>((state.C+10))
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	10
	state.C
	+
	<proc_126>
	fork(1)					# <proc_126>((state.C+10))
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	16
	state.face
	+
	set state.face				# set state.face (state.face+16)
	8
	state.face
	+
	set state.face				# set state.face (state.face+8)
	13
	~
	0
	35
	1
	1
	<proc_130>
	fork(5)					# <proc_130>((-13), 0, 35, 1, 1)
	10
	state.C
	+
	<proc_126>
	fork(1)					# <proc_126>((state.C+10))
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	8
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-8))
	8
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-8))
	13
	~
	0
	35
	1
	1
	<proc_130>
	fork(5)					# <proc_130>((-13), 0, 35, 1, 1)
	10
	state.C
	+
	<proc_126>
	fork(1)					# <proc_126>((state.C+10))
	10
	95
	0
	1
	~
	1
	<proc_130>
	fork(5)					# <proc_130>(10, 95, 0, (-1), 1)
	end

proc proc_125 
	# <proc_125>()
	8
	wait					# wait 8
	<proc_128>
	fork(0)					# <proc_128>()
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	<proc_128>
	set state.proc				# set state.proc <proc_128>
	tail
	end

proc proc_126 
	# <proc_126>((state.C+10))
	local.a
	move					# move local.a
	3
	set state.size				# set state.size 3
	5
	set state.tint				# set state.tint 5
	draw
	2
	set state.size				# set state.size 2
	4
	set state.tint				# set state.tint 4
	draw
	end

proc proc_127 
	# <proc_127>()
	10
	state.C
	-
	move					# move (state.C-10)
	2
	move					# move 2
	0
	set state.face				# set state.face 0
	1
	set state.size				# set state.size 1
	5
	set state.tint				# set state.tint 5
	8
	1
	8
	~
	<proc_015>
	fork(3)					# <proc_015>(8, 1, (-8))
	4
	wait					# wait 4
	6
	set state.tint				# set state.tint 6
	8
	~
	move					# move (-8)
	8
	~
	move					# move (-8)
	4
	1
	8
	~
	<proc_015>
	fork(3)					# <proc_015>(4, 1, (-8))
	4
	wait					# wait 4
	7
	set state.tint				# set state.tint 7
	8
	~
	move					# move (-8)
	2
	1
	8
	~
	<proc_015>
	fork(3)					# <proc_015>(2, 1, (-8))
	end

proc proc_128 
	# <proc_128>()
	20
	state.C
	-
	move					# move (state.C-20)
	40
	0.5
	<proc_014>
	fork(2)					# <proc_014>(40, 0.5)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	30
	0.5
	<proc_014>
	fork(2)					# <proc_014>(30, 0.5)
	20
	state.y
	+
	set state.y				# set state.y (state.y+20)
	30
	0.5
	<proc_014>
	fork(2)					# <proc_014>(30, 0.5)
	end

proc proc_129 
	# <proc_129>(20)
	# <proc_129>(16)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		3
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-3))
		4
		state.C
		+
		<proc_030>
		fork(1)				# <proc_030>((state.C+4))
		1
		wait				# wait 1
		<proc_129>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_129>
		tail
	done
	end

proc proc_130 
	# <proc_130>((-10), 128, 50, 1, 1)
	# <proc_130>((-10), 128, 50, (-1), 1)
	# <proc_130>(10, 50, 10, 1, (-1))
	# <proc_130>(10, 50, 10, (-1), (-1))
	# <proc_130>((-15), 50, 0, 1, 1)
	# <proc_130>((-5), 50, 0, (-1), 1)
	# <proc_130>((-5), 50, 0, 1, 1)
	# <proc_130>((-15), 50, 0, (-1), 1)
	# <proc_130>((-13), 0, 35, 1, 1)
	# <proc_130>(10, 95, 0, (-1), 1)
	local.b
	local.a
	local.d
	<proc_131>
	fork(3)					# <proc_131>(local.b, local.a, local.d)
	local.a
	state.C
	+
	move					# move (state.C+local.a)
	<proc_015>
	local.c
	0.25
	local.e
	0.5
	*					# 0.5*local.e
	set local.c				# set local.c 0.5*local.e
	set local.b				# set local.b 0.25
	set local.a				# set local.a local.c
	set state.proc				# set state.proc <proc_015>
	pop
	pop
	tail
	end

proc proc_131 
	# <proc_131>(local.b, local.a, local.d)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		local.b
		state.C
		+
		<proc_030>
		fork(1)				# <proc_030>((state.C+local.b))
		local.c
		0.5
		*				# 0.5*local.c
		state.face
		+
		set state.face			# set state.face (state.face+0.5*local.c)
		0.25
		wait				# wait 0.25
		<proc_131>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_131>
		tail
	done
	end

proc proc_132 
	5
	10
	state.C
	+
	-
	move					# move ((state.C+10)-5)
	10
	0.25
	0.5
	<proc_015>
	fork(3)					# <proc_015>(10, 0.25, 0.5)
	end

proc proc_133 
	# <proc_133>()
	140
	10
	+
	260
	set state.x				# set state.x 260
	set state.y				# set state.y (10+140)
	2
	set state.tint				# set state.tint 2
	0
	set state.size				# set state.size 0
	plot
	50
	140
	20
	<proc_006>
	<proc_198>
	fork(4)					# <proc_198>(50, 140, 20, <proc_006>)
	10
	260
	set state.x				# set state.x 260
	set state.y				# set state.y 10
	6
	state.y
	-
	6
	state.x
	+
	set state.x				# set state.x (state.x+6)
	set state.y				# set state.y (state.y-6)
	0
	set state.face				# set state.face 0
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	9a6e:19a6
	f860:2087
	98bc:3ba6
	107e:3c08
	14bc:3c49
	083f:3082
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(9a6e:19a6, f860:2087, 98bc:3ba6, 107e:3c08, 14bc:3c49, 083f:3082, 0, 0, 0, 0, 0)
	end

proc proc_134 
	# <proc_134>((local.a-1)/4)
	10
	260
	set state.x				# set state.x 260
	set state.y				# set state.y 10
	1
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+1)
	3
	set state.tint				# set state.tint 3
	0
	set state.size				# set state.size 0
	3
	local.a
	*					# local.a*3
	seed					# local.a*3
	138
	local.a
	<proc_137>
	fork(2)					# <proc_137>(138, local.a)
	end

proc proc_135 
	# <proc_135>()
	10
	260
	set state.x				# set state.x 260
	set state.y				# set state.y 10
	5
	state.y
	+
	4
	state.x
	+
	set state.x				# set state.x (state.x+4)
	set state.y				# set state.y (state.y+5)
	0
	set state.face				# set state.face 0
	3
	set state.size				# set state.size 3
	3
	set state.tint				# set state.tint 3
	27
	<proc_136>
	fork(1)					# <proc_136>(27)
	3
	wait					# wait 3
	2
	set state.tint				# set state.tint 2
	27
	<proc_136>
	fork(1)					# <proc_136>(27)
	3
	wait					# wait 3
	1
	set state.tint				# set state.tint 1
	27
	<proc_136>
	fork(1)					# <proc_136>(27)
	3
	wait					# wait 3
	0
	set state.tint				# set state.tint 0
	27
	<proc_136>
	fork(1)					# <proc_136>(27)
	4
	set state.tint				# set state.tint 4
	27
	<proc_136>
	fork(1)					# <proc_136>(27)
	end

proc proc_136 
	# <proc_136>(27)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		7
		0
		7
		<proc_015>
		fork(3)				# <proc_015>(7, 0, 7)
		0.5
		wait				# wait 0.5
		5
		state.y
		+
		set state.y			# set state.y (state.y+5)
		<proc_136>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_136>
		tail
	else
		4
		state.y
		-
		set state.y			# set state.y (state.y-4)
		7
		0
		7
		<proc_015>
		fork(3)				# <proc_015>(7, 0, 7)
		0.5
		wait				# wait 0.5
	done
	end

proc proc_137 
	# <proc_137>(138, local.a)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		local.b
		1
		-
		1
		state.y
		+
		260
		set state.x			# set state.x 260
		set state.y			# set state.y (state.y+1)
		25
		state.x
		+
		set state.x			# set state.x (state.x+25)
		6
		local.a
		>>
		sine				# sin((local.a>>6))
		local.c
		25
		local.d
		*				# local.d*25
		*				# local.d*25*local.c
		local.b
		50
		rand
		*				# rand*50
		25
		-
		*				# (25-rand*50)*local.b
		+
		plot
		0
		local.e
		<cmp>
		when(<)				# (local.e<0)
			128
			set state.face		# set state.face 128
			25
			~
			local.e
			<cmp>
			when(<)			# (local.e<(-25))
				25
				~
				<proc_138>
				fork(1)		# <proc_138>((-25))
			else
				local.e
				~
				<proc_138>
				fork(1)		# <proc_138>((-local.e))
			done
		done
		0
		local.e
		<cmp>
		when(>)				# (local.e>0)
			0
			set state.face		# set state.face 0
			25
			local.e
			<cmp>
			when(>=)		# (local.e>=25)
				25
				<proc_138>
				fork(1)		# <proc_138>(25)
			else
				local.e
				<proc_138>
				fork(1)		# <proc_138>(local.e)
			done
		done
		0.75
		wait				# wait 0.75
		<proc_137>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_137>
		pop
		pop
		pop
		tail
	done
	end

proc proc_138 
	# <proc_138>((-25))
	# <proc_138>((-local.e))
	# <proc_138>(25)
	# <proc_138>(local.e)
	3
	set state.tint				# set state.tint 3
	1.5
	wait					# wait 1.5
	local.a
	0.25
	<proc_014>
	fork(2)					# <proc_014>(local.a, 0.25)
	2
	set state.tint				# set state.tint 2
	1.5
	wait					# wait 1.5
	0000:a8f5
	local.a
	*					# local.a*0000:a8f5
	0.25
	<proc_014>
	fork(2)					# <proc_014>(local.a*0000:a8f5, 0.25)
	state.D
	set state.tint				# set state.tint state.D
	1.5
	wait					# wait 1.5
	0000:547a
	local.a
	*					# local.a*0000:547a
	0.25
	<proc_014>
	fork(2)					# <proc_014>(local.a*0000:547a, 0.25)
	end

proc proc_139 
	100
	100
	set state.x				# set state.x 100
	set state.y				# set state.y 100
	0
	set state.size				# set state.size 0
	2
	set state.tint				# set state.tint 2
	0
	set state.face				# set state.face 0
	0
	seed					# 0
	0
	0
	50
	40
	rand
	*					# rand*40
	0
	<proc_140>
	fork(5)					# <proc_140>(0, 0, 50, rand*40, 0)
	end

proc proc_140 
	# <proc_140>(0, 0, 50, rand*40, 0)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		0
		set state.size			# set state.size 0
		3
		local.c
		/				# local.c/3
		local.b
		/				# local.b/local.c/3
		1
		+
		set state.tint			# set state.tint (1+local.b/local.c/3)
		0
		set state.face			# set state.face 0
		0
		1
		local.e
		&
		<cmp>
		when(==)			# ((local.e&1)==0)
			100
			0
			100
			local.d
			local.a
			+
			local.d
			0000:1999
			<proc_141>
			fork(6)			# <proc_141>(100, 0, 100, (local.a+local.d), local.d, 0000:1999)
		else
			100
			0
			100
			local.d
			local.a
			+
			local.d
			0000:1999
			~
			<proc_141>
			fork(6)			# <proc_141>(100, 0, 100, (local.a+local.d), local.d, (-0000:1999))
		done
		1
		wait				# wait 1
		local.c
		local.b
		<cmp>
		when(<)				# (local.b<local.c)
			<proc_140>
			1
			local.a
			-
			1
			local.b
			+
			set local.b		# set local.b (local.b+1)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_140>
			tail
		else
			120
			wait			# wait 120
			33
			set state.size		# set state.size 33
			0
			set state.tint		# set state.tint 0
			17
			~
			move			# move (-17)
			plot
			0
			move			# move 0
			plot
			0
			move			# move 0
			plot
			117
			~
			move			# move (-117)
			<proc_140>
			1
			local.a
			-
			0
			30
			rand
			*			# rand*30
			1
			local.e
			+
			set local.e		# set local.e (local.e+1)
			set local.d		# set local.d rand*30
			set local.b		# set local.b 0
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_140>
			tail
		done
	done
	end

proc proc_141 
	# <proc_141>(100, 0, 100, (local.a+local.d), local.d, 0000:1999)
	# <proc_141>(100, 0, 100, (local.a+local.d), local.d, (-0000:1999))
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		5
		8
		local.d
		>>
		sine				# sin((local.d>>8))
		<<
		local.c
		+
		local.b
		set state.x			# set state.x local.b
		set state.y			# set state.y (local.c+(sin((local.d>>8))<<5))
		plot
		1
		wait				# wait 1
		<proc_141>
		1
		local.a
		-
		2
		local.b
		+
		local.e
		local.d
		+
		local.f
		local.e
		-
		set local.e			# set local.e (local.e-local.f)
		set local.d			# set local.d (local.d+local.e)
		set local.b			# set local.b (local.b+2)
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_141>
		tail
	done
	end

proc proc_142 
	# <proc_142>()
	6
	set state.A				# set state.A 6
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	7
	set state.G				# set state.G 7
	10
	set state.C				# set state.C 10
	70
	set state.B				# set state.B 70
	<proc_157>
	fork(0)					# <proc_157>()
	<proc_145>
	fork(0)					# <proc_145>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	10
	set state.C				# set state.C 10
	140
	set state.B				# set state.B 140
	<proc_157>
	fork(0)					# <proc_157>()
	<proc_146>
	fork(0)					# <proc_146>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	245
	set state.H				# set state.H 245
	52
	set state.G				# set state.G 52
	<proc_156>
	fork(0)					# <proc_156>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_152>
	fork(0)					# <proc_152>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_147>
	fork(0)					# <proc_147>()
	0
	<proc_150>
	fork(1)					# <proc_150>(0)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	1
	<proc_150>
	fork(1)					# <proc_150>(1)
	10
	set state.C				# set state.C 10
	70
	set state.B				# set state.B 70
	<proc_153>
	fork(0)					# <proc_153>()
	1
	set state.A				# set state.A 1
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	8
	*					# 8*5
	wait					# wait 8*5
	0
	<proc_143>
	fork(1)					# <proc_143>(0)
	2
	<proc_150>
	fork(1)					# <proc_150>(2)
	5
	8
	*					# 8*5
	wait					# wait 8*5
	0
	<proc_144>
	fork(1)					# <proc_144>(0)
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	3
	<proc_150>
	fork(1)					# <proc_150>(3)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	<proc_044>
	set state.proc				# set state.proc <proc_044>
	tail
	end

proc proc_143 
	# <proc_143>(0)
	3
	local.a
	<cmp>
	when(<)					# (local.a<3)
		10
		set state.C			# set state.C 10
		140
		set state.B			# set state.B 140
		local.a
		<proc_148>
		fork(1)				# <proc_148>(local.a)
		5
		64
		*				# 64*5
		wait				# wait 64*5
		<proc_143>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_143>
		tail
	done
	end

proc proc_144 
	# <proc_144>(0)
	3
	local.a
	<cmp>
	when(<)					# (local.a<3)
		10
		set state.C			# set state.C 10
		140
		set state.B			# set state.B 140
		2
		local.a
		<cmp>
		when(==)			# (local.a==2)
			6
			set state.A		# set state.A 6
			40
			<proc_154>
			fork(1)			# <proc_154>(40)
		else
			rand
			<proc_154>
			fork(1)			# <proc_154>(rand)
		done
		5
		64
		*				# 64*5
		wait				# wait 64*5
		<proc_144>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_144>
		tail
	done
	end

proc proc_145 
	# <proc_145>()
	state.B
	state.C
	set state.x				# set state.x state.C
	set state.y				# set state.y state.B
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	5
	state.y
	-
	set state.y				# set state.y (state.y-5)
	7
	set state.tint				# set state.tint 7
	823f:2350
	9a7f:2186
	8207:1fa2
	0
	147f:1c49
	107f:2c49
	185e:1e86
	927f:0104
	f860:2087
	083f:3082
	9a7f:2186
	<proc_208>
	fork(11)				# <proc_208>(823f:2350, 9a7f:2186, 8207:1fa2, 0, 147f:1c49, 107f:2c49, 185e:1e86, 927f:0104, f860:2087, 083f:3082, 9a7f:2186)
	end

proc proc_146 
	# <proc_146>()
	state.B
	state.C
	set state.x				# set state.x state.C
	set state.y				# set state.y state.B
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	5
	state.y
	-
	set state.y				# set state.y (state.y-5)
	7
	set state.tint				# set state.tint 7
	823f:2350
	9a7f:2186
	8207:1fa2
	0
	107f:2c49
	9a7f:2186
	9a6e:19a6
	081f:1f82
	083f:3082
	f041:0107
	0
	<proc_208>
	fork(11)				# <proc_208>(823f:2350, 9a7f:2186, 8207:1fa2, 0, 107f:2c49, 9a7f:2186, 9a6e:19a6, 081f:1f82, 083f:3082, f041:0107, 0)
	end

proc proc_147 
	# <proc_147>()
	120
	220
	set state.x				# set state.x 220
	set state.y				# set state.y 120
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	7
	set state.tint				# set state.tint 7
	9a6e:19a6
	f041:0107
	14bc:3c49
	f041:0107
	081f:1f82
	9a6e:19a6
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(9a6e:19a6, f041:0107, 14bc:3c49, f041:0107, 081f:1f82, 9a6e:19a6, 0, 0, 0, 0, 0)
	end

proc proc_148 
	# <proc_148>(local.a)
	95
	140
	set state.x				# set state.x 140
	set state.y				# set state.y 95
	6
	set state.tint				# set state.tint 6
	<proc_149>
	fork(0)					# <proc_149>()
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		987f:14aa
		f880:0083
		14bc:3c49
		189c:2186
		823f:2350
		083f:3082
		185e:1e86
		1841:0725
		081f:1f82
		9a6f:11a6
		0
		<proc_208>
		fork(11)			# <proc_208>(987f:14aa, f880:0083, 14bc:3c49, 189c:2186, 823f:2350, 083f:3082, 185e:1e86, 1841:0725, 081f:1f82, 9a6f:11a6, 0)
		10
		state.x
		-
		set state.x			# set state.x (state.x-10)
		10
		state.x
		-
		set state.x			# set state.x (state.x-10)
		10
		state.x
		-
		set state.x			# set state.x (state.x-10)
		823f:2350
		9a7f:2186
		8207:1fa2
		0
		0
		0
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(823f:2350, 9a7f:2186, 8207:1fa2, 0, 0, 0, 0, 0, 0, 0, 0)
	done
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		927f:0104
		185e:1e86
		189c:2186
		081f:1f82
		9a6f:11a6
		187f:3c8a
		9c61:2396
		f880:0083
		98bc:3ba6
		107e:3c08
		0
		<proc_208>
		fork(11)			# <proc_208>(927f:0104, 185e:1e86, 189c:2186, 081f:1f82, 9a6f:11a6, 187f:3c8a, 9c61:2396, f880:0083, 98bc:3ba6, 107e:3c08, 0)
	done
	2
	local.a
	<cmp>
	when(==)				# (local.a==2)
		083f:3082
		185e:1e86
		185e:1e86
		107e:3c08
		f880:0083
		9861:1bb6
		9a6f:11a6
		187f:3c8a
		107e:3c08
		823f:2350
		0
		<proc_208>
		fork(11)			# <proc_208>(083f:3082, 185e:1e86, 185e:1e86, 107e:3c08, f880:0083, 9861:1bb6, 9a6f:11a6, 187f:3c8a, 107e:3c08, 823f:2350, 0)
	done
	end

proc proc_149 
	# <proc_149>()
	0
	set state.face				# set state.face 0
	4
	set state.tint				# set state.tint 4
	4
	set state.size				# set state.size 4
	3
	state.y
	+
	set state.y				# set state.y (state.y+3)
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	8
	move					# move 8
	plot
	end

proc proc_150 
	# <proc_150>(0)
	# <proc_150>(1)
	# <proc_150>(2)
	# <proc_150>(3)
	<proc_151>
	fork(0)					# <proc_151>()
	120
	220
	set state.x				# set state.x 220
	set state.y				# set state.y 120
	6
	set state.tint				# set state.tint 6
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		f860:2087
		187f:3c8a
		083f:3082
		9a7f:2186
		0
		0
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(f860:2087, 187f:3c8a, 083f:3082, 9a7f:2186, 0, 0, 0, 0, 0, 0, 0)
	done
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		14bc:3c49
		107e:3c08
		14bc:3c49
		083f:3082
		8207:1fa2
		9a6e:19a6
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(14bc:3c49, 107e:3c08, 14bc:3c49, 083f:3082, 8207:1fa2, 9a6e:19a6, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0)
		10
		state.y
		+
		set state.y			# set state.y (state.y+10)
		9a6e:19a6
		14bc:3c49
		40bf:3f08
		147f:1c49
		083f:3082
		9a7f:2186
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, 14bc:3c49, 40bf:3f08, 147f:1c49, 083f:3082, 9a7f:2186, 0, 0, 0, 0, 0)
	done
	2
	local.a
	<cmp>
	when(==)				# (local.a==2)
		189c:2186
		8207:1fa2
		189c:2186
		083f:3082
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(189c:2186, 8207:1fa2, 189c:2186, 083f:3082, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
		10
		state.y
		+
		set state.y			# set state.y (state.y+10)
		14bc:3c49
		f860:2087
		0
		823f:2350
		9a7f:2186
		8207:1fa2
		9a6e:19a6
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(14bc:3c49, f860:2087, 0, 823f:2350, 9a7f:2186, 8207:1fa2, 9a6e:19a6, 0, 0, 0, 0)
	done
	3
	local.a
	<cmp>
	when(==)				# (local.a==3)
		187f:3c8a
		9a7f:2186
		189c:2186
		107f:2c49
		8207:1fa2
		147f:1c49
		f041:0107
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(187f:3c8a, 9a7f:2186, 189c:2186, 107f:2c49, 8207:1fa2, 147f:1c49, f041:0107, 0, 0, 0, 0)
		10
		state.y
		+
		set state.y			# set state.y (state.y+10)
		823f:2350
		9a7f:2186
		8207:1fa2
		0
		927f:0104
		185e:1e86
		081f:1f82
		107e:3c08
		187f:3c8a
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(823f:2350, 9a7f:2186, 8207:1fa2, 0, 927f:0104, 185e:1e86, 081f:1f82, 107e:3c08, 187f:3c8a, 0, 0)
	done
	end

proc proc_151 
	# <proc_151>()
	120
	220
	set state.x				# set state.x 220
	set state.y				# set state.y 120
	0
	set state.face				# set state.face 0
	4
	set state.tint				# set state.tint 4
	9
	set state.size				# set state.size 9
	8
	state.y
	+
	8
	state.x
	+
	set state.x				# set state.x (state.x+8)
	set state.y				# set state.y (state.y+8)
	plot
	19
	move					# move 19
	plot
	19
	move					# move 19
	plot
	19
	move					# move 19
	plot
	19
	move					# move 19
	plot
	end

proc proc_152 
	# <proc_152>()
	0
	set state.size				# set state.size 0
	7
	seed					# 7
	20
	1
	/					# 1/20
	set state.D				# set state.D 1/20
	0
	0
	26
	15
	<proc_172>
	fork(4)					# <proc_172>(0, 0, 26, 15)
	end

proc proc_153 
	# <proc_153>()
	<proc_158>
	fork(0)					# <proc_158>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	1
	set state.size				# set state.size 1
	7
	seed					# 7
	0000:6666
	set state.D				# set state.D 0000:6666
	0
	0
	26
	15
	<proc_172>
	fork(4)					# <proc_172>(0, 0, 26, 15)
	state.B
	state.C
	set state.x				# set state.x state.C
	set state.y				# set state.y state.B
	40
	1
	<proc_155>
	fork(2)					# <proc_155>(40, 1)
	end

proc proc_154 
	# <proc_154>(40)
	# <proc_154>(rand)
	<proc_158>
	fork(0)					# <proc_158>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	1
	set state.size				# set state.size 1
	state.B
	state.C
	set state.x				# set state.x state.C
	set state.y				# set state.y state.B
	local.a
	1
	<proc_155>
	fork(2)					# <proc_155>(local.a, 1)
	end

proc proc_155 
	# <proc_155>(40, 1)
	# <proc_155>(local.a, 1)
	0
	local.b
	<cmp>
	when(>)					# (local.b>0)
		192
		set state.face			# set state.face 192
		1
		set state.size			# set state.size 1
		3
		set state.tint			# set state.tint 3
		local.a
		seed				# local.a
		20
		set state.B			# set state.B 20
		50
		<proc_215>
		fork(1)				# <proc_215>(50)
		200
		wait				# wait 200
		0
		local.b
		<cmp>
		when(>)				# (local.b>0)
			1
			set state.tint		# set state.tint 1
		else
			0
			set state.tint		# set state.tint 0
		done
	done
	end

proc proc_156 
	# <proc_156>()
	0
	set state.size				# set state.size 0
	state.G
	state.H
	set state.x				# set state.x state.H
	set state.y				# set state.y state.G
	10
	state.y
	-
	10
	state.x
	-
	set state.x				# set state.x (state.x-10)
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	10
	state.x
	-
	set state.x				# set state.x (state.x-10)
	set state.y				# set state.y (state.y-10)
	7
	state.y
	-
	1
	state.x
	-
	set state.x				# set state.x (state.x-1)
	set state.y				# set state.y (state.y-7)
	7
	set state.tint				# set state.tint 7
	9a6e:19a6
	14bc:3c49
	40bf:3f08
	147f:1c49
	083f:3082
	9a7f:2186
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(9a6e:19a6, 14bc:3c49, 40bf:3f08, 147f:1c49, 083f:3082, 9a7f:2186, 0, 0, 0, 0, 0)
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	state.G
	state.H
	set state.x				# set state.x state.H
	set state.y				# set state.y state.G
	16
	state.y
	+
	28
	state.x
	-
	set state.x				# set state.x (state.x-28)
	set state.y				# set state.y (state.y+16)
	54
	33
	20
	<proc_003>
	<proc_198>
	fork(4)					# <proc_198>(54, 33, 20, <proc_003>)
	7
	state.y
	+
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	set state.y				# set state.y (state.y+7)
	6
	set state.tint				# set state.tint 6
	14bc:3c49
	189c:2186
	9861:1bb6
	f880:0083
	595e:1892
	927f:0104
	9a7f:2186
	185e:1e86
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(14bc:3c49, 189c:2186, 9861:1bb6, f880:0083, 595e:1892, 927f:0104, 9a7f:2186, 185e:1e86, 0, 0, 0)
	end

proc proc_157 
	# <proc_157>()
	state.B
	state.C
	set state.x				# set state.x state.C
	set state.y				# set state.y state.B
	192
	set state.face				# set state.face 192
	1
	set state.size				# set state.size 1
	1
	set state.tint				# set state.tint 1
	3
	state.y
	+
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y+3)
	202
	40
	40
	<proc_004>
	<proc_198>
	fork(4)					# <proc_198>(202, 40, 40, <proc_004>)
	end

proc proc_158 
	# <proc_158>()
	state.B
	state.C
	set state.x				# set state.x state.C
	set state.y				# set state.y state.B
	192
	set state.face				# set state.face 192
	1
	set state.size				# set state.size 1
	1
	set state.tint				# set state.tint 1
	50
	<proc_159>
	fork(1)					# <proc_159>(50)
	3
	state.y
	+
	3
	state.x
	-
	set state.x				# set state.x (state.x-3)
	set state.y				# set state.y (state.y+3)
	end

proc proc_159 
	# <proc_159>(50)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		rand
		seed				# rand
		12
		<proc_160>
		fork(1)				# <proc_160>(12)
		64
		state.face
		+
		set state.face			# set state.face (state.face+64)
		4
		move				# move 4
		64
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-64))
		0.25
		wait				# wait 0.25
		<proc_159>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_159>
		tail
	done
	end

proc proc_160 
	# <proc_160>(12)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		3
		move				# move 3
		<proc_160>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_160>
		tail
	done
	end

proc proc_161 
	# <proc_161>(18, local.b, local.c)
	# <proc_161>(local.a, 0, 0.25)
	<proc_163>
	fork(0)					# <proc_163>()
	local.a
	local.a
	~
	local.a
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(local.a, (-local.a), local.a, local.b, local.c, 0)
	local.a
	local.a
	local.a
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(local.a, local.a, local.a, local.b, local.c, 0)
	local.a
	~
	local.a
	local.a
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>((-local.a), local.a, local.a, local.b, local.c, 0)
	local.a
	~
	local.a
	~
	local.a
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>((-local.a), (-local.a), local.a, local.b, local.c, 0)
	local.a
	local.a
	~
	local.a
	~
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(local.a, (-local.a), (-local.a), local.b, local.c, 0)
	local.a
	local.a
	local.a
	~
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(local.a, local.a, (-local.a), local.b, local.c, 0)
	local.a
	~
	local.a
	local.a
	~
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>((-local.a), local.a, (-local.a), local.b, local.c, 0)
	local.a
	~
	local.a
	~
	local.a
	~
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>((-local.a), (-local.a), (-local.a), local.b, local.c, 0)
	0
	local.a
	~
	local.a
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(0, (-local.a), local.a, local.b, local.c, 0)
	0
	local.a
	local.a
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(0, local.a, local.a, local.b, local.c, 0)
	local.a
	~
	0
	local.a
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>((-local.a), 0, local.a, local.b, local.c, 0)
	local.a
	local.a
	0
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(local.a, local.a, 0, local.b, local.c, 0)
	local.a
	local.a
	~
	0
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(local.a, (-local.a), 0, local.b, local.c, 0)
	0
	local.a
	local.a
	~
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(0, local.a, (-local.a), local.b, local.c, 0)
	0
	local.a
	~
	local.a
	~
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>(0, (-local.a), (-local.a), local.b, local.c, 0)
	local.a
	~
	0
	local.a
	~
	local.b
	local.c
	0
	<proc_164>
	fork(6)					# <proc_164>((-local.a), 0, (-local.a), local.b, local.c, 0)
	end

proc proc_162 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		<proc_163>
		fork(0)				# <proc_163>()
		7
		local.a
		&
		when(!=)			# (local.a&7) !=
		else
			local.c
			local.d
			<proc_121>
			fork(2)			# <proc_121>(local.c, local.d)
		done
		local.b
		local.b
		~
		local.b
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(local.b, (-local.b), local.b, local.c, local.d, 0)
		local.b
		local.b
		local.b
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(local.b, local.b, local.b, local.c, local.d, 0)
		local.b
		~
		local.b
		local.b
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>((-local.b), local.b, local.b, local.c, local.d, 0)
		local.b
		~
		local.b
		~
		local.b
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>((-local.b), (-local.b), local.b, local.c, local.d, 0)
		local.b
		local.b
		~
		local.b
		~
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(local.b, (-local.b), (-local.b), local.c, local.d, 0)
		local.b
		local.b
		local.b
		~
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(local.b, local.b, (-local.b), local.c, local.d, 0)
		local.b
		~
		local.b
		local.b
		~
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>((-local.b), local.b, (-local.b), local.c, local.d, 0)
		local.b
		~
		local.b
		~
		local.b
		~
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>((-local.b), (-local.b), (-local.b), local.c, local.d, 0)
		0
		local.b
		~
		local.b
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(0, (-local.b), local.b, local.c, local.d, 0)
		0
		local.b
		local.b
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(0, local.b, local.b, local.c, local.d, 0)
		local.b
		~
		0
		local.b
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>((-local.b), 0, local.b, local.c, local.d, 0)
		local.b
		local.b
		0
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(local.b, local.b, 0, local.c, local.d, 0)
		local.b
		local.b
		~
		0
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(local.b, (-local.b), 0, local.c, local.d, 0)
		0
		local.b
		local.b
		~
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(0, local.b, (-local.b), local.c, local.d, 0)
		0
		local.b
		~
		local.b
		~
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>(0, (-local.b), (-local.b), local.c, local.d, 0)
		local.b
		~
		0
		local.b
		~
		local.c
		local.d
		0
		<proc_164>
		fork(6)				# <proc_164>((-local.b), 0, (-local.b), local.c, local.d, 0)
		1
		wait				# wait 1
		<proc_162>
		1
		local.a
		-
		0000:ffff
		local.e
		local.c
		+
		&
		0000:ffff
		local.f
		local.d
		+
		&
		set local.d			# set local.d ((local.d+local.f)&0000:ffff)
		set local.c			# set local.c ((local.c+local.e)&0000:ffff)
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_162>
		tail
	done
	end

proc proc_163 
	# <proc_163>()
	state.G
	state.H
	set state.x				# set state.x state.H
	set state.y				# set state.y state.G
	55
	set state.size				# set state.size 55
	0
	set state.tint				# set state.tint 0
	plot
	end

proc proc_164 
	# <proc_164>(local.a, (-local.a), local.a, local.b, local.c, 0)
	# <proc_164>(local.a, local.a, local.a, local.b, local.c, 0)
	# <proc_164>((-local.a), local.a, local.a, local.b, local.c, 0)
	# <proc_164>((-local.a), (-local.a), local.a, local.b, local.c, 0)
	# <proc_164>(local.a, (-local.a), (-local.a), local.b, local.c, 0)
	# <proc_164>(local.a, local.a, (-local.a), local.b, local.c, 0)
	# <proc_164>((-local.a), local.a, (-local.a), local.b, local.c, 0)
	# <proc_164>((-local.a), (-local.a), (-local.a), local.b, local.c, 0)
	# <proc_164>(0, (-local.a), local.a, local.b, local.c, 0)
	# <proc_164>(0, local.a, local.a, local.b, local.c, 0)
	local.d
	sine					# sin(local.d)
	0.25
	local.d
	+
	sine					# sin((local.d+0.25))
	local.g
	local.c
	*					# local.c*local.g
	local.h
	local.b
	*					# local.b*local.h
	-
	local.g
	local.b
	*					# local.b*local.g
	local.h
	local.c
	*					# local.c*local.h
	+
	<proc_165>
	local.i
	local.j
	set local.c				# set local.c local.j
	set local.b				# set local.b local.i
	set state.proc				# set state.proc <proc_165>
	pop
	pop
	pop
	pop
	tail
	end

proc proc_165 
	local.e
	sine					# sin(local.e)
	0.25
	local.e
	+
	sine					# sin((local.e+0.25))
	local.g
	local.c
	*					# local.c*local.g
	local.h
	local.a
	*					# local.a*local.h
	-
	local.g
	local.a
	*					# local.a*local.g
	local.h
	local.c
	*					# local.c*local.h
	+
	<proc_166>
	local.i
	local.j
	set local.c				# set local.c local.j
	set local.a				# set local.a local.i
	set state.proc				# set state.proc <proc_166>
	pop
	pop
	pop
	pop
	pop
	pop
	pop
	tail
	end

proc proc_166 
	90
	90
	local.d
	local.c
	local.e
	+
	+
	local.e
	/					# local.e/((local.e+local.c)+local.d)
	local.f
	local.a
	*					# local.a*local.f
	local.f
	local.b
	*					# local.b*local.f
	<proc_167>
	local.g
	local.h
	set local.b				# set local.b local.h
	set local.a				# set local.a local.g
	set state.proc				# set state.proc <proc_167>
	pop
	pop
	pop
	pop
	pop
	tail
	end

proc proc_167 
	15
	local.c
	/					# local.c/15
	4
	+
	set state.size				# set state.size (4+local.c/15)
	local.b
	state.G
	+
	local.a
	state.H
	+
	set state.x				# set state.x (state.H+local.a)
	set state.y				# set state.y (state.G+local.b)
	draw
	end

proc proc_168 
	# <proc_168>()
	7
	set state.B				# set state.B 7
	40
	set state.A				# set state.A 40
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	7
	set state.G				# set state.G 7
	0.75
	set state.C				# set state.C 0.75
	1
	<proc_183>
	fork(1)					# <proc_183>(1)
	6
	64
	*					# 64*6
	wait					# wait 64*6
	6
	16
	*					# 16*6
	wait					# wait 16*6
	rand
	seed					# rand
	<proc_191>
	set state.proc				# set state.proc <proc_191>
	tail
	end

proc proc_169 
	# <proc_169>()
	7
	set state.B				# set state.B 7
	40
	set state.A				# set state.A 40
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	7
	set state.G				# set state.G 7
	0.75
	set state.C				# set state.C 0.75
	0
	<proc_183>
	fork(1)					# <proc_183>(0)
	5
	64
	*					# 64*5
	wait					# wait 64*5
	<proc_173>
	fork(0)					# <proc_173>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	2
	<proc_175>
	fork(1)					# <proc_175>(2)
	5
	8
	*					# 8*5
	wait					# wait 8*5
	0
	set state.tint				# set state.tint 0
	0
	<proc_181>
	fork(1)					# <proc_181>(0)
	1
	set state.tint				# set state.tint 1
	1
	<proc_181>
	fork(1)					# <proc_181>(1)
	5
	8
	*					# 8*5
	wait					# wait 8*5
	1
	<proc_175>
	fork(1)					# <proc_175>(1)
	<proc_176>
	fork(0)					# <proc_176>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	rand
	seed					# rand
	<proc_173>
	fork(0)					# <proc_173>()
	<proc_171>
	fork(0)					# <proc_171>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	<proc_170>
	fork(0)					# <proc_170>()
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	<proc_044>
	set state.proc				# set state.proc <proc_044>
	tail
	end

proc proc_170 
	# <proc_170>()
	state.A
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y state.A
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	1
	state.x
	+
	set state.x				# set state.x (state.x+1)
	6
	set state.tint				# set state.tint 6
	14bc:3c49
	189c:2186
	9861:1bb6
	f880:0083
	595e:1892
	927f:0104
	9a7f:2186
	185e:1e86
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(14bc:3c49, 189c:2186, 9861:1bb6, f880:0083, 595e:1892, 927f:0104, 9a7f:2186, 185e:1e86, 0, 0, 0)
	4
	state.y
	-
	set state.y				# set state.y (state.y-4)
	54
	33
	20
	<proc_003>
	<proc_198>
	fork(4)					# <proc_198>(54, 33, 20, <proc_003>)
	end

proc proc_171 
	# <proc_171>()
	110
	set state.H				# set state.H 110
	100
	set state.G				# set state.G 100
	6
	state.H
	+
	set state.H				# set state.H (state.H+6)
	1
	set state.tint				# set state.tint 1
	0
	set state.size				# set state.size 0
	7
	seed					# 7
	state.C
	set state.D				# set state.D state.C
	0
	0
	26
	15
	<proc_172>
	fork(4)					# <proc_172>(0, 0, 26, 15)
	end

proc proc_172 
	# <proc_172>(0, 0, 26, 15)
	local.d
	local.b
	<cmp>
	when(<)					# (local.b<local.d)
		local.c
		local.a
		<cmp>
		when(<)				# (local.a<local.c)
			3
			rand
			*			# rand*3
			1
			+
			set state.tint		# set state.tint (1+rand*3)
			state.G
			state.H
			set state.x		# set state.x state.H
			set state.y		# set state.y state.G
			2
			13
			local.a
			-
			*			# (local.a-13)*2
			2
			7
			local.b
			-
			*			# (local.b-7)*2
			local.f
			state.y
			+
			local.e
			state.x
			+
			set state.x		# set state.x (state.x+local.e)
			set state.y		# set state.y (state.y+local.f)
			plot
			state.D
			wait			# wait state.D
			<proc_172>
			1
			local.a
			+
			set local.a		# set local.a (local.a+1)
			set state.proc		# set state.proc <proc_172>
			pop
			pop
			tail
		else
			<proc_172>
			0
			1
			local.b
			+
			set local.b		# set local.b (local.b+1)
			set local.a		# set local.a 0
			set state.proc		# set state.proc <proc_172>
			tail
		done
	done
	end

proc proc_173 
	# <proc_173>()
	31
	152
	set state.x				# set state.x 152
	set state.y				# set state.y 31
	6
	set state.tint				# set state.tint 6
	15
	26
	<proc_179>
	fork(2)					# <proc_179>(15, 26)
	end

proc proc_174 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		3
		set state.size			# set state.size 3
		4
		set state.tint			# set state.tint 4
		plot
		7
		move				# move 7
		<proc_174>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_174>
		tail
	done
	end

proc proc_175 
	# <proc_175>(2)
	# <proc_175>(1)
	60
	state.A
	+
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y (state.A+60)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	2
	state.y
	+
	2
	state.x
	+
	set state.x				# set state.x (state.x+2)
	set state.y				# set state.y (state.y+2)
	10
	<proc_174>
	fork(1)					# <proc_174>(10)
	2
	state.y
	-
	2
	state.x
	-
	set state.x				# set state.x (state.x-2)
	set state.y				# set state.y (state.y-2)
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	7
	set state.tint				# set state.tint 7
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		107f:2c49
		9a7f:2186
		189c:2186
		9a7f:2186
		f860:2087
		040f:0f42
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(107f:2c49, 9a7f:2186, 189c:2186, 9a7f:2186, f860:2087, 040f:0f42, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0)
	done
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		9a6e:19a6
		14bc:3c49
		40bf:3f08
		147f:1c49
		083f:3082
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, 14bc:3c49, 40bf:3f08, 147f:1c49, 083f:3082, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0)
	done
	2
	local.a
	<cmp>
	when(==)				# (local.a==2)
		f860:2087
		187f:3c8a
		083f:3082
		9a7f:2186
		0
		0
		0
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(f860:2087, 187f:3c8a, 083f:3082, 9a7f:2186, 0, 0, 0, 0, 0, 0, 0)
	done
	3
	local.a
	<cmp>
	when(==)				# (local.a==3)
		9a6e:19a6
		9a7f:2186
		107e:3c08
		187f:3c8a
		f860:2087
		107e:3c08
		98bc:3ba6
		0
		0
		0
		0
		<proc_208>
		fork(11)			# <proc_208>(9a6e:19a6, 9a7f:2186, 107e:3c08, 187f:3c8a, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
	done
	end

proc proc_176 
	# <proc_176>()
	31
	152
	set state.x				# set state.x 152
	set state.y				# set state.y 31
	2
	state.y
	+
	3
	state.x
	+
	set state.x				# set state.x (state.x+3)
	set state.y				# set state.y (state.y+2)
	3
	set state.size				# set state.size 3
	5
	set state.tint				# set state.tint 5
	15
	<proc_177>
	fork(1)					# <proc_177>(15)
	4
	set state.tint				# set state.tint 4
	1
	wait					# wait 1
	15
	<proc_177>
	fork(1)					# <proc_177>(15)
	end

proc proc_177 
	# <proc_177>(15)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		26
		<proc_178>
		fork(1)				# <proc_178>(26)
		1
		wait				# wait 1
		8
		state.y
		+
		set state.y			# set state.y (state.y+8)
		<proc_177>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_177>
		tail
	done
	end

proc proc_178 
	# <proc_178>(26)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		6
		move				# move 6
		<proc_178>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_178>
		tail
	done
	end

proc proc_179 
	# <proc_179>(15, 26)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		local.b
		<proc_180>
		fork(1)				# <proc_180>(local.b)
		state.C
		local.b
		*				# local.b*state.C
		wait				# wait local.b*state.C
		8
		state.y
		+
		set state.y			# set state.y (state.y+8)
		rand
		seed				# rand
		<proc_179>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_179>
		tail
	done
	end

proc proc_180 
	# <proc_180>(local.b)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		6
		rand
		<ror>
		<proc_079>
		fork(1)				# <proc_079>((rand<ror>6))
		6
		move				# move 6
		state.C
		wait				# wait state.C
		<proc_180>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_180>
		tail
	done
	end

proc proc_181 
	# <proc_181>(0)
	# <proc_181>(1)
	30
	80
	set state.x				# set state.x 80
	set state.y				# set state.y 30
	8
	state.y
	+
	5
	state.x
	+
	set state.x				# set state.x (state.x+5)
	set state.y				# set state.y (state.y+8)
	30
	local.a
	*					# local.a*30
	state.y
	+
	set state.y				# set state.y (state.y+local.a*30)
	0
	set state.size				# set state.size 0
	plot
	0
	set state.face				# set state.face 0
	26
	0
	9
	<proc_182>
	fork(3)					# <proc_182>(26, 0, 9)
	60
	state.x
	+
	set state.x				# set state.x (state.x+60)
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	26
	0
	9
	<proc_182>
	fork(3)					# <proc_182>(26, 0, 9)
	end

proc proc_182 
	# <proc_182>(26, 0, 9)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		local.b
		set state.size			# set state.size local.b
		plot
		2
		move				# move 2
		1
		wait				# wait 1
		local.c
		local.b
		<cmp>
		when(<)				# (local.b<local.c)
			<proc_182>
			1
			local.a
			-
			0.5
			local.b
			+
			set local.b		# set local.b (local.b+0.5)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_182>
			tail
		else
			<proc_182>
			1
			local.a
			-
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_182>
			tail
		done
	done
	end

proc proc_183 
	# <proc_183>(1)
	# <proc_183>(0)
	0
	<proc_119>
	fork(1)					# <proc_119>(0)
	0000:a666
	0.75
	<proc_121>
	fork(2)					# <proc_121>(0000:a666, 0.75)
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	5
	5
	*					# 5*5
	wait					# wait 5*5
	state.A
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y state.A
	7
	set state.tint				# set state.tint 7
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	927f:0104
	185e:1e86
	107f:2c49
	40bf:3f08
	14bc:3c49
	f041:0107
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(927f:0104, 185e:1e86, 107f:2c49, 40bf:3f08, 14bc:3c49, f041:0107, 0, 0, 0, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	14bc:3c49
	9a6e:19a6
	189c:2186
	f860:2087
	f860:2087
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(14bc:3c49, 9a6e:19a6, 189c:2186, f860:2087, f860:2087, 0, 0, 0, 0, 0, 0)
	<proc_186>
	fork(0)					# <proc_186>()
	5
	5
	*					# 5*5
	wait					# wait 5*5
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	187f:3c8a
	9a7f:2186
	189c:2186
	107f:2c49
	8207:1fa2
	f041:0107
	0
	823f:2350
	9a7f:2186
	8207:1fa2
	0
	<proc_208>
	fork(11)				# <proc_208>(187f:3c8a, 9a7f:2186, 189c:2186, 107f:2c49, 8207:1fa2, f041:0107, 0, 823f:2350, 9a7f:2186, 8207:1fa2, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	1
	local.a
	<cmp>
	when(==)				# (local.a==1)
		083f:3082
		185e:1e86
		185e:1e86
		107e:3c08
		f880:0083
		9861:1bb6
		9a6f:11a6
		187f:3c8a
		107e:3c08
		823f:2350
		0
		<proc_208>
		fork(11)			# <proc_208>(083f:3082, 185e:1e86, 185e:1e86, 107e:3c08, f880:0083, 9861:1bb6, 9a6f:11a6, 187f:3c8a, 107e:3c08, 823f:2350, 0)
	done
	<proc_186>
	fork(0)					# <proc_186>()
	5
	5
	*					# 5*5
	wait					# wait 5*5
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	9a6e:19a6
	f041:0107
	14bc:3c49
	f041:0107
	081f:1f82
	9a6e:19a6
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(9a6e:19a6, f041:0107, 14bc:3c49, f041:0107, 081f:1f82, 9a6e:19a6, 0, 0, 0, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	f860:2087
	107e:3c08
	f860:2087
	f041:0107
	0
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(f860:2087, 107e:3c08, f860:2087, f041:0107, 0, 0, 0, 0, 0, 0, 0)
	<proc_186>
	fork(0)					# <proc_186>()
	5
	5
	*					# 5*5
	wait					# wait 5*5
	state.A
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y state.A
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	107f:2c49
	9a7f:2186
	189c:2186
	9a7f:2186
	f860:2087
	040f:0f42
	9a7f:2186
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(107f:2c49, 9a7f:2186, 189c:2186, 9a7f:2186, f860:2087, 040f:0f42, 9a7f:2186, 0, 0, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	187f:3c8a
	14bc:3c49
	f041:0107
	14bc:3c49
	0
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(187f:3c8a, 14bc:3c49, f041:0107, 14bc:3c49, 0, 0, 0, 0, 0, 0, 0)
	<proc_187>
	fork(0)					# <proc_187>()
	5
	5
	*					# 5*5
	wait					# wait 5*5
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	9a6e:19a6
	14bc:3c49
	40bf:3f08
	147f:1c49
	083f:3082
	9a7f:2186
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(9a6e:19a6, 14bc:3c49, 40bf:3f08, 147f:1c49, 083f:3082, 9a7f:2186, 0, 0, 0, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	187f:3c8a
	14bc:3c49
	f041:0107
	14bc:3c49
	0
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(187f:3c8a, 14bc:3c49, f041:0107, 14bc:3c49, 0, 0, 0, 0, 0, 0, 0)
	<proc_187>
	fork(0)					# <proc_187>()
	5
	5
	*					# 5*5
	wait					# wait 5*5
	state.A
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y state.A
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	10
	state.y
	-
	set state.y				# set state.y (state.y-10)
	187f:3c8a
	14bc:3c49
	f041:0107
	14bc:3c49
	0
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(187f:3c8a, 14bc:3c49, f041:0107, 14bc:3c49, 0, 0, 0, 0, 0, 0, 0)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	4
	state.x
	+
	set state.x				# set state.x (state.x+4)
	9a6e:19a6
	f041:0107
	107f:2c49
	9a7f:2186
	14bc:3c49
	40bf:3f08
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(9a6e:19a6, f041:0107, 107f:2c49, 9a7f:2186, 14bc:3c49, 40bf:3f08, 0, 0, 0, 0, 0)
	5
	10
	*					# 10*5
	wait					# wait 10*5
	0
	local.a
	<cmp>
	when(==)				# (local.a==0)
		<proc_185>
		set state.proc			# set state.proc <proc_185>
		pop
		tail
	else
		<proc_184>
		set state.proc			# set state.proc <proc_184>
		pop
		tail
	done
	end

proc proc_184 
	<proc_088>
	fork(0)					# <proc_088>()
	5
	6
	*					# 6*5
	wait					# wait 6*5
	260
	set state.H				# set state.H 260
	80
	set state.G				# set state.G 80
	30
	<proc_087>
	fork(1)					# <proc_087>(30)
	5
	26
	*					# 26*5
	wait					# wait 26*5
	<proc_185>
	set state.proc				# set state.proc <proc_185>
	tail
	end

proc proc_185 
	154
	150
	set state.x				# set state.x 150
	set state.y				# set state.y 154
	3
	state.y
	-
	set state.y				# set state.y (state.y-3)
	2
	set state.tint				# set state.tint 2
	0
	set state.size				# set state.size 0
	160
	124
	30
	<proc_006>
	<proc_198>
	fork(4)					# <proc_198>(160, 124, 30, <proc_006>)
	7
	set state.tint				# set state.tint 7
	0
	set state.size				# set state.size 0
	2
	state.y
	+
	2
	state.x
	-
	set state.x				# set state.x (state.x-2)
	set state.y				# set state.y (state.y+2)
	164
	128
	30
	<proc_006>
	30
	30
	<proc_201>
	fork(6)					# <proc_201>(164, 128, 30, <proc_006>, 30, 30)
	1
	set state.tint				# set state.tint 1
	0
	<proc_181>
	fork(1)					# <proc_181>(0)
	5
	8
	*					# 8*5
	wait					# wait 8*5
	10
	wait					# wait 10
	10
	wait					# wait 10
	10
	wait					# wait 10
	0
	<proc_175>
	fork(1)					# <proc_175>(0)
	<proc_176>
	set state.proc				# set state.proc <proc_176>
	tail
	end

proc proc_186 
	# <proc_186>()
	5
	set state.tint				# set state.tint 5
	7
	state.y
	+
	2
	state.x
	-
	set state.x				# set state.x (state.x-2)
	set state.y				# set state.y (state.y+7)
	75
	10
	20
	<proc_007>
	<proc_198>
	fork(4)					# <proc_198>(75, 10, 20, <proc_007>)
	end

proc proc_187 
	# <proc_187>()
	5
	set state.tint				# set state.tint 5
	7
	state.y
	+
	2
	state.x
	-
	set state.x				# set state.x (state.x-2)
	set state.y				# set state.y (state.y+7)
	60
	20
	20
	<proc_007>
	<proc_198>
	fork(4)					# <proc_198>(60, 20, 20, <proc_007>)
	end

proc proc_188 
	local.a
	<proc_079>
	fork(1)					# <proc_079>(local.a)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.b
	<proc_079>
	fork(1)					# <proc_079>(local.b)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.c
	<proc_079>
	fork(1)					# <proc_079>(local.c)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.d
	<proc_079>
	fork(1)					# <proc_079>(local.d)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.e
	<proc_079>
	fork(1)					# <proc_079>(local.e)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.f
	<proc_079>
	fork(1)					# <proc_079>(local.f)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.g
	<proc_079>
	fork(1)					# <proc_079>(local.g)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.h
	<proc_079>
	fork(1)					# <proc_079>(local.h)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.i
	<proc_079>
	fork(1)					# <proc_079>(local.i)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.j
	<proc_079>
	fork(1)					# <proc_079>(local.j)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.k
	<proc_079>
	fork(1)					# <proc_079>(local.k)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.l
	<proc_079>
	fork(1)					# <proc_079>(local.l)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.m
	<proc_079>
	fork(1)					# <proc_079>(local.m)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	end

proc proc_189 
	13
	state.C
	*					# state.C*13
	wait					# wait state.C*13
	13
	6
	*					# 6*13
	move					# move 6*13
	local.a
	<proc_079>
	fork(1)					# <proc_079>(local.a)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.b
	<proc_079>
	fork(1)					# <proc_079>(local.b)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.c
	<proc_079>
	fork(1)					# <proc_079>(local.c)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.d
	<proc_079>
	fork(1)					# <proc_079>(local.d)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.e
	<proc_079>
	fork(1)					# <proc_079>(local.e)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.f
	<proc_079>
	fork(1)					# <proc_079>(local.f)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.g
	<proc_079>
	fork(1)					# <proc_079>(local.g)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.h
	<proc_079>
	fork(1)					# <proc_079>(local.h)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.i
	<proc_079>
	fork(1)					# <proc_079>(local.i)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.j
	<proc_079>
	fork(1)					# <proc_079>(local.j)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.k
	<proc_079>
	fork(1)					# <proc_079>(local.k)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.l
	<proc_079>
	fork(1)					# <proc_079>(local.l)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	local.m
	<proc_079>
	fork(1)					# <proc_079>(local.m)
	6
	move					# move 6
	state.C
	wait					# wait state.C
	end

proc proc_190 
	168
	33
	set state.x				# set state.x 33
	set state.y				# set state.y 168
	0
	set state.face				# set state.face 0
	1
	set state.tint				# set state.tint 1
	22
	local.a
	*					# local.a*22
	move					# move local.a*22
	9
	set state.size				# set state.size 9
	plot
	end

proc proc_191 
	31
	152
	set state.x				# set state.x 152
	set state.y				# set state.y 31
	6
	set state.tint				# set state.tint 6
	<proc_196>
	fork(0)					# <proc_196>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	7
	<proc_190>
	fork(1)					# <proc_190>(7)
	<proc_195>
	fork(0)					# <proc_195>()
	5
	32
	*					# 32*5
	wait					# wait 32*5
	<proc_176>
	fork(0)					# <proc_176>()
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_197>
	fork(0)					# <proc_197>()
	5
	64
	*					# 64*5
	wait					# wait 64*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	7
	<proc_056>
	fork(1)					# <proc_056>(7)
	5
	16
	*					# 16*5
	wait					# wait 16*5
	50
	set state.H				# set state.H 50
	60
	set state.G				# set state.G 60
	10
	<proc_192>
	fork(1)					# <proc_192>(10)
	50
	set state.H				# set state.H 50
	30
	set state.G				# set state.G 30
	0
	240
	<proc_193>
	fork(2)					# <proc_193>(0, 240)
	rand
	seed					# rand
	0
	240
	<proc_193>
	fork(2)					# <proc_193>(0, 240)
	rand
	seed					# rand
	0
	240
	<proc_193>
	fork(2)					# <proc_193>(0, 240)
	rand
	seed					# rand
	0
	240
	<proc_193>
	fork(2)					# <proc_193>(0, 240)
	rand
	seed					# rand
	2
	set state.size				# set state.size 2
	0
	240
	<proc_194>
	fork(2)					# <proc_194>(0, 240)
	rand
	seed					# rand
	4
	set state.size				# set state.size 4
	0
	240
	<proc_194>
	fork(2)					# <proc_194>(0, 240)
	rand
	seed					# rand
	6
	set state.size				# set state.size 6
	0
	240
	<proc_194>
	fork(2)					# <proc_194>(0, 240)
	rand
	seed					# rand
	8
	set state.size				# set state.size 8
	0
	240
	<proc_194>
	fork(2)					# <proc_194>(0, 240)
	5
	32
	*					# 32*5
	wait					# wait 32*5
	5
	16
	*					# 16*5
	wait					# wait 16*5
	5
	8
	*					# 8*5
	wait					# wait 8*5
	<proc_240>
	set state.proc				# set state.proc <proc_240>
	tail
	end

proc proc_192 
	# <proc_192>(10)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		2
		50
		rand
		*				# rand*50
		<<
		50
		rand
		*				# rand*50
		local.c
		state.G
		+
		local.b
		state.H
		+
		set state.x			# set state.x (state.H+local.b)
		set state.y			# set state.y (state.G+local.c)
		32
		state.face
		+
		set state.face			# set state.face (state.face+32)
		7
		<proc_059>
		fork(1)				# <proc_059>(7)
		30
		wait				# wait 30
		<proc_192>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_192>
		pop
		pop
		tail
	done
	end

proc proc_193 
	# <proc_193>(0, 240)
	local.b
	local.a
	<cmp>
	when(<)					# (local.a<local.b)
		local.b
		local.a
		/				# local.a/local.b
		2
		45
		rand
		*				# rand*45
		<<
		2
		80
		rand
		*				# rand*80
		<<
		set state.x			# set state.x (rand*80<<2)
		set state.y			# set state.y (rand*45<<2)
		10
		local.a
		/				# local.a/10
		local.c
		3
		+
		+
		set state.size			# set state.size ((3+local.c)+local.a/10)
		3
		rand
		*				# rand*3
		1
		+
		set state.tint			# set state.tint (1+rand*3)
		plot
		2
		wait				# wait 2
		0
		set state.tint			# set state.tint 0
		plot
		<proc_193>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_193>
		pop
		tail
	done
	end

proc proc_194 
	# <proc_194>(0, 240)
	local.b
	local.a
	<cmp>
	when(<)					# (local.a<local.b)
		2
		45
		rand
		*				# rand*45
		<<
		2
		80
		rand
		*				# rand*80
		<<
		set state.x			# set state.x (rand*80<<2)
		set state.y			# set state.y (rand*45<<2)
		3
		rand
		*				# rand*3
		5
		+
		set state.tint			# set state.tint (5+rand*3)
		plot
		2
		wait				# wait 2
		140
		local.a
		<cmp>
		when(<)				# (local.a<140)
			4
			set state.tint		# set state.tint 4
			plot
		done
		<proc_194>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_194>
		tail
	done
	end

proc proc_195 
	# <proc_195>()
	state.A
	state.B
	set state.x				# set state.x state.B
	set state.y				# set state.y state.A
	0
	set state.tint				# set state.tint 0
	0
	<proc_181>
	fork(1)					# <proc_181>(0)
	1
	set state.tint				# set state.tint 1
	2
	<proc_181>
	fork(1)					# <proc_181>(2)
	7
	set state.tint				# set state.tint 7
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	10
	state.y
	+
	10
	state.x
	+
	set state.x				# set state.x (state.x+10)
	set state.y				# set state.y (state.y+10)
	<proc_051>
	fork(0)					# <proc_051>()
	3
	<proc_175>
	fork(1)					# <proc_175>(3)
	9a6e:19a6
	9a7f:2186
	107e:3c08
	187f:3c8a
	0
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(9a6e:19a6, 9a7f:2186, 107e:3c08, 187f:3c8a, 0, 0, 0, 0, 0, 0, 0)
	10
	state.y
	+
	set state.y				# set state.y (state.y+10)
	187f:3c8a
	14bc:3c49
	f041:0107
	14bc:3c49
	0
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(187f:3c8a, 14bc:3c49, f041:0107, 14bc:3c49, 0, 0, 0, 0, 0, 0, 0)
	<proc_187>
	fork(0)					# <proc_187>()
	5
	22
	*					# 22*5
	wait					# wait 22*5
	0
	set state.tint				# set state.tint 0
	2
	<proc_181>
	fork(1)					# <proc_181>(2)
	1
	set state.tint				# set state.tint 1
	0
	<proc_181>
	fork(1)					# <proc_181>(0)
	0
	<proc_175>
	fork(1)					# <proc_175>(0)
	end

proc proc_196 
	# <proc_196>()
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	189c:2186
	185e:1e86
	40bf:3f08
	40bf:3f08
	9a6e:19a6
	0
	185e:1e86
	987f:14aa
	9a6e:19a6
	9a7f:2186
	107f:2c49
	040f:0f42
	<proc_188>
	fork(13)				# <proc_188>(0, 189c:2186, 185e:1e86, 40bf:3f08, 40bf:3f08, 9a6e:19a6, 0, 185e:1e86, 987f:14aa, 9a6e:19a6, 9a7f:2186, 107f:2c49, 040f:0f42)
	9a7f:2186
	107f:2c49
	0
	187f:3c8a
	9a7f:2186
	f041:0107
	9a7f:2186
	189c:2186
	f041:0107
	9a7f:2186
	187f:3c8a
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(9a7f:2186, 107f:2c49, 0, 187f:3c8a, 9a7f:2186, f041:0107, 9a7f:2186, 189c:2186, f041:0107, 9a7f:2186, 187f:3c8a, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	f860:2087
	107e:3c08
	0
	14bc:3c49
	083f:3082
	f041:0107
	9a7f:2186
	107f:2c49
	107e:3c08
	14bc:3c49
	f041:0107
	9a7f:2186
	<proc_188>
	fork(13)				# <proc_188>(0, f860:2087, 107e:3c08, 0, 14bc:3c49, 083f:3082, f041:0107, 9a7f:2186, 107f:2c49, 107e:3c08, 14bc:3c49, f041:0107, 9a7f:2186)
	0
	107f:2c49
	9a7f:2186
	14bc:3c49
	083f:3082
	f860:2087
	f041:0107
	8207:1fa2
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 107f:2c49, 9a7f:2186, 14bc:3c49, 083f:3082, f860:2087, f041:0107, 8207:1fa2, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	820f:08f0
	8523:2350
	8207:1fa2
	f880:0083
	9861:1bb6
	9246:1ea6
	14bc:3c49
	0020:2002
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 820f:08f0, 8523:2350, 8207:1fa2, f880:0083, 9861:1bb6, 9246:1ea6, 14bc:3c49, 0020:2002, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	9a7f:2186
	8523:2350
	f041:0107
	107f:2c49
	14bc:3c49
	189c:2186
	f041:0107
	f860:2087
	107e:3c08
	98bc:3ba6
	0
	187f:3c8a
	<proc_188>
	fork(13)				# <proc_188>(0, 9a7f:2186, 8523:2350, f041:0107, 107f:2c49, 14bc:3c49, 189c:2186, f041:0107, f860:2087, 107e:3c08, 98bc:3ba6, 0, 187f:3c8a)
	14bc:3c49
	f041:0107
	14bc:3c49
	0
	927f:0104
	107f:2c49
	185e:1e86
	40bf:3f08
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(14bc:3c49, f041:0107, 14bc:3c49, 0, 927f:0104, 107f:2c49, 185e:1e86, 40bf:3f08, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	f041:0107
	14bc:3c49
	107f:2c49
	98bc:3ba6
	9a7f:2186
	f041:0107
	0020:2002
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, f041:0107, 14bc:3c49, 107f:2c49, 98bc:3ba6, 9a7f:2186, f041:0107, 0020:2002, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	<proc_188>
	fork(13)				# <proc_188>(0, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002)
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0
	<proc_189>
	fork(13)				# <proc_189>(0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	987f:14aa
	189c:2186
	187f:3c8a
	9a7f:2186
	185e:1e86
	14bc:3c49
	927f:0104
	9a56:16a6
	1841:0725
	595e:1892
	820f:08f0
	9a72:26a6
	<proc_188>
	fork(13)				# <proc_188>(0, 987f:14aa, 189c:2186, 187f:3c8a, 9a7f:2186, 185e:1e86, 14bc:3c49, 927f:0104, 9a56:16a6, 1841:0725, 595e:1892, 820f:08f0, 9a72:26a6)
	f880:0083
	9a56:16a6
	14bc:3c49
	820f:08f0
	189c:2186
	9a7f:2186
	927f:0104
	185e:1e86
	f880:0083
	820f:08f0
	9a6f:11a6
	1841:0725
	0
	<proc_189>
	fork(13)				# <proc_189>(f880:0083, 9a56:16a6, 14bc:3c49, 820f:08f0, 189c:2186, 9a7f:2186, 927f:0104, 185e:1e86, f880:0083, 820f:08f0, 9a6f:11a6, 1841:0725, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	f880:0083
	14bc:3c49
	987f:14aa
	189c:2186
	187f:3c8a
	927f:0104
	9a7f:2186
	9a56:16a6
	9246:1ea6
	185e:1e86
	f880:0083
	9a6f:11a6
	<proc_188>
	fork(13)				# <proc_188>(0, f880:0083, 14bc:3c49, 987f:14aa, 189c:2186, 187f:3c8a, 927f:0104, 9a7f:2186, 9a56:16a6, 9246:1ea6, 185e:1e86, f880:0083, 9a6f:11a6)
	820f:08f0
	1841:0725
	820f:08f0
	185e:1e86
	185e:1e86
	820f:08f0
	f880:0083
	9a72:26a6
	9861:1bb6
	9246:1ea6
	9861:1bb6
	9246:1ea6
	0
	<proc_189>
	fork(13)				# <proc_189>(820f:08f0, 1841:0725, 820f:08f0, 185e:1e86, 185e:1e86, 820f:08f0, f880:0083, 9a72:26a6, 9861:1bb6, 9246:1ea6, 9861:1bb6, 9246:1ea6, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	927f:0104
	185e:1e86
	f880:0083
	9a72:26a6
	9861:1bb6
	9a56:16a6
	9246:1ea6
	820f:08f0
	185e:1e86
	9a6f:11a6
	185e:1e86
	595e:1892
	<proc_188>
	fork(13)				# <proc_188>(0, 927f:0104, 185e:1e86, f880:0083, 9a72:26a6, 9861:1bb6, 9a56:16a6, 9246:1ea6, 820f:08f0, 185e:1e86, 9a6f:11a6, 185e:1e86, 595e:1892)
	9a56:16a6
	f880:0083
	185e:1e86
	9a6f:11a6
	9a72:26a6
	9246:1ea6
	f880:0083
	9a6f:11a6
	185e:1e86
	1841:0725
	9a56:16a6
	14bc:3c49
	0
	<proc_189>
	fork(13)				# <proc_189>(9a56:16a6, f880:0083, 185e:1e86, 9a6f:11a6, 9a72:26a6, 9246:1ea6, f880:0083, 9a6f:11a6, 185e:1e86, 1841:0725, 9a56:16a6, 14bc:3c49, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	<proc_188>
	fork(13)				# <proc_188>(0, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002)
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0
	<proc_189>
	fork(13)				# <proc_189>(0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	end

proc proc_197 
	# <proc_197>()
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	40bf:3f08
	081f:1f82
	083f:3082
	f041:0107
	f860:2087
	147f:1c49
	083f:3082
	9a7f:2186
	0
	f041:0107
	823f:3f20
	107f:2c49
	<proc_188>
	fork(13)				# <proc_188>(0, 40bf:3f08, 081f:1f82, 083f:3082, f041:0107, f860:2087, 147f:1c49, 083f:3082, 9a7f:2186, 0, f041:0107, 823f:3f20, 107f:2c49)
	9a7f:2186
	14bc:3c49
	f041:0107
	9a6e:19a6
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(9a7f:2186, 14bc:3c49, f041:0107, 9a6e:19a6, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	187f:3c8a
	9a7f:2186
	f041:0107
	9a7f:2186
	189c:2186
	f041:0107
	9a7f:2186
	187f:3c8a
	0020:2002
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 187f:3c8a, 9a7f:2186, f041:0107, 9a7f:2186, 189c:2186, f041:0107, 9a7f:2186, 187f:3c8a, 0020:2002, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	107e:3c08
	9a7f:2186
	081f:1f82
	f041:0107
	107f:2c49
	14bc:3c49
	083f:3082
	f860:2087
	9c61:2396
	9a7f:2186
	0
	14bc:3c49
	<proc_188>
	fork(13)				# <proc_188>(0, 107e:3c08, 9a7f:2186, 081f:1f82, f041:0107, 107f:2c49, 14bc:3c49, 083f:3082, f860:2087, 9c61:2396, 9a7f:2186, 0, 14bc:3c49)
	083f:3082
	083f:3082
	0
	081f:1f82
	9a6e:19a6
	9a7f:2186
	107f:2c49
	9a6e:19a6
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(083f:3082, 083f:3082, 0, 081f:1f82, 9a6e:19a6, 9a7f:2186, 107f:2c49, 9a6e:19a6, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	185e:1e86
	107e:3c08
	0
	107f:2c49
	9a7f:2186
	040f:0f42
	f860:2087
	9a6e:19a6
	f860:2087
	185e:1e86
	107e:3c08
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 185e:1e86, 107e:3c08, 0, 107f:2c49, 9a7f:2186, 040f:0f42, f860:2087, 9a6e:19a6, f860:2087, 185e:1e86, 107e:3c08, 0)
	107e:3c08
	9a7f:2186
	f041:0107
	881f:1f81
	185e:1e86
	107f:2c49
	823f:2350
	0020:2002
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(107e:3c08, 9a7f:2186, f041:0107, 881f:1f81, 185e:1e86, 107f:2c49, 823f:2350, 0020:2002, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	14bc:3c49
	189c:2186
	f041:0107
	f860:2087
	040f:0f42
	14bc:3c49
	f041:0107
	9a7f:2186
	0
	107f:2c49
	9a7f:2186
	14bc:3c49
	<proc_188>
	fork(13)				# <proc_188>(0, 14bc:3c49, 189c:2186, f041:0107, f860:2087, 040f:0f42, 14bc:3c49, f041:0107, 9a7f:2186, 0, 107f:2c49, 9a7f:2186, 14bc:3c49)
	083f:3082
	f860:2087
	f041:0107
	8207:1fa2
	0
	927f:0104
	185e:1e86
	083f:3082
	187f:3c8a
	0020:2002
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(083f:3082, f860:2087, f041:0107, 8207:1fa2, 0, 927f:0104, 185e:1e86, 083f:3082, 187f:3c8a, 0020:2002, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	<proc_188>
	fork(13)				# <proc_188>(0, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002)
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0
	<proc_189>
	fork(13)				# <proc_189>(0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	187f:3c8a
	9a7f:2186
	9246:1ea6
	185e:1e86
	14bc:3c49
	189c:2186
	987f:14aa
	1841:0725
	595e:1892
	f880:0083
	9a56:16a6
	185e:1e86
	<proc_188>
	fork(13)				# <proc_188>(0, 187f:3c8a, 9a7f:2186, 9246:1ea6, 185e:1e86, 14bc:3c49, 189c:2186, 987f:14aa, 1841:0725, 595e:1892, f880:0083, 9a56:16a6, 185e:1e86)
	595e:1892
	1841:0725
	9861:1bb6
	9a56:16a6
	185e:1e86
	189c:2186
	14bc:3c49
	987f:14aa
	187f:3c8a
	9a7f:2186
	1841:0725
	595e:1892
	0
	<proc_189>
	fork(13)				# <proc_189>(595e:1892, 1841:0725, 9861:1bb6, 9a56:16a6, 185e:1e86, 189c:2186, 14bc:3c49, 987f:14aa, 187f:3c8a, 9a7f:2186, 1841:0725, 595e:1892, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	9246:1ea6
	9a72:26a6
	1841:0725
	9a56:16a6
	185e:1e86
	987f:14aa
	14bc:3c49
	189c:2186
	595e:1892
	187f:3c8a
	987f:14aa
	1841:0725
	<proc_188>
	fork(13)				# <proc_188>(0, 9246:1ea6, 9a72:26a6, 1841:0725, 9a56:16a6, 185e:1e86, 987f:14aa, 14bc:3c49, 189c:2186, 595e:1892, 187f:3c8a, 987f:14aa, 1841:0725)
	9a56:16a6
	185e:1e86
	9a7f:2186
	927f:0104
	595e:1892
	987f:14aa
	927f:0104
	1841:0725
	9a56:16a6
	f880:0083
	185e:1e86
	9a72:26a6
	0
	<proc_189>
	fork(13)				# <proc_189>(9a56:16a6, 185e:1e86, 9a7f:2186, 927f:0104, 595e:1892, 987f:14aa, 927f:0104, 1841:0725, 9a56:16a6, f880:0083, 185e:1e86, 9a72:26a6, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	595e:1892
	1841:0725
	9246:1ea6
	1841:0725
	9a56:16a6
	14bc:3c49
	9246:1ea6
	189c:2186
	987f:14aa
	187f:3c8a
	9a7f:2186
	9246:1ea6
	<proc_188>
	fork(13)				# <proc_188>(0, 595e:1892, 1841:0725, 9246:1ea6, 1841:0725, 9a56:16a6, 14bc:3c49, 9246:1ea6, 189c:2186, 987f:14aa, 187f:3c8a, 9a7f:2186, 9246:1ea6)
	14bc:3c49
	9a56:16a6
	1841:0725
	f880:0083
	9a72:26a6
	9861:1bb6
	9a6f:11a6
	595e:1892
	1841:0725
	9a56:16a6
	9a6f:11a6
	595e:1892
	0
	<proc_189>
	fork(13)				# <proc_189>(14bc:3c49, 9a56:16a6, 1841:0725, f880:0083, 9a72:26a6, 9861:1bb6, 9a6f:11a6, 595e:1892, 1841:0725, 9a56:16a6, 9a6f:11a6, 595e:1892, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	<proc_188>
	fork(13)				# <proc_188>(0, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002)
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0020:2002
	0
	<proc_189>
	fork(13)				# <proc_189>(0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0020:2002, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_188>
	fork(13)				# <proc_188>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
	<proc_189>
	fork(13)				# <proc_189>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	8
	state.y
	+
	set state.y				# set state.y (state.y+8)
	26
	state.C
	*					# state.C*26
	wait					# wait state.C*26
	end

proc proc_198 
	# <proc_198>(196, 50, 70, <proc_001>)
	# <proc_198>(101, 11, 30, <proc_001>)
	# <proc_198>(101, 11, 30, <proc_200>)
	# <proc_198>((12*local.a+1), 15, 28, <proc_002>)
	# <proc_198>(66, 20, 20, <proc_001>)
	# <proc_198>(66, 20, 20, <proc_006>)
	# <proc_198>(176, 45, 42, <proc_006>)
	# <proc_198>(128, 19, 20, <proc_006>)
	# <proc_198>(37, 10, 10, <proc_007>)
	# <proc_198>(50, 140, 20, <proc_006>)
	0
	set state.size				# set state.size 0
	0
	set state.face				# set state.face 0
	local.c
	local.a
	/					# local.a/local.c
	1
	/					# 1/local.a/local.c
	local.c
	local.b
	/					# local.b/local.c
	1
	/					# 1/local.b/local.c
	local.a
	local.e
	local.d
	<proc_199>
	fork(3)					# <proc_199>(local.a, local.e, local.d)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	local.b
	local.f
	local.d
	<proc_199>
	fork(3)					# <proc_199>(local.b, local.f, local.d)
	1
	local.b
	-
	move					# move (local.b-1)
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	local.a
	move					# move local.a
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	local.a
	local.e
	local.d
	<proc_199>
	fork(3)					# <proc_199>(local.a, local.e, local.d)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	<proc_199>
	local.b
	local.f
	local.d
	set local.c				# set local.c local.d
	set local.b				# set local.b local.f
	set local.a				# set local.a local.b
	set state.proc				# set state.proc <proc_199>
	pop
	pop
	pop
	tail
	end

proc proc_199 
	# <proc_199>(local.a, local.e, local.d)
	# <proc_199>(local.b, local.f, local.d)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		local.c
		fork(0)				# local.c()
		1
		move				# move 1
		local.b
		wait				# wait local.b
		<proc_199>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_199>
		tail
	done
	end

proc proc_200 
	0
	set state.tint				# set state.tint 0
	0
	set state.size				# set state.size 0
	plot
	end

proc proc_201 
	# <proc_201>(164, 128, 30, <proc_006>, 30, 30)
	0
	set state.size				# set state.size 0
	0
	set state.face				# set state.face 0
	local.c
	local.e
	/					# local.e/local.c
	1
	/					# 1/local.e/local.c
	local.c
	local.f
	/					# local.f/local.c
	1
	/					# 1/local.f/local.c
	local.e
	local.g
	local.d
	<proc_199>
	fork(3)					# <proc_199>(local.e, local.g, local.d)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	local.f
	local.h
	local.d
	<proc_199>
	fork(3)					# <proc_199>(local.f, local.h, local.d)
	1
	local.b
	-
	move					# move (local.b-1)
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	local.a
	move					# move local.a
	128
	state.face
	+
	set state.face				# set state.face (state.face+128)
	local.e
	local.g
	local.d
	<proc_199>
	fork(3)					# <proc_199>(local.e, local.g, local.d)
	64
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-64))
	<proc_199>
	local.f
	local.h
	local.d
	set local.c				# set local.c local.d
	set local.b				# set local.b local.h
	set local.a				# set local.a local.f
	set state.proc				# set state.proc <proc_199>
	pop
	pop
	pop
	pop
	pop
	tail
	end

proc proc_202 
	# <proc_202>(local.a, <proc_006>, 1, 1)
	local.a
	5
	local.b
	local.c
	local.d
	<proc_204>
	fork(5)					# <proc_204>(local.a, 5, local.b, local.c, local.d)
	end

proc proc_203 
	local.a
	local.b
	0
	1
	<proc_202>
	fork(4)					# <proc_202>(local.a, local.b, 0, 1)
	end

proc proc_204 
	# <proc_204>(local.a, 5, local.b, local.c, local.d)
	local.b
	when(!=)				# local.b !=
		6
		local.a
		local.c
		local.e
		<proc_205>
		fork(4)				# <proc_205>(6, local.a, local.c, local.e)
		state.F
		move				# move state.F
		local.d
		wait				# wait local.d
		<proc_204>
		6
		local.a
		<ror>
		1
		local.b
		-
		set local.b			# set local.b (local.b-1)
		set local.a			# set local.a (local.a<ror>6)
		set state.proc			# set state.proc <proc_204>
		tail
	done
	end

proc proc_205 
	# <proc_205>(6, local.a, local.c, local.e)
	64
	state.face
	+
	set state.face				# set state.face (state.face+64)
	<proc_206>
	set state.proc				# set state.proc <proc_206>
	tail
	end

proc proc_206 
	local.a
	when(!=)				# local.a !=
		1
		local.b
		&
		when(!=)			# (local.b&1) !=
			local.c
			fork(0)			# local.c()
		done
		state.F
		move				# move state.F
		local.d
		wait				# wait local.d
		<proc_206>
		1
		local.a
		-
		1
		local.b
		<ror>
		set local.b			# set local.b (local.b<ror>1)
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_206>
		tail
	done
	end

proc proc_207 
	# <proc_207>(local.a)
	1
	set state.F				# set state.F 1
	local.a
	state.D
	0
	0
	<proc_202>
	fork(4)					# <proc_202>(local.a, state.D, 0, 0)
	end

proc proc_208 
	# <proc_208>(f860:2087, 107e:3c08, f860:2087, f041:0107, f860:2087, f041:0107, 14bc:3c49, 083f:3082, f860:2087, 9a6e:19a6, 9a7f:2186)
	# <proc_208>(081f:1f82, 9a6e:19a6, 9a7f:2186, 107f:2c49, 107e:3c08, 14bc:3c49, 40bf:3f08, 9a7f:2186, 0, 0, 0)
	# <proc_208>(147f:1c49, 14bc:3c49, 9a6e:19a6, 9a6e:19a6, 881f:1f81, 185e:1e86, 107f:2c49, 187f:3c8a, 0, 0, 0)
	# <proc_208>(083f:3082, 185e:1e86, 14bc:3c49, 187f:3c8a, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0, 0, 0)
	# <proc_208>(9a6e:19a6, 9a7f:2186, 14bc:3c49, 107f:2c49, 189c:2186, 823f:3f20, 0, 0, 0, 0, 0)
	# <proc_208>(40bf:3f08, 9a7f:2186, 9a6e:19a6, 9a6e:19a6, 14bc:3c49, 98bc:3ba6, f860:2087, 107e:3c08, 98bc:3ba6, 0, 0)
	# <proc_208>(187f:3c8a, 9a7f:2186, 40bf:3f08, 185e:1e86, 9a6e:19a6, 0, 0, 0, 0, 0, 0)
	# <proc_208>(f041:0107, 107f:2c49, 14bc:3c49, 189c:2186, 823f:2350, 9a7f:2186, 107f:2c49, 0, 0, 0, 0)
	# <proc_208>(9a6e:19a6, 189c:2186, 14bc:3c49, 107e:3c08, 107e:3c08, 9a7f:2186, 107f:2c49, 0, 0, 0, 0)
	# <proc_208>(189c:2186, 107f:2c49, 14bc:3c49, 189c:2186, 823f:2350, 9a7f:2186, 107f:2c49, 0, 0, 0, 0)
	local.a
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.a, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.b
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.b, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.c
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.c, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.d
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.d, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.e
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.e, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.f
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.f, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.g
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.g, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.h
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.h, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.i
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.i, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	local.j
	state.D
	1
	1
	<proc_202>
	fork(4)					# <proc_202>(local.j, state.D, 1, 1)
	state.E
	move					# move state.E
	3
	wait					# wait 3
	<proc_202>
	local.k
	state.D
	1
	1
	set local.d				# set local.d 1
	set local.c				# set local.c 1
	set local.b				# set local.b state.D
	set local.a				# set local.a local.k
	set state.proc				# set state.proc <proc_202>
	pop
	pop
	pop
	pop
	pop
	pop
	pop
	tail
	end

proc proc_209 
	# <proc_209>()
	9
	165
	+
	2
	280
	-
	set state.x				# set state.x (280-2)
	set state.y				# set state.y (165+9)
	7
	set state.tint				# set state.tint 7
	37
	12
	10
	<proc_006>
	<proc_198>
	fork(4)					# <proc_198>(37, 12, 10, <proc_006>)
	40
	wait					# wait 40
	166
	280
	set state.x				# set state.x 280
	set state.y				# set state.y 166
	1
	set state.F				# set state.F 1
	7
	set state.E				# set state.E 7
	<proc_006>
	set state.D				# set state.D <proc_006>
	7
	set state.tint				# set state.tint 7
	f880:0083
	9861:1bb6
	0
	9861:1bb6
	1841:0725
	0
	0
	0
	0
	0
	0
	<proc_208>
	fork(11)				# <proc_208>(f880:0083, 9861:1bb6, 0, 9861:1bb6, 1841:0725, 0, 0, 0, 0, 0, 0)
	3
	42
	<proc_210>
	fork(2)					# <proc_210>(3, 42)
	end

proc proc_210 
	# <proc_210>(3, 42)
	0
	local.b
	<cmp>
	when(>)					# (local.b>0)
		<proc_212>
		fork(0)				# <proc_212>()
		50
		wait				# wait 50
		<proc_210>
		1
		local.b
		-
		set local.b			# set local.b (local.b-1)
		set state.proc			# set state.proc <proc_210>
		tail
	else
		<proc_211>
		fork(0)				# <proc_211>()
		3
		local.a
		<cmp>
		when(==)			# (local.a==3)
			f880:0083
			9861:1bb6
			0
			9861:1bb6
			9a56:16a6
			0
			0
			0
			0
			0
			0
			<proc_208>
			fork(11)		# <proc_208>(f880:0083, 9861:1bb6, 0, 9861:1bb6, 9a56:16a6, 0, 0, 0, 0, 0, 0)
		done
		2
		local.a
		<cmp>
		when(==)			# (local.a==2)
			f880:0083
			9861:1bb6
			0
			9861:1bb6
			9246:1ea6
			0
			0
			0
			0
			0
			0
			<proc_208>
			fork(11)		# <proc_208>(f880:0083, 9861:1bb6, 0, 9861:1bb6, 9246:1ea6, 0, 0, 0, 0, 0, 0)
		done
		1
		local.a
		<cmp>
		when(==)			# (local.a==1)
			f880:0083
			9861:1bb6
			0
			820f:08f0
			185e:1e86
			0
			0
			0
			0
			0
			0
			<proc_208>
			fork(11)		# <proc_208>(f880:0083, 9861:1bb6, 0, 820f:08f0, 185e:1e86, 0, 0, 0, 0, 0, 0)
		done
		0
		local.a
		<cmp>
		when(>)				# (local.a>0)
			<proc_210>
			1
			local.a
			-
			60
			set local.b		# set local.b 60
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_210>
			tail
		done
	done
	end

proc proc_211 
	# <proc_211>()
	3
	state.y
	+
	3
	state.x
	+
	set state.x				# set state.x (state.x+3)
	set state.y				# set state.y (state.y+3)
	4
	set state.tint				# set state.tint 4
	4
	set state.size				# set state.size 4
	plot
	9
	move					# move 9
	plot
	9
	move					# move 9
	plot
	9
	move					# move 9
	plot
	9
	move					# move 9
	end

proc proc_212 
	# <proc_212>()
	state.x
	state.y
	1
	state.y
	+
	16
	state.x
	+
	set state.x				# set state.x (state.x+16)
	set state.y				# set state.y (state.y+1)
	0
	set state.size				# set state.size 0
	7
	set state.tint				# set state.tint 7
	plot
	3
	state.y
	+
	set state.y				# set state.y (state.y+3)
	plot
	25
	wait					# wait 25
	local.b
	local.a
	set state.x				# set state.x local.a
	set state.y				# set state.y local.b
	1
	state.y
	+
	16
	state.x
	+
	set state.x				# set state.x (state.x+16)
	set state.y				# set state.y (state.y+1)
	0
	set state.size				# set state.size 0
	4
	set state.tint				# set state.tint 4
	plot
	3
	state.y
	+
	set state.y				# set state.y (state.y+3)
	plot
	end

proc proc_213 
	90
	20
	set state.x				# set state.x 20
	set state.y				# set state.y 90
	192
	set state.face				# set state.face 192
	1
	set state.size				# set state.size 1
	50
	<proc_159>
	fork(1)					# <proc_159>(50)
	40
	wait					# wait 40
	40
	3
	<proc_214>
	fork(2)					# <proc_214>(40, 3)
	end

proc proc_214 
	# <proc_214>(40, 3)
	0
	local.b
	<cmp>
	when(>)					# (local.b>0)
		192
		set state.face			# set state.face 192
		1
		set state.size			# set state.size 1
		3
		set state.tint			# set state.tint 3
		local.a
		seed				# local.a
		20
		set state.B			# set state.B 20
		50
		<proc_215>
		fork(1)				# <proc_215>(50)
		200
		wait				# wait 200
		0
		local.b
		<cmp>
		when(>)				# (local.b>0)
			1
			set state.tint		# set state.tint 1
		else
			0
			set state.tint		# set state.tint 0
		done
		50
		<proc_159>
		fork(1)				# <proc_159>(50)
		40
		wait				# wait 40
		<proc_214>
		local.a
		local.a
		*				# local.a*local.a
		1
		local.b
		-
		set local.b			# set local.b (local.b-1)
		set local.a			# set local.a local.a*local.a
		set state.proc			# set state.proc <proc_214>
		tail
	done
	end

proc proc_215 
	# <proc_215>(50)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		rand
		seed				# rand
		<proc_216>
		fork(0)				# <proc_216>()
		64
		state.face
		+
		set state.face			# set state.face (state.face+64)
		4
		move				# move 4
		64
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-64))
		1
		wait				# wait 1
		<proc_215>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_215>
		tail
	done
	end

proc proc_216 
	# <proc_216>()
	state.B
	rand
	*					# rand*state.B
	local.a
	local.a
	1
	70
	<proc_217>
	fork(4)					# <proc_217>(local.a, local.a, 1, 70)
	end

proc proc_217 
	# <proc_217>(local.a, local.a, 1, 70)
	0
	local.d
	<cmp>
	when(>)					# (local.d>0)
		0
		local.a
		<cmp>
		when(>)				# (local.a>0)
			plot
			local.c
			move			# move local.c
			plot
			2
			wait			# wait 2
			<proc_217>
			1
			local.a
			-
			1
			local.d
			-
			set local.d		# set local.d (local.d-1)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_217>
			tail
		else
			2
			state.B
			rand
			*			# rand*state.B
			/			# rand*state.B/2
			3
			local.c
			*			# local.c*3
			move			# move local.c*3
			0
			local.c
			<cmp>
			when(>)			# (local.c>0)
				2
				set state.tint	# set state.tint 2
				<proc_217>
				local.b
				1
				~
				1
				local.d
				-
				set local.d	# set local.d (local.d-1)
				set local.c	# set local.c (-1)
				set local.a	# set local.a local.b
				set state.proc	# set state.proc <proc_217>
				pop
				tail
			else
				3
				set state.tint	# set state.tint 3
				<proc_217>
				local.e
				local.e
				1
				1
				local.d
				-
				set local.d	# set local.d (local.d-1)
				set local.c	# set local.c 1
				set local.b	# set local.b local.e
				set local.a	# set local.a local.e
				set state.proc	# set state.proc <proc_217>
				pop
				tail
			done
		done
	else
		state.A
		set state.tint			# set state.tint state.A
		plot
	done
	end

proc proc_218 
	90
	160
	set state.x				# set state.x 160
	set state.y				# set state.y 90
	10
	set state.A				# set state.A 10
	3
	set state.tint				# set state.tint 3
	0
	set state.face				# set state.face 0
	0
	<proc_219>
	fork(1)					# <proc_219>(0)
	end

proc proc_219 
	# <proc_219>(0)
	state.A
	local.a
	<cmp>
	when(<)					# (local.a<state.A)
		local.a
		<proc_221>
		fork(1)				# <proc_221>(local.a)
		1
		wait				# wait 1
		<proc_219>
		1
		local.a
		+
		set local.a			# set local.a (local.a+1)
		set state.proc			# set state.proc <proc_219>
		tail
	else
		<proc_220>
		20
		set local.a			# set local.a 20
		set state.proc			# set state.proc <proc_220>
		tail
	done
	end

proc proc_220 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		state.A
		<proc_221>
		fork(1)				# <proc_221>(state.A)
		1
		move				# move 1
		1
		wait				# wait 1
		<proc_220>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_220>
		tail
	done
	end

proc proc_221 
	# <proc_221>(local.a)
	# <proc_221>(state.A)
	3
	set state.tint				# set state.tint 3
	local.a
	set state.size				# set state.size local.a
	plot
	0
	set state.tint				# set state.tint 0
	1
	local.a
	-
	set state.size				# set state.size (local.a-1)
	plot
	end

proc proc_222 
	1337
	seed					# 1337
	160
	set state.H				# set state.H 160
	70
	set state.G				# set state.G 70
	145
	50
	set state.x				# set state.x 50
	set state.y				# set state.y 145
	1
	wait					# wait 1
	145
	50
	set state.x				# set state.x 50
	set state.y				# set state.y 145
	0
	set state.B				# set state.B 0
	3
	set state.A				# set state.A 3
	0
	<proc_225>
	fork(1)					# <proc_225>(0)
	state.G
	state.H
	set state.x				# set state.x state.H
	set state.y				# set state.y state.G
	<proc_226>
	fork(0)					# <proc_226>()
	64
	set state.face				# set state.face 64
	<proc_229>
	fork(0)					# <proc_229>()
	90
	state.face
	+
	set state.face				# set state.face (state.face+90)
	<proc_229>
	fork(0)					# <proc_229>()
	90
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-90))
	90
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-90))
	<proc_229>
	fork(0)					# <proc_229>()
	0
	set state.size				# set state.size 0
	6
	set state.tint				# set state.tint 6
	5
	40
	*					# 40*5
	wait					# wait 40*5
	0
	set state.size				# set state.size 0
	3
	set state.tint				# set state.tint 3
	<proc_232>
	fork(0)					# <proc_232>()
	400
	<proc_239>
	fork(1)					# <proc_239>(400)
	7
	set state.tint				# set state.tint 7
	64
	set state.face				# set state.face 64
	30
	wait					# wait 30
	<proc_230>
	fork(0)					# <proc_230>()
	90
	state.face
	+
	set state.face				# set state.face (state.face+90)
	30
	wait					# wait 30
	<proc_230>
	fork(0)					# <proc_230>()
	90
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-90))
	90
	~
	state.face
	+
	set state.face				# set state.face (state.face+(-90))
	<proc_230>
	set state.proc				# set state.proc <proc_230>
	tail
	end

proc proc_223 
	# <proc_223>()
	40
	set state.size				# set state.size 40
	5
	set state.tint				# set state.tint 5
	40
	40
	set state.x				# set state.x 40
	set state.y				# set state.y 40
	4
	set state.tint				# set state.tint 4
	<proc_224>
	fork(0)					# <proc_224>()
	0
	set state.tint				# set state.tint 0
	<proc_224>
	fork(0)					# <proc_224>()
	1
	wait					# wait 1
	80
	state.y
	+
	set state.y				# set state.y (state.y+80)
	4
	set state.tint				# set state.tint 4
	<proc_224>
	fork(0)					# <proc_224>()
	0
	set state.tint				# set state.tint 0
	<proc_224>
	fork(0)					# <proc_224>()
	1
	wait					# wait 1
	80
	state.y
	+
	set state.y				# set state.y (state.y+80)
	4
	set state.tint				# set state.tint 4
	<proc_224>
	fork(0)					# <proc_224>()
	0
	set state.tint				# set state.tint 0
	<proc_224>
	set state.proc				# set state.proc <proc_224>
	tail
	end

proc proc_224 
	# <proc_224>()
	plot
	80
	move					# move 80
	plot
	80
	move					# move 80
	plot
	80
	move					# move 80
	plot
	end

proc proc_225 
	# <proc_225>(0)
	state.A
	set state.tint				# set state.tint state.A
	0
	set state.size				# set state.size 0
	<proc_022>
	fork(0)					# <proc_022>()
	local.a
	30
	+
	move					# move (30+local.a)
	1
	wait					# wait 1
	<proc_025>
	fork(0)					# <proc_025>()
	local.a
	30
	+
	move					# move (30+local.a)
	1
	wait					# wait 1
	<proc_026>
	fork(0)					# <proc_026>()
	local.a
	30
	+
	move					# move (30+local.a)
	1
	wait					# wait 1
	<proc_027>
	fork(0)					# <proc_027>()
	local.a
	30
	+
	move					# move (30+local.a)
	1
	wait					# wait 1
	<proc_028>
	fork(0)					# <proc_028>()
	local.a
	30
	+
	move					# move (30+local.a)
	1
	wait					# wait 1
	<proc_025>
	fork(0)					# <proc_025>()
	local.a
	30
	+
	move					# move (30+local.a)
	1
	wait					# wait 1
	<proc_023>
	fork(0)					# <proc_023>()
	local.a
	30
	+
	move					# move (30+local.a)
	1
	wait					# wait 1
	<proc_024>
	set state.proc				# set state.proc <proc_024>
	pop
	tail
	end

proc proc_226 
	# <proc_226>()
	36
	local.a
	set state.size				# set state.size local.a
	1
	set state.tint				# set state.tint 1
	draw
	3
	set state.tint				# set state.tint 3
	1
	local.a
	-
	set state.size				# set state.size (local.a-1)
	draw
	1
	set state.tint				# set state.tint 1
	2
	local.a
	-
	set state.size				# set state.size (local.a-2)
	draw
	0
	set state.tint				# set state.tint 0
	3
	local.a
	-
	set state.size				# set state.size (local.a-3)
	draw
	end

proc proc_227 
	192
	set state.face				# set state.face 192
	0
	set state.size				# set state.size 0
	rand
	seed					# rand
	30
	9
	rand
	*					# rand*9
	<proc_228>
	fork(2)					# <proc_228>(30, rand*9)
	end

proc proc_228 
	# <proc_228>(30, rand*9)
	0
	state.y
	<cmp>
	when(>)					# (state.y>0)
		3
		rand
		*				# rand*3
		5
		+
		set state.tint			# set state.tint (5+rand*3)
		plot
		1.5
		move				# move 1.5
		1
		wait				# wait 1
		5
		local.b
		<cmp>
		when(<)				# (local.b<5)
			2.5
			state.face
			+
			set state.face		# set state.face (state.face+2.5)
		else
			2.5
			~
			state.face
			+
			set state.face		# set state.face (state.face+(-2.5))
		done
		10
		local.b
		<cmp>
		when(>)				# (local.b>10)
			<proc_228>
			1
			local.a
			-
			0
			set local.b		# set local.b 0
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_228>
			tail
		else
			<proc_228>
			1
			local.a
			-
			1
			local.b
			+
			set local.b		# set local.b (local.b+1)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_228>
			tail
		done
	done
	end

proc proc_229 
	# <proc_229>()
	0015:f000
	move					# move 0015:f000
	3
	set state.size				# set state.size 3
	1
	set state.tint				# set state.tint 1
	draw
	2
	set state.size				# set state.size 2
	3
	set state.tint				# set state.tint 3
	draw
	1
	set state.size				# set state.size 1
	1
	set state.tint				# set state.tint 1
	draw
	end

proc proc_230 
	# <proc_230>()
	0015:f000
	move					# move 0015:f000
	<proc_231>
	set state.proc				# set state.proc <proc_231>
	tail
	end

proc proc_231 
	1
	set state.C				# set state.C 1
	0
	set state.A				# set state.A 0
	0
	set state.A				# set state.A 0
	<proc_234>
	set state.B				# set state.B <proc_234>
	20
	set state.A				# set state.A 20
	7
	b604:a82c
	0
	0
	<proc_233>
	fork(4)					# <proc_233>(7, b604:a82c, 0, 0)
	end

proc proc_232 
	# <proc_232>()
	1
	36
	-
	set state.C				# set state.C (36-1)
	0
	set state.A				# set state.A 0
	0
	set state.A				# set state.A 0
	<proc_234>
	set state.B				# set state.B <proc_234>
	16
	set state.A				# set state.A 16
	16
	b83f:741d
	6e92:5ca0
	0
	<proc_233>
	fork(4)					# <proc_233>(16, b83f:741d, 6e92:5ca0, 0)
	2
	wait					# wait 2
	16
	6e92:5ca0
	b83f:741d
	2
	<proc_233>
	fork(4)					# <proc_233>(16, 6e92:5ca0, b83f:741d, 2)
	2
	wait					# wait 2
	16
	4a37:62e5
	819f:d0cb
	4
	<proc_233>
	fork(4)					# <proc_233>(16, 4a37:62e5, 819f:d0cb, 4)
	2
	wait					# wait 2
	16
	819f:d0cb
	4a37:62e5
	6
	<proc_233>
	fork(4)					# <proc_233>(16, 819f:d0cb, 4a37:62e5, 6)
	2
	wait					# wait 2
	16
	b83f:741d
	6e92:5ca0
	32
	8
	+
	<proc_233>
	fork(4)					# <proc_233>(16, b83f:741d, 6e92:5ca0, (8+32))
	2
	wait					# wait 2
	16
	6e92:5ca0
	b83f:741d
	32
	10
	+
	<proc_233>
	fork(4)					# <proc_233>(16, 6e92:5ca0, b83f:741d, (10+32))
	2
	wait					# wait 2
	16
	4a37:62e5
	819f:d0cb
	64
	12
	+
	<proc_233>
	fork(4)					# <proc_233>(16, 4a37:62e5, 819f:d0cb, (12+64))
	2
	wait					# wait 2
	16
	819f:d0cb
	4a37:62e5
	64
	14
	+
	<proc_233>
	fork(4)					# <proc_233>(16, 819f:d0cb, 4a37:62e5, (14+64))
	end

proc proc_233 
	# <proc_233>(7, b604:a82c, 0, 0)
	# <proc_233>(16, b83f:741d, 6e92:5ca0, 0)
	# <proc_233>(16, 6e92:5ca0, b83f:741d, 2)
	# <proc_233>(16, 4a37:62e5, 819f:d0cb, 4)
	# <proc_233>(16, 819f:d0cb, 4a37:62e5, 6)
	# <proc_233>(16, b83f:741d, 6e92:5ca0, (8+32))
	# <proc_233>(16, 6e92:5ca0, b83f:741d, (10+32))
	# <proc_233>(16, 4a37:62e5, 819f:d0cb, (12+64))
	# <proc_233>(16, 819f:d0cb, 4a37:62e5, (14+64))
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		16
		15
		local.b
		&
		*				# (local.b&15)*16
		local.d
		+
		set state.face			# set state.face (local.d+(local.b&15)*16)
		127
		rand
		*				# rand*127
		state.B
		fork(1)				# state.B(rand*127)
		14
		wait				# wait 14
		9
		local.a
		<cmp>
		when(==)			# (local.a==9)
			<proc_233>
			1
			local.a
			-
			local.c
			0
			set local.c		# set local.c 0
			set local.b		# set local.b local.c
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_233>
			tail
		else
			<proc_233>
			1
			local.a
			-
			4
			local.b
			<ror>
			set local.b		# set local.b (local.b<ror>4)
			set local.a		# set local.a (local.a-1)
			set state.proc		# set state.proc <proc_233>
			tail
		done
	else
		4
		set state.size			# set state.size 4
		0
		set state.tint			# set state.tint 0
		plot
	done
	end

proc proc_234 
	0
	set state.tint				# set state.tint 0
	1
	set state.size				# set state.size 1
	1
	state.C
	-
	move					# move (state.C-1)
	draw
	<proc_227>
	fork(0)					# <proc_227>()
	2
	move					# move 2
	draw
	end

proc proc_235 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		128
		state.face
		+
		set state.face			# set state.face (state.face+128)
		127
		rand
		*				# rand*127
		state.B
		fork(1)				# state.B(rand*127)
		state.A
		wait				# wait state.A
		<proc_235>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_235>
		tail
	done
	end

proc proc_236 
	3
	rand
	*					# rand*3
	1
	+
	set state.tint				# set state.tint (1+rand*3)
	local.a
	state.face
	+
	set state.face				# set state.face (state.face+local.a)
	rand
	state.A
	*					# state.A*rand
	state.C
	+
	move					# move (state.C+state.A*rand)
	state.A
	rand
	*					# rand*state.A
	set state.size				# set state.size rand*state.A
	draw
	end

proc proc_237 
	0
	set state.tint				# set state.tint 0
	2
	set state.size				# set state.size 2
	local.a
	state.face
	+
	set state.face				# set state.face (state.face+local.a)
	state.C
	move					# move state.C
	draw
	<proc_227>
	set state.proc				# set state.proc <proc_227>
	pop
	tail
	end

proc proc_238 
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		plot
		0000:e666
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-0000:e666))
		1
		move				# move 1
		1
		wait				# wait 1
		<proc_238>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_238>
		tail
	done
	end

proc proc_239 
	# <proc_239>(400)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		20
		state.G
		-
		30
		state.H
		-
		set state.x			# set state.x (state.H-30)
		set state.y			# set state.y (state.G-20)
		4
		set state.tint			# set state.tint 4
		70
		set state.size			# set state.size 70
		plot
		1
		wait				# wait 1
		<proc_239>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_239>
		tail
	done
	end

proc proc_240 
	0
	0
	set state.x				# set state.x 0
	set state.y				# set state.y 0
	0
	set state.face				# set state.face 0
	1
	set state.size				# set state.size 1
	61
	<proc_241>
	fork(1)					# <proc_241>(61)
	end

proc proc_241 
	# <proc_241>(61)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		90
		<proc_242>
		fork(1)				# <proc_242>(90)
		64
		state.face
		+
		set state.face			# set state.face (state.face+64)
		3
		move				# move 3
		64
		~
		state.face
		+
		set state.face			# set state.face (state.face+(-64))
		rand
		seed				# rand
		1
		wait				# wait 1
		<proc_241>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_241>
		tail
	done
	end

proc proc_242 
	# <proc_242>(90)
	0
	local.a
	<cmp>
	when(>)					# (local.a>0)
		3
		rand
		*				# rand*3
		5
		+
		set state.tint			# set state.tint (5+rand*3)
		plot
		3
		move				# move 3
		3
		rand
		*				# rand*3
		1
		+
		wait				# wait (1+rand*3)
		<proc_242>
		1
		local.a
		-
		set local.a			# set local.a (local.a-1)
		set state.proc			# set state.proc <proc_242>
		tail
	done
	end

proc proc_243 
	BC_END_OF_SCRIPT
done
BC_END_OF_SCRIPT
